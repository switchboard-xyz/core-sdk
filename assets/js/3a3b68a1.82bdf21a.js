"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8172],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>g});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(a),g=n,m=u["".concat(l,".").concat(g)]||u[g]||p[g]||o;return a?r.createElement(m,s(s({ref:t},d),{},{components:a})):r.createElement(m,s({ref:t},d))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},35417:(e,t,a)=>{a.d(t,{Z:()=>N});var r=a(86886),n=a(67294),o=a(44267),s=a(15861),i=a(21519),l=a(80102),c=a(83117),d=a(86010),p=a(94780),u=a(33616),g=a(90948),m=a(34867);function v(e){return(0,m.Z)("MuiCardHeader",e)}const b=(0,a(1588).Z)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var f=a(85893);const h=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],y=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,t)=>(0,c.Z)({[`& .${b.title}`]:t.title,[`& .${b.subheader}`]:t.subheader},t.root)})({display:"flex",alignItems:"center",padding:16}),k=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,t)=>t.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),w=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,t)=>t.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),x=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,t)=>t.content})({flex:"1 1 auto"}),Z=n.forwardRef((function(e,t){const a=(0,u.Z)({props:e,name:"MuiCardHeader"}),{action:r,avatar:n,className:o,component:i="div",disableTypography:g=!1,subheader:m,subheaderTypographyProps:b,title:Z,titleTypographyProps:_}=a,O=(0,l.Z)(a,h),j=(0,c.Z)({},a,{component:i,disableTypography:g}),P=(e=>{const{classes:t}=e;return(0,p.Z)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},v,t)})(j);let E=Z;null==E||E.type===s.Z||g||(E=(0,f.jsx)(s.Z,(0,c.Z)({variant:n?"body2":"h5",className:P.title,component:"span",display:"block"},_,{children:E})));let T=m;return null==T||T.type===s.Z||g||(T=(0,f.jsx)(s.Z,(0,c.Z)({variant:n?"body2":"body1",className:P.subheader,color:"text.secondary",component:"span",display:"block"},b,{children:T}))),(0,f.jsxs)(y,(0,c.Z)({className:(0,d.Z)(P.root,o),as:i,ref:t,ownerState:j},O,{children:[n&&(0,f.jsx)(k,{className:P.avatar,ownerState:j,children:n}),(0,f.jsxs)(x,{className:P.content,ownerState:j,children:[E,T]}),r&&(0,f.jsx)(w,{className:P.action,ownerState:j,children:r})]}))}));var _=a(44073),O=a(39960),j=a(13264),P=a(92949);const E=(0,j.Z)(_.Z)((e=>{let{theme:t,dark:a}=e;return{display:"flex",flexDirection:"row",justifyItems:"baseline",background:a?"rgba(42, 56, 68, 1)":"rgba(255, 255, 255, 0.6)",border:(a?.15:.1)+"rem solid var(--ifm-navbar-link-color)",borderRadius:"13.2px",boxShadow:"0 6px 7px 5px rgba(107 107 107, 0.03)",boxSizing:"border-box",width:"100%",height:"100%",verticalAlign:"middle",textDecoration:"none",[t.breakpoints.down(300)]:{paddingLeft:""},transition:"transform 0.15s ease-in-out","&&&:hover":{background:a?"rgba(42, 56, 68, 1)":"white",transform:"scale3d(1.05, 1.05, 1)"}}})),T=(0,j.Z)(Z)((e=>{let{theme:t}=e;return{display:"flex",maxHeight:"96px"}}));function S(e){let{title:t,image:a,imageDark:r,description:l,to:c}=e;const{colorMode:d}=(0,P.I)();return n.createElement(O.Z,{href:c,style:{textDecoration:"none"}},n.createElement(E,{dark:"dark"===d?1:0},n.createElement(o.Z,{sx:{height:"100%",width:"100%"}},n.createElement(T,{avatar:n.createElement("div",{style:{height:48,width:48,display:"flex",alignItems:"center",justifyContent:"center"}},"dark"===d&&r?r:a),title:t,titleTypographyProps:{fontSize:"1.25rem",color:"var(--ifm-navbar-link-color)",fontWeight:"var(--ifm-font-weight-bold)"}}),l?n.createElement(n.Fragment,null,n.createElement(i.Z,{sx:{marginBottom:"1rem"}}),n.createElement(s.Z,{variant:"body2",color:"textSecondary",component:"p",sx:{color:"var(--ifm-navbar-link-color)",fontSize:"1.1rem"}},l)):n.createElement(n.Fragment,null))))}function N(e){let{items:t,cols:a}=e;return n.createElement(r.ZP,{container:!0,spacing:3},t.map((e=>n.createElement(r.ZP,{item:!0,xs:12,md:6,lg:12/(null!=a?a:2)},n.createElement(S,{title:e.title,image:e.image,imageDark:e.imageDark,to:e.to,description:e.description})))))}},96239:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var r=a(83117),n=(a(67294),a(3905)),o=a(35417),s=a(44996);const i={sidebar_position:10,slug:".",title:"sbv2-aptos"},l=void 0,c={unversionedId:"aptos/dev/move/client",id:"aptos/dev/move/client",title:"sbv2-aptos",description:"A Move module to interact with Switchboard V2 on Aptos.",source:"@site/docs/aptos/dev/move/client.mdx",sourceDirName:"aptos/dev/move",slug:"/aptos/dev/move/",permalink:"/aptos/dev/move/",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,slug:".",title:"sbv2-aptos"},sidebar:"aptos",previous:{title:"@switchboard-xyz/aptos.js",permalink:"/aptos/dev/javascript/"},next:{title:"Feed Parser",permalink:"/aptos/dev/examples/feed-parser"}},d={},p=[{value:"Quick Links",id:"quick-links",level:2},{value:"Install",id:"install",level:2},{value:"Reading Feeds",id:"reading-feeds",level:2},{value:"Tests",id:"tests",level:2}],u={toc:p};function g(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A Move module to interact with Switchboard V2 on Aptos."),(0,n.kt)("h2",{id:"quick-links"},"Quick Links"),(0,n.kt)(o.Z,{cols:2,items:[{to:"https://github.com/switchboard-xyz/sbv2-aptos/tree/main/move/switchboard",title:"Github",description:"View the Github repo",image:(0,n.kt)("img",{src:(0,s.Z)("/img/icons/github/light.svg")}),imageDark:(0,n.kt)("img",{src:(0,s.Z)("/img/icons/github/dark.svg")})}],mdxType:"RoundedCardGroup"}),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)("p",null,"Add the following to your ",(0,n.kt)("inlineCode",{parentName:"p"},"Move.toml")," file."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[addresses]\nswitchboard = "0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd"\n\n[dependencies]\nMoveStdlib = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/move-stdlib/", rev = "devnet" }\nAptosFramework = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/aptos-framework/", rev = "devnet" }\nAptosStdlib = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/aptos-stdlib/", rev = "devnet" }\nSwitchboard = { git = "https://github.com/switchboard-xyz/sbv2-aptos.git", subdir = "switchboard-move/switchboard/", rev = "main" }\n')),(0,n.kt)("h2",{id:"reading-feeds"},"Reading Feeds"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"use switchboard::aggregator;\nuse switchboard::math;\n\n// store latest value\nstruct AggregatorInfo has copy, drop, store, key {\n    aggregator_addr: address,\n    latest_result: u128,\n    latest_result_scaling_factor: u8,\n    latest_result_neg: bool,\n}\n\n// get latest value\npublic fun save_latest_value(aggregator_addr: address) {\n    // get latest value\n    let latest_value = aggregator::latest_value(aggregator_addr);\n    let (value, scaling_factor, neg) = math::unpack(latest_value);\n    move_to(account, AggregatorInfo {\n        aggregator_addr: aggregator_addr,\n        latest_result: value,\n        latest_result_scaling_factor: scaling_factor,\n        latest_result_neg: neg,\n    });\n}\n")),(0,n.kt)("h2",{id:"tests"},"Tests"),(0,n.kt)("p",null,"Some testing that uses aggregator test utility functions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"#[test(account = @0x1)]\npublic entry fun test_aggregator(account: &signer) {\n\n    // creates test aggregator with data\n    aggregator::new_test(account, 100, 0, false);\n\n    // print out value\n    std::debug::print(&aggregator::latest_value(signer::address_of(account)));\n}\n")))}g.isMDXComponent=!0}}]);