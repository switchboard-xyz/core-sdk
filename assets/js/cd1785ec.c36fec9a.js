"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9809],{54852:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>b});var n=r(49231);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=l(r),m=a,b=u["".concat(c,".").concat(m)]||u[m]||p[m]||i;return r?n.createElement(b,s(s({ref:t},d),{},{components:r})):n.createElement(b,s({ref:t},d))}));function b(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,s=new Array(i);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},80757:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var n=r(95634),a=(r(49231),r(54852));const i={title:"ILegacyOracle",slug:"/arbitrum/sdk/solidity/ILegacyOracle",hide_title:!0,sidebar_class_name:"sidebar__solidity",sidebar_position:2},s=void 0,o={unversionedId:"arbitrum/sdk/clients/ILegacyOracle",id:"arbitrum/sdk/clients/ILegacyOracle",title:"ILegacyOracle",description:"Switchboard Logo",source:"@site/docs/arbitrum/sdk/clients/ILegacyOracle.mdx",sourceDirName:"arbitrum/sdk/clients",slug:"/arbitrum/sdk/solidity/ILegacyOracle",permalink:"/arbitrum/sdk/solidity/ILegacyOracle",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"ILegacyOracle",slug:"/arbitrum/sdk/solidity/ILegacyOracle",hide_title:!0,sidebar_class_name:"sidebar__solidity",sidebar_position:2},sidebar:"arbitrumSidebar",previous:{title:"ISwitchboard",permalink:"/arbitrum/sdk/solidity/ISwitchboard"},next:{title:"@switchboard-xyz/evm.js",permalink:"/arbitrum/sdk/javascript/"}},c={},l=[{value:"Usage",id:"usage",level:2}],d={toc:l},u="wrapper";function p(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("div",{align:"center"},(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/switchboard-xyz/sbv2-core/raw/main/website/static/img/icons/switchboard/avatar.png",alt:"Switchboard Logo"})),(0,a.kt)("h1",{id:"ilegacyoracle"},"ILegacyOracle"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A Solidity contract to read a Switchboard data feed with a legacy oracle\nadapter."))),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface ISwitchboard {\n\n  // read from aggregator\n  function latestResult(address aggregatorAddress)\n    external\n    payable\n    returns (\n      int256 value,\n      uint timestamp\n    );\n\n  // read round from an aggregator\n  function latestRound(address aggregatorAddress)\n    external\n    payable\n    returns (\n      uint80 round,\n      int256 value,\n      uint256 timestamp,\n      uint256 oldestConsideredValueTimestamp\n    );\n}\n\ncontract ReadAFeed {\n\n  // version of this contract\n  int256 public latestValue;\n  uint256 public latestTimestamp;\n  address switchboardAddress;\n  address aggregatorAddress;\n\n  // constructor\n  // switchboard coreadao address: 0xe9F5Ecb00BC437F061DF59d899F00f260740dC48\n  // example feed address:\n  constructor(address _switchboard, address _aggregatorAddress) {\n    switchboardAddress = _switchboard;\n    aggregatorAddress = _aggregatorAddress;\n  }\n\n  function latest() external view returns (int256, uint256) {\n    return (latestValue, latestTimestamp);\n  }\n\n  function getLatestResult()\n    external\n    returns (\n      int256 value,\n      uint256 timestamp\n    ) {\n\n      ISwitchboard switchboard = ISwitchboard(switchboardAddress);\n      (value, timestamp) = switchboard.latestResult(aggregatorAddress);\n      latestValue = value;\n      latestTimestamp = timestamp;\n    }\n}\n")))}p.isMDXComponent=!0}}]);