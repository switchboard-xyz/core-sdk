"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7999],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),g=c(r),f=o,v=g["".concat(l,".").concat(f)]||g[f]||p[f]||a;return r?n.createElement(v,s(s({ref:t},u),{},{components:r})):n.createElement(v,s({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=g;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=r[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}g.displayName="MDXCreateElement"},17219:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var n=r(83117),o=(r(67294),r(3905));const a={title:"Save History"},s=void 0,i={unversionedId:"dev/cli/solana/aggregator/save_history",id:"dev/cli/solana/aggregator/save_history",title:"Save History",description:"request a new aggregator result from a set of oracles",source:"@site/docs/dev/cli/solana/aggregator/save_history.md",sourceDirName:"dev/cli/solana/aggregator",slug:"/dev/cli/solana/aggregator/save_history",permalink:"/dev/cli/solana/aggregator/save_history",draft:!1,tags:[],version:"current",frontMatter:{title:"Save History"},sidebar:"dev",previous:{title:"Remove Job",permalink:"/dev/cli/solana/aggregator/remove_job"},next:{title:"Update",permalink:"/dev/cli/solana/aggregator/update"}},l={},c=[],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"request a new aggregator result from a set of oracles"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-asciidoc"},"USAGE\n  $ sbv2 solana aggregator save history [AGGREGATORKEY] -f <value> [-h] [-v] [-s] [--force] [--json] [--csv]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to deserialize\n\nFLAGS\n  -f, --outputFile=<value>  (required) output file to save aggregator pubkeys to\n  -h, --help                Show CLI help.\n  -s, --silent              suppress cli prompts\n  -v, --verbose             log everything\n  --csv                     output aggregator accounts in csv format\n  --force                   overwrite output file if exists\n  --json                    output aggregator accounts in json format\n\nDESCRIPTION\n  request a new aggregator result from a set of oracles\n\nEXAMPLES\n  $ sbv2 aggregator:save:history --outputFile ../aggregator-history.json --csv\n")))}p.isMDXComponent=!0}}]);