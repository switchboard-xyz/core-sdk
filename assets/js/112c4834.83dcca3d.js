"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7116],{54852:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(49231);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),p=r,m=d["".concat(c,".").concat(p)]||d[p]||h[p]||i;return n?a.createElement(m,o(o({ref:t},u),{},{components:n})):a.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},54986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(95634),r=(n(49231),n(54852));const i={keywords:["Switchboard","web3","oracle","data feeds","vrf","randomness","solana","aptos","near"]},o="The Attestation Program",s={unversionedId:"attestation-program",id:"attestation-program",title:"The Attestation Program",description:"Previously, Switchboard's security model depended on economic incentives where",source:"@site/docs/attestation-program.mdx",sourceDirName:".",slug:"/attestation-program",permalink:"/attestation-program",draft:!1,tags:[],version:"current",frontMatter:{keywords:["Switchboard","web3","oracle","data feeds","vrf","randomness","solana","aptos","near"]},sidebar:"gettingStartedSidebar",previous:{title:"The Oracle Program",permalink:"/oracle-program"},next:{title:"The Network",permalink:"/network"}},c={},l=[{value:"Exploring SGX Attestation",id:"exploring-sgx-attestation",level:2},{value:"Crucial Components in the Attestation Process",id:"crucial-components-in-the-attestation-process",level:2},{value:"Attestation Lifecycle",id:"attestation-lifecycle",level:2}],u={toc:l},d="wrapper";function h(e){let{components:t,...i}=e;return(0,r.kt)(d,(0,a.Z)({},u,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"the-attestation-program"},"The Attestation Program"),(0,r.kt)("p",null,"Previously, Switchboard's security model depended on economic incentives where\ndata reporters were rewarded or penalized based on the proximity of their\nreported data to the median. Oracle operators had to lock up a portion of\neconomic stake and receive explicit approval from the oracle queue's authority.\nAlthough this model provided a degree of decentralization and security, it faced\nchallenges in aligning the incentives of oracles with DeFi protocols."),(0,r.kt)("p",null,"The Switchboard Attestation Program builds upon Switchboard V2s enconomic\nincentives by leveraging TEEs. TEEs allow for unique digital signatures to be\ncreated for software running within its enclave, along with the data generated\nby that software. This ensures the secure and verifiable confirmation of the\noracles' integrity and authenticity."),(0,r.kt)("p",null,"The Switchboard Attestation Program is a sibling program to the Switchboard\noracle program, and is responsible for verifying attestation quotes on-chain,\nwhich grants or revokes an oracle's permissions based on the contents within the\nsecure enclave. By verifying the code's integrity inside the enclave, we can\nensure the code hasn't been tampered with and that our application will behave\nas expected."),(0,r.kt)("p",null,"A AttestationQueueAccount manages a set of valid MRENCLAVE measurements,\nrepresenting the permitted software versions an application can run. Any code\nchanges will alter the enclave's state, necessitating the addition of a new\nmeasurement by the AttestationQueueAccount ",(0,r.kt)("inlineCode",{parentName:"p"},"authority")," before oracles can\nupgrade. If a version is found to have a bug, it can be revoked, and oracles\nwill automatically be removed."),(0,r.kt)("p",null,"An oracle account represents a specific SGX enclave. When an oracle is\nprovisioned, it creates a EnclaveAccount on-chain with the MRENCLAVE measurement\ndetailing the software version it runs. Quote verification oracles constantly\nmonitor the chain for oracles requesting verification of their enclave. Upon\ndetecting such an event, it calls the program and updates or revokes the\nassociated PermissionAccount based on whether the measurement is allowed on the\noracle's AttestationQueueAccount."),(0,r.kt)("p",null,"AttestationQueueAccounts dictate how often oracles must verify their enclave,\nensuring that enclaves consistently update and maintain software patches."),(0,r.kt)("p",null,"With the Attestation Program, Switchboard V3 enables:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Oracle Verification"),": Oracles are encapsulated within TEEs, generating a\nunique digital signature that can be posted on-chain for public verification.\nThis ensures that the oracles can be trusted while maintaining a decentralized\nand verifiable system."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Execution Verification"),": As oracles participate in a queue and handle user\nrequests, the executions of data feeds, functions, and other tasks can be\nverifiably carried out. This allows users to confirm that transactions are\nstrictly dictated by the code that created them, ensuring system integrity and\nsecurity.")),(0,r.kt)("h2",{id:"exploring-sgx-attestation"},"Exploring SGX Attestation"),(0,r.kt)("p",null,"Intel Software Guard Extensions (SGX) offer a secure execution environment\ncalled an enclave, where sensitive code and data are protected from unauthorized\naccess or tampering. The attestation process verifies the enclave's identity and\nvalidates its code and data, ensuring authenticity and integrity."),(0,r.kt)("p",null,"The Switchboard Attestation Program uses SGX attestation to establish trust in\noracle applications, providing a robust mechanism for verifying secure code\nexecution within the Trusted Execution Environment (TEE)."),(0,r.kt)("p",null,"Switchboard services utilize Gramine for the runtime environment. Gramine allows\nSGX enclaves to operate as if they were running on a standard operating system,\nmanaging system calls and other essential interactions."),(0,r.kt)("h2",{id:"crucial-components-in-the-attestation-process"},"Crucial Components in the Attestation Process"),(0,r.kt)("p",null,"The Switchboard attestation process involves several components that work\ntogether to facilitate attestation and verification of SGX enclaves:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"AttestationQueueAccount"),": Manages the list of allowed enclave measurements\n(MRENCLAVEs) and maintains a dedicated AttestationQueue to verify\nattestations."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"EnclaveAccount"),": Represents an individual SGX enclave, connects to the\nAttestationQueueAccount, and has a 1:N relationship with EnclaveAccount."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"PermissionAccount"),": An account between the ",(0,r.kt)("em",{parentName:"li"},"AttestationQueueAccount")," and\nthe ",(0,r.kt)("em",{parentName:"li"},"EnclaveAccount")," dictating whether the ",(0,r.kt)("em",{parentName:"li"},"EnclaveAccount")," is permitted to\nperform on-chain actions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"EnclaveAccount"),": Stores the attestation data (quote) generated by the SGX\nenclave for a given EnclaveAccount.")),(0,r.kt)("h2",{id:"attestation-lifecycle"},"Attestation Lifecycle"),(0,r.kt)("p",null,"The Switchboard Attestation Program follows a structured lifecycle to ensure the\nsecure and trustworthy execution of code within the TEE:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Initialize the AttestationQueueAccount"),(0,r.kt)("li",{parentName:"ol"},"Register permitted MRENCLAVE measurements"),(0,r.kt)("li",{parentName:"ol"},"Create EnclaveAccount and PermissionAccount"),(0,r.kt)("li",{parentName:"ol"},"Run an SGX Switchboard function, creates EnclaveAccount from compiled binary"),(0,r.kt)("li",{parentName:"ol"},"EnclaveAccount emits a request to the AttestationQueue associated with the\nServiceQueue to verify its MRENCLAVE measurement"),(0,r.kt)("li",{parentName:"ol"},"The AttestationQueue verifies the MRENCLAVE measurement on-chain\n(attestation)"),(0,r.kt)("li",{parentName:"ol"},"The PermissionAccount associated with the EnclaveAccount has the permissions\nenabled"),(0,r.kt)("li",{parentName:"ol"},"Maintain an active and trustworthy SGX enclave through heartbeats")),(0,r.kt)("p",null,"By adhering to this lifecycle, the Switchboard Attestation Program ensures the\nsecurity, authenticity, and trustworthiness of SGX enclaves operating within the\nTEE."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Switchboard Attestation Lifecycle",src:n(93801).Z,width:"3456",height:"1248"})))}h.isMDXComponent=!0},93801:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/Attestation_Program_Lifecycle-5d9e24cfbc6f410060b34fe514ffeee2.png"}}]);