"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[540],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),v=p(n),d=a,b=v["".concat(s,".").concat(d)]||v[d]||c[d]||i;return n?r.createElement(b,o(o({ref:t},u),{},{components:n})):r.createElement(b,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=v;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},7489:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var r=n(3117),a=(n(7294),n(3905));const i={toc:[{value:"<code>sbv2 print [PUBLICKEY]</code>",id:"sbv2-print-publickey",level:2},{value:"<code>sbv2 print aggregator [AGGREGATORKEY]</code>",id:"sbv2-print-aggregator-aggregatorkey",level:2},{value:"<code>sbv2 print aggregator history [AGGREGATORKEY]</code>",id:"sbv2-print-aggregator-history-aggregatorkey",level:2},{value:"<code>sbv2 print aggregator lease [AGGREGATORKEY]</code>",id:"sbv2-print-aggregator-lease-aggregatorkey",level:2},{value:"<code>sbv2 print aggregator permission [AGGREGATORKEY]</code>",id:"sbv2-print-aggregator-permission-aggregatorkey",level:2},{value:"<code>sbv2 print buffer [BUFFERRELAYERKEY]</code>",id:"sbv2-print-buffer-bufferrelayerkey",level:2},{value:"<code>sbv2 print crank [CRANKKEY]</code>",id:"sbv2-print-crank-crankkey",level:2},{value:"<code>sbv2 print job [JOBKEY]</code>",id:"sbv2-print-job-jobkey",level:2},{value:"<code>sbv2 print oracle [ORACLEKEY]</code>",id:"sbv2-print-oracle-oraclekey",level:2},{value:"<code>sbv2 print oracle permission [ORACLEKEY]</code>",id:"sbv2-print-oracle-permission-oraclekey",level:2},{value:"<code>sbv2 print permission [PERMISSIONKEY]</code>",id:"sbv2-print-permission-permissionkey",level:2},{value:"<code>sbv2 print program</code>",id:"sbv2-print-program",level:2},{value:"<code>sbv2 print queue [QUEUEKEY]</code>",id:"sbv2-print-queue-queuekey",level:2},{value:"<code>sbv2 print vrf [VRFKEY]</code>",id:"sbv2-print-vrf-vrfkey",level:2}]};function o(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"find and print a switchboard account by public key for a given cluster"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-publickey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print [PUBLICKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-aggregator-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print aggregator [AGGREGATORKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-aggregator-history-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print aggregator history [AGGREGATORKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-aggregator-lease-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print aggregator lease [AGGREGATORKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-aggregator-permission-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print aggregator permission [AGGREGATORKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-buffer-bufferrelayerkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print buffer [BUFFERRELAYERKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-crank-crankkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print crank [CRANKKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-job-jobkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print job [JOBKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-oracle-oraclekey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print oracle [ORACLEKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-oracle-permission-oraclekey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print oracle permission [ORACLEKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-permission-permissionkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print permission [PERMISSIONKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-program"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print program"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-queue-queuekey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print queue [QUEUEKEY]"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#sbv2-print-vrf-vrfkey"},(0,a.kt)("inlineCode",{parentName:"a"},"sbv2 print vrf [VRFKEY]")))),(0,a.kt)("h2",{id:"sbv2-print-publickey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print [PUBLICKEY]")),(0,a.kt)("p",null,"find a switchboard account by public key for a given cluster"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print [PUBLICKEY] [-h] [-v]\n\nARGUMENTS\n  PUBLICKEY  public key of a switchboard account to lookup\n\nFLAGS\n  -h, --help     Show CLI help.\n  -v, --verbose  log everything\n\nDESCRIPTION\n  find a switchboard account by public key for a given cluster\n\nEXAMPLES\n  $ sbv2 print GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U\n")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"See code: ",(0,a.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/blob/v0.2.25/dist/commands/print/index.ts"},"dist/commands/print/index.ts"))),(0,a.kt)("h2",{id:"sbv2-print-aggregator-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print aggregator [AGGREGATORKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard aggregator account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print aggregator [AGGREGATORKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n    [--json] [--jobs] [-o]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to deserialize\n\nFLAGS\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\n                           alternate authority provided\n  -o, --oraclePubkeysData  print the assigned oracles for the current round\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --jobs                   output job definitions\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\n  --programId=<value>      alternative Switchboard program ID to interact with\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  Print the deserialized Switchboard aggregator account\n\nALIASES\n  $ sbv2 aggregator print\n\nEXAMPLES\n  $ sbv2 aggregator:print GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\n")),(0,a.kt)("h2",{id:"sbv2-print-aggregator-history-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print aggregator history [AGGREGATORKEY]")),(0,a.kt)("p",null,"Print the history buffer associated with an aggregator account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print aggregator history [AGGREGATORKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k\n  <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the history buffer associated with an aggregator account\n\nALIASES\n  $ sbv2 aggregator history print\n  $ sbv2 aggregator print history\n\nEXAMPLES\n  $ sbv2 aggregator:print:history 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,a.kt)("h2",{id:"sbv2-print-aggregator-lease-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print aggregator lease [AGGREGATORKEY]")),(0,a.kt)("p",null,"Print the lease account associated with a Switchboard aggregator account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print aggregator lease [AGGREGATORKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k\n  <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the lease account associated with a Switchboard aggregator account\n\nALIASES\n  $ sbv2 aggregator lease print\n  $ sbv2 aggregator print lease\n\nEXAMPLES\n  $ sbv2 aggregator:lease:print 8SXvChNYFhRq4EZuZvnhjrB3jJRQCv4k3P4W6hesH3Ee\n")),(0,a.kt)("h2",{id:"sbv2-print-aggregator-permission-aggregatorkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print aggregator permission [AGGREGATORKEY]")),(0,a.kt)("p",null,"Print the permission account associated with a Switchboard aggregator account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print aggregator permission [AGGREGATORKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k\n  <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the permission account associated with a Switchboard aggregator account\n\nALIASES\n  $ sbv2 aggregator permission print\n  $ sbv2 aggregator print permission\n\nEXAMPLES\n  $ sbv2 aggregator:permission:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,a.kt)("h2",{id:"sbv2-print-buffer-bufferrelayerkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print buffer [BUFFERRELAYERKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard buffer relayer account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print buffer [BUFFERRELAYERKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n    [--job]\n\nARGUMENTS\n  BUFFERRELAYERKEY  public key of the buffer relayer account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --job                  output job definitions\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the deserialized Switchboard buffer relayer account\n\nALIASES\n  $ sbv2 buffer print\n\nEXAMPLES\n  $ sbv2 buffer:print 23GvzENjwgqqaLejsAtAWgTkSzWjSMo2LUYTAETT8URp\n")),(0,a.kt)("h2",{id:"sbv2-print-crank-crankkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print crank [CRANKKEY]")),(0,a.kt)("p",null,"print deserialized switchboard crank account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print crank [CRANKKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nARGUMENTS\n  CRANKKEY  public key of the crank account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  print deserialized switchboard crank account\n\nALIASES\n  $ sbv2 crank print\n\nEXAMPLES\n  $ sbv2 crank:print 85L2cFUvXaeGQ4HrzP8RJEVCL7WvRrXM2msvEmQ82AVr\n")),(0,a.kt)("h2",{id:"sbv2-print-job-jobkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print job [JOBKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard job account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print job [JOBKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nARGUMENTS\n  JOBKEY  public key of the job account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the deserialized Switchboard job account\n\nALIASES\n  $ sbv2 job print\n\nEXAMPLES\n  $ sbv2 job:print SzTvFZLz3hwjZFMwVWzuEnr1oUF6qyvXwXCvsqf7qeA\n")),(0,a.kt)("h2",{id:"sbv2-print-oracle-oraclekey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print oracle [ORACLEKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard oracle account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print oracle [ORACLEKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the deserialized Switchboard oracle account\n\nALIASES\n  $ sbv2 oracle print\n\nEXAMPLES\n  $ sbv2 oracle:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,a.kt)("h2",{id:"sbv2-print-oracle-permission-oraclekey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print oracle permission [ORACLEKEY]")),(0,a.kt)("p",null,"Print the permission account associated with a Switchboard oracle account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print oracle permission [ORACLEKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle account to fetch permission account and deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the permission account associated with a Switchboard oracle account\n\nALIASES\n  $ sbv2 oracle permission print\n  $ sbv2 oracle print permission\n\nEXAMPLES\n  $ sbv2 oracle:permission:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,a.kt)("h2",{id:"sbv2-print-permission-permissionkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print permission [PERMISSIONKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard permission account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print permission [PERMISSIONKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nARGUMENTS\n  PERMISSIONKEY  public key of the permission account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the deserialized Switchboard permission account\n\nALIASES\n  $ sbv2 permission print\n\nEXAMPLES\n  $ sbv2 permission:print 94XXM72K2aKu2wcuJaawV8njuGaFZvhy8iKgPxoa1tJk\n")),(0,a.kt)("h2",{id:"sbv2-print-program"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print program")),(0,a.kt)("p",null,"print the deserialized switchboard program state account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print program [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  print the deserialized switchboard program state account\n\nALIASES\n  $ sbv2 program print\n\nEXAMPLES\n  $ sbv2 program:print\n")),(0,a.kt)("h2",{id:"sbv2-print-queue-queuekey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print queue [QUEUEKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard oraclequeue account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print queue [QUEUEKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n    [--oracles]\n\nARGUMENTS\n  QUEUEKEY  public key of the oracle queue account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --oracles              output oracles that are heartbeating on the queue\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  Print the deserialized Switchboard oraclequeue account\n\nALIASES\n  $ sbv2 queue print\n\nEXAMPLES\n  $ sbv2 queue:print GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U\n")),(0,a.kt)("h2",{id:"sbv2-print-vrf-vrfkey"},(0,a.kt)("inlineCode",{parentName:"h2"},"sbv2 print vrf [VRFKEY]")),(0,a.kt)("p",null,"Print the deserialized Switchboard VRF account"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print vrf [VRFKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>] [--json]\n\nARGUMENTS\n  VRFKEY  public key of the vrf account to deserialize\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  Print the deserialized Switchboard VRF account\n\nALIASES\n  $ sbv2 vrf print\n\nEXAMPLES\n  $ sbv2 vrf:print\n")))}o.isMDXComponent=!0;const l={sidebar_position:5,title:"sbv2 print"},s=void 0,p={unversionedId:"cli/print",id:"cli/print",title:"sbv2 print",description:"",source:"@site/api/cli/print.mdx",sourceDirName:"cli",slug:"/cli/print",permalink:"/sbv2-core/api/cli/print",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"sbv2 print"},sidebar:"tutorialSidebar",previous:{title:"sbv2 anchor",permalink:"/sbv2-core/api/cli/anchor"},next:{title:"sbv2 job",permalink:"/sbv2-core/api/cli/job"}},u={},c=[],v={toc:c};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o,{mdxType:"Sbv2Print"}))}d.isMDXComponent=!0}}]);