"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2172],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),l=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=l(t),d=a,b=f["".concat(u,".").concat(d)]||f[d]||p[d]||o;return t?n.createElement(b,s(s({ref:r},c),{},{components:t})):n.createElement(b,s({ref:r},c))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=f;var i={};for(var u in r)hasOwnProperty.call(r,u)&&(i[u]=r[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9788:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:1,slug:".",title:"Architecture"},s="Buffer Relayer Architecture",i={unversionedId:"buffer-relayer/architecture",id:"buffer-relayer/architecture",title:"Architecture",description:"A buffer relayer enables a single oracle to fetch and publish a raw buffer on-chain. Currently buffer relayers support a maximum size of 500 bytes so it fits into a single transaction, although theoretically this could be expanded to ~10Mb and spread out across multiple transactions. If you need a buffer larger than 500 bytes, reach out to the Switchboard team.",source:"@site/docs/buffer-relayer/architecture.mdx",sourceDirName:"buffer-relayer",slug:"/buffer-relayer/",permalink:"/sbv2-core/buffer-relayer/",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:".",title:"Architecture"},sidebar:"tutorialSidebar",previous:{title:"Architecture",permalink:"/sbv2-core/randomness/"},next:{title:"Developer Resources",permalink:"/sbv2-core/developers/"}},u={},l=[{value:"Consensus",id:"consensus",level:2},{value:"Queue Permissions",id:"queue-permissions",level:2},{value:"Cost",id:"cost",level:2}],c={toc:l};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"buffer-relayer-architecture"},"Buffer Relayer Architecture"),(0,a.kt)("p",null,"A buffer relayer enables a single oracle to fetch and publish a raw buffer on-chain. Currently buffer relayers support a maximum size of 500 bytes so it fits into a single transaction, although theoretically this could be expanded to ~10Mb and spread out across multiple transactions. If you need a buffer larger than 500 bytes, reach out to the Switchboard team."),(0,a.kt)("h2",{id:"consensus"},"Consensus"),(0,a.kt)("p",null,"A buffer relayer has no consensus mechanism in that whatever the oracle publishes will be the accepted result; so some degree of trust is needed between the requester and the oracle. Buffer relayers are provided for convenience so developers can easily route data on-chain and should not be used for securing sensitive systems."),(0,a.kt)("h2",{id:"queue-permissions"},"Queue Permissions"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"Not all queues support buffer relayers.")," A queue must explicitly set ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.enableBufferRelayers")," before oracles will respond to update request."),(0,a.kt)("p",null,"A permission account is always required before use. If a queue has ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.unpermissionedFeedsEnabled")," then no assigned permissions are required. If a queue has not enabled unpermissioned feeds, then a buffer relayer is required to be granted ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"PERMIT_ORACLE_QUEUE_USAGE"))," from the ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.authority")," before oracles will respond to any update request."),(0,a.kt)("h2",{id:"cost"},"Cost"),(0,a.kt)("p",null,"A buffer relayer must fund their ",(0,a.kt)("inlineCode",{parentName:"p"},"escrow")," account in order to request an oracle to publish a buffer on-chain. Each update request deducts ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.reward")," from the buffers ",(0,a.kt)("inlineCode",{parentName:"p"},"escrow")," account when the oracle responds on-chain."))}p.isMDXComponent=!0}}]);