"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[37197],{88491:(e,t,l)=>{l.d(t,{zY:()=>i,l1:()=>u,Au:()=>s});var a=l(49231),n=l(15733);const i=e=>{const{enumb:t}=e,l=()=>a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Number"),a.createElement("th",null,"Description"))),n=()=>a.createElement("tbody",null,t.values.map((e=>a.createElement("tr",{key:e.name},a.createElement("td",null,a.createElement("code",null,e.name)),a.createElement("td",null,a.createElement("code",null,e.number)),a.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return a.createElement(a.Fragment,null,a.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),a.createElement("table",null,a.createElement(l,null),a.createElement(n,null)))},r=e=>{const{fields:t}=e,l=()=>a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Description"))),i=e=>{let{field:t}=e;const l=a.createElement("code",null,t.longType);return void 0===t.typeLink?l:a.createElement(n.Z,{to:t.typeLink},l)},r=()=>a.createElement("tbody",null,t.map((e=>a.createElement("tr",{key:e.name},a.createElement("td",null,a.createElement("code",null,e.name)),a.createElement("td",null,a.createElement(i,{field:e})),a.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return a.createElement("table",null,a.createElement(l,null),a.createElement(r,null))},s=e=>{const{message:t}=e;return a.createElement(a.Fragment,null,a.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),a.createElement(r,{fields:t.fields}))};var o=l(62791),m=l(17558);const u=e=>{(0,o.Z)();return a.createElement(a.Fragment,null,a.createElement("h3",null,e.title),a.createElement("p",null,e.description),a.createElement("p",null,a.createElement("strong",null,"Input: "),e.input||"N/A",e.inputSample?a.createElement(a.Fragment,null,a.createElement("br",null),e.inputSample):a.createElement(a.Fragment,null)),a.createElement(m.Z,{metastring:"",title:e.subtitle,language:"json"},JSON.stringify({name:e.title,tasks:e.tasks},void 0,2)),a.createElement("p",null,a.createElement("strong",null,"Output: "),e.output||"N/A",e.outputSample?a.createElement(a.Fragment,null,a.createElement("br",null),e.outputSample):a.createElement(a.Fragment,null)))}},30734:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=l(48041),n=(l(49231),l(54852)),i=l(88491);const r={title:"DivideTask",hide_title:!0},s=void 0,o={unversionedId:"tasks/DivideTask",id:"tasks/DivideTask",title:"DivideTask",description:"DivideTask",source:"@site/docs/tasks/DivideTask.mdx",sourceDirName:"tasks",slug:"/tasks/DivideTask",permalink:"/tasks/DivideTask",draft:!1,tags:[],version:"current",frontMatter:{title:"DivideTask",hide_title:!0},sidebar:"publisher",previous:{title:"DefiKingdomsTask",permalink:"/tasks/DefiKingdomsTask"},next:{title:"EwmaTask",permalink:"/tasks/EwmaTask"}},m={},u=[{value:"<code>DivideTask</code>",id:"dividetask",level:2},{value:"Messages",id:"messages",level:2},{value:"<code>DivideTask</code>",id:"dividetask-1",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...l}=e;return(0,n.kt)(d,(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"dividetask"},(0,n.kt)("inlineCode",{parentName:"h2"},"DivideTask")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"path")," DivideTask")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"package")," DivideTask")),(0,n.kt)("p",null,"This task will divide a numerical input by a scalar value or by another\naggregate."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"messages"},"Messages"),(0,n.kt)("h3",{id:"dividetask-1"},(0,n.kt)("inlineCode",{parentName:"h3"},"DivideTask")),(0,n.kt)(i.Au,{key:0,message:{name:"DivideTask",longName:"DivideTask",fullName:".DivideTask",description:"This task will divide a numerical input by a scalar value or by another\naggregate.",hasExtensions:!1,hasFields:!0,hasOneofs:!0,extensions:[],fields:[{name:"scalar",description:"Specifies a basic scalar denominator to divide by.",label:"optional",type:"double",longType:"double",fullType:"double",ismap:!1,isoneof:!0,oneofdecl:"Denominator",defaultValue:""},{name:"aggregator_pubkey",description:"Specifies another aggregator resut to divide by.",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"Denominator",defaultValue:""},{name:"job",description:"A job whose result is computed before dividing our numerical input by that result.",label:"optional",type:"OracleJob",longType:"OracleJob",fullType:"OracleJob",ismap:!1,isoneof:!0,oneofdecl:"Denominator",defaultValue:""},{name:"big",description:"A stringified big.js. `Accepts variable expansion syntax.`",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"Denominator",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,n.kt)("hr",null))}p.isMDXComponent=!0}}]);