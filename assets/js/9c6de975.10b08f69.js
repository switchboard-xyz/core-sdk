"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7139],{54852:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(49231);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),h=a,m=p["".concat(c,".").concat(h)]||p[h]||d[h]||i;return r?n.createElement(m,o(o({ref:t},l),{},{components:r})):n.createElement(m,o({ref:t},l))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var u=2;u<i;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},70244:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var n=r(432),a=(r(49231),r(54852));const i={slug:"./queue",title:"Queue WIP"},o=void 0,s={unversionedId:"architecture/switchboard-v3/queue",id:"architecture/switchboard-v3/queue",title:"Queue WIP",description:"Work in progress",source:"@site/docs/101-architecture/00-switchboard-v3/104-queue.mdx",sourceDirName:"101-architecture/00-switchboard-v3",slug:"/architecture/switchboard-v3/queue",permalink:"/architecture/switchboard-v3/queue",draft:!1,tags:[],version:"current",sidebarPosition:104,frontMatter:{slug:"./queue",title:"Queue WIP"},sidebar:"sidebar",previous:{title:"Economic Security WIP",permalink:"/architecture/switchboard-v3/economic-security"},next:{title:"Attestation Program WIP",permalink:"/architecture/switchboard-v3/attestation-program"}},c={},u=[{value:"Work in progress",id:"work-in-progress",level:2},{value:"Oracle Assignment",id:"oracle-assignment",level:2},{value:"Heartbeat Requirement",id:"heartbeat-requirement",level:3},{value:"Round-Robin Assignment",id:"round-robin-assignment",level:3},{value:"Periodic Swapping of Oracle Positions",id:"periodic-swapping-of-oracle-positions",level:3},{value:"Access Control",id:"access-control",level:2},{value:"Economic Security",id:"economic-security",level:2},{value:"Governance",id:"governance",level:2}],l={toc:u},p="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(p,(0,n.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"work-in-progress"},"Work in progress"),(0,a.kt)("p",null,"Each oracle queue in the Switchboard Network is autonomous and maintains its own\nconfigurations, which determine the level of security it provides. This design\nchoice enables users to tailor the oracle queue's behavior to match their\nspecific use case. Anyone can create their own queue and even run their own\nprivate Switchboard Network if desired."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Queue Architecture",src:r(52437).Z,width:"3168",height:"2208"})),(0,a.kt)("h2",{id:"oracle-assignment"},"Oracle Assignment"),(0,a.kt)("p",null,"The Switchboard Network employs a round-robin approach to assign update requests\nto oracles. This section explains the key aspects of this method and its\nbenefits for the network."),(0,a.kt)("h3",{id:"heartbeat-requirement"},"Heartbeat Requirement"),(0,a.kt)("p",null,"Oracles are required to periodically heartbeat on-chain before the\n",(0,a.kt)("inlineCode",{parentName:"p"},"queue.oracleTimeout")," to signal their readiness. If an oracle fails to heartbeat\nwithin this time frame, it will be temporarily removed from the queue and won't\nbe assigned any update requests until it successfully heartbeats again."),(0,a.kt)("p",null,"The queue utilizes ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.gcIdx")," to track its garbage collection index. If an\noracle fails to send a heartbeat before ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.oracleTimeout"),", it is removed\nfrom the queue until it sends a successful heartbeat again. This process ensures\nthat only active oracles are assigned resource update requests."),(0,a.kt)("h3",{id:"round-robin-assignment"},"Round-Robin Assignment"),(0,a.kt)("p",null,"Update requests are assigned to oracles in a round-robin fashion, ensuring a\nfair distribution of tasks among oracles. Aggregators or data feeds can specify\nthe number of oracles (N) required for each request. The system will then assign\nthe next N oracles in the queue to fulfill the request. If there are not enough\noracles in the queue, the update request will fail."),(0,a.kt)("h3",{id:"periodic-swapping-of-oracle-positions"},"Periodic Swapping of Oracle Positions"),(0,a.kt)("p",null,"To provide an element of unpredictability and mitigate the risk of oracles being\nassigned the same update requests in every iteration, oracle positions in the\nqueue are periodically swapped. This helps to further distribute tasks fairly\nand enhances the overall security of the network."),(0,a.kt)("h2",{id:"access-control"},"Access Control"),(0,a.kt)("p",null,"The Switchboard Network provides flexible access control options for each oracle\nqueue, allowing queue operators to define whether data consumers need\npre-approval or whether any requester can access the queue. This feature allows\nusers to maintain control over their data resources and the level of security\nthey require."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Oracles are ",(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"always"))," required to be granted ",(0,a.kt)("inlineCode",{parentName:"p"},"PermitOracleHeartbeat"),"\npermissions before joining a queue."),(0,a.kt)("p",{parentName:"admonition"},"With Switchboard V3 oracles are pre-approved as long as they verify their\nMRENCLAVE measurements proving they are running a given software baseline within\na trusted execution environment.")),(0,a.kt)("h2",{id:"economic-security"},"Economic Security"),(0,a.kt)("p",null,"Economic incentives are employed to encourage oracles to act honestly and\nprovide accurate data. These incentives form the basis of the queue's security\nmodel and include:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Reward"),": The number of tokens an oracle or crank turner receives for\nsuccessfully completing an on-chain action"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Slashing"),": Discouraging oracles from responding to update requests outside\na set margin of error"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Minimum Stake"),": Oracles are required to stake a minimum amount of capital\nto give them skin in the game.")),(0,a.kt)("p",null,"These economic measures help ensure that the oracles in the network provide\nreliable data and contribute to the overall security of the system."),(0,a.kt)("h2",{id:"governance"},"Governance"),(0,a.kt)("p",null,"Oracle queues can be governed by network participants to control various queue\nconfiguration parameters, such as ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.minStake"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.reward"),",\n",(0,a.kt)("inlineCode",{parentName:"p"},"queue.slashingEnabled"),", and permitting new oracles to join the network.\nGovernance can be achieved through a decentralized autonomous organization (DAO)\nor other mechanisms, allowing the community to have a say in the network's\noperation."),(0,a.kt)("p",null,"By understanding and leveraging the features of independent oracle queues, users\ncan customize the Switchboard Network to meet their specific requirements and\nachieve the desired level of security."))}d.isMDXComponent=!0},52437:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/images/Queue_Functions-fbc75fe50eab9b96612fd12b110001cc.png"}}]);