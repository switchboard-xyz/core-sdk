"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3956],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>v});var n=t(67294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),i=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},u=function(e){var a=i(e.components);return n.createElement(d.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=i(t),v=o,b=c["".concat(d,".").concat(v)]||c[v]||p[v]||r;return t?n.createElement(b,l(l({ref:a},u),{},{components:t})):n.createElement(b,l({ref:a},u))}));function v(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=c;var s={};for(var d in a)hasOwnProperty.call(a,d)&&(s[d]=a[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var i=2;i<r;i++)l[i]=t[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>l});var n=t(67294),o=t(86010);const r="tabItem_Ymn6";function l(e){let{children:a,hidden:t,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,l),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>v});var n=t(83117),o=t(67294),r=t(86010),l=t(72389),s=t(67392),d=t(7094),i=t(12466);const u="tabList__CuJ",p="tabItem_LNqP";function c(e){var a,t;const{lazy:l,block:c,defaultValue:v,values:b,groupId:f,className:h}=e,g=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),m=null!=b?b:g.map((e=>{let{props:{value:a,label:t,attributes:n}}=e;return{value:a,label:t,attributes:n}})),k=(0,s.l)(m,((e,a)=>e.value===a.value));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const I=null===v?v:null!=(a=null!=v?v:null==(t=g.find((e=>e.props.default)))?void 0:t.props.value)?a:g[0].props.value;if(null!==I&&!m.some((e=>e.value===I)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+I+'" but none of its children has the corresponding value. Available values are: '+m.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:A,setTabGroupChoices:S}=(0,d.U)(),[N,E]=(0,o.useState)(I),w=[],{blockElementScrollPositionUntilNextRender:y}=(0,i.o5)();if(null!=f){const e=A[f];null!=e&&e!==N&&m.some((a=>a.value===e))&&E(e)}const R=e=>{const a=e.currentTarget,t=w.indexOf(a),n=m[t].value;n!==N&&(y(a),E(n),null!=f&&S(f,String(n)))},G=e=>{var a;let t=null;switch(e.key){case"ArrowRight":{var n;const a=w.indexOf(e.currentTarget)+1;t=null!=(n=w[a])?n:w[0];break}case"ArrowLeft":{var o;const a=w.indexOf(e.currentTarget)-1;t=null!=(o=w[a])?o:w[w.length-1];break}}null==(a=t)||a.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":c},h)},m.map((e=>{let{value:a,label:t,attributes:l}=e;return o.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===a?0:-1,"aria-selected":N===a,key:a,ref:e=>w.push(e),onKeyDown:G,onFocus:R,onClick:R},l,{className:(0,r.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":N===a})}),null!=t?t:a)}))),l?(0,o.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,o.cloneElement)(e,{key:a,hidden:e.props.value!==N})))))}function v(e){const a=(0,l.Z)();return o.createElement(c,(0,n.Z)({key:String(a)},e))}},7085:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>b,frontMatter:()=>d,metadata:()=>u,toc:()=>c});var n=t(83117),o=(t(67294),t(3905)),r=t(65488),l=t(85162),s=t(66153);const d={sidebar_position:8,title:"Sbv2 CLI"},i="Sbv2 aptos",u={unversionedId:"aptos/dev/cli",id:"aptos/dev/cli",title:"Sbv2 CLI",description:"Install",source:"@site/docs/aptos/dev/cli.mdx",sourceDirName:"aptos/dev",slug:"/aptos/dev/cli",permalink:"/aptos/dev/cli",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Sbv2 CLI"},sidebar:"aptos",previous:{title:"Developer Resources",permalink:"/aptos/dev/"},next:{title:"@switchboard-xyz/aptos.js",permalink:"/aptos/dev/javascript/"}},p={},c=[{value:"Install",id:"install",level:2},{value:"Config",id:"config",level:2},{value:"Commands",id:"commands",level:2}],v={toc:c};function b(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},v,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sbv2-aptos"},"Sbv2 aptos"),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,o.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @switchboard-xyz/cli^2\n"))),(0,o.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add -g @switchboard-xyz/cli^2\n")))),(0,o.kt)("h2",{id:"config"},"Config"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# Testnet\nsbv2 config set aptos testnet rpc https://testnet.aptoslabs.com\nsbv2 config set aptos testnet default-account "~/.config/.aptos/config.yaml"\n\n# Devnet\nsbv2 config set aptos devnet rpc https://devnet.aptoslabs.com\nsbv2 config set aptos devnet default-account "~/.config/.aptos/config.yaml"\n')),(0,o.kt)("h2",{id:"commands"},"Commands"),(0,o.kt)(s.ZP,{mdxType:"AptosCli"}))}b.isMDXComponent=!0},66153:(e,a,t)=>{t.d(a,{ZP:()=>l});var n=t(83117),o=(t(67294),t(3905));const r={toc:[{value:"<code>sbv2 aptos account airdrop</code>",id:"sbv2-aptos-account-airdrop",level:2},{value:"<code>sbv2 aptos aggregator add job [AGGREGATORHEXSTRING]</code>",id:"sbv2-aptos-aggregator-add-job-aggregatorhexstring",level:2},{value:"<code>sbv2 aptos aggregator create [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-aggregator-create-queuehexstring",level:2},{value:"<code>sbv2 aptos aggregator job add [AGGREGATORHEXSTRING]</code>",id:"sbv2-aptos-aggregator-job-add-aggregatorhexstring",level:2},{value:"<code>sbv2 aptos aggregator update [AGGREGATORHEXSTRING]</code>",id:"sbv2-aptos-aggregator-update-aggregatorhexstring",level:2},{value:"<code>sbv2 aptos crank create [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-crank-create-queuehexstring",level:2},{value:"<code>sbv2 aptos crank list [CRANKHEXSTRING]</code>",id:"sbv2-aptos-crank-list-crankhexstring",level:2},{value:"<code>sbv2 aptos crank pop [CRANKHEXSTRING]</code>",id:"sbv2-aptos-crank-pop-crankhexstring",level:2},{value:"<code>sbv2 aptos crank push [CRANKHEXSTRING]</code>",id:"sbv2-aptos-crank-push-crankhexstring",level:2},{value:"<code>sbv2 aptos create aggregator [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-create-aggregator-queuehexstring",level:2},{value:"<code>sbv2 aptos create crank [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-create-crank-queuehexstring",level:2},{value:"<code>sbv2 aptos create job QUEUEHEXSTRING JOBDEFINITION</code>",id:"sbv2-aptos-create-job-queuehexstring-jobdefinition",level:2},{value:"<code>sbv2 aptos create oracle [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-create-oracle-queuehexstring",level:2},{value:"<code>sbv2 aptos create queue</code>",id:"sbv2-aptos-create-queue",level:2},{value:"<code>sbv2 aptos job create QUEUEHEXSTRING JOBDEFINITION</code>",id:"sbv2-aptos-job-create-queuehexstring-jobdefinition",level:2},{value:"<code>sbv2 aptos list crank [CRANKHEXSTRING]</code>",id:"sbv2-aptos-list-crank-crankhexstring",level:2},{value:"<code>sbv2 aptos oracle create [QUEUEHEXSTRING]</code>",id:"sbv2-aptos-oracle-create-queuehexstring",level:2},{value:"<code>sbv2 aptos oracle start [ORACLEHEXSTRING]</code>",id:"sbv2-aptos-oracle-start-oraclehexstring",level:2},{value:"<code>sbv2 aptos oracle up [ORACLEHEXSTRING]</code>",id:"sbv2-aptos-oracle-up-oraclehexstring",level:2},{value:"<code>sbv2 aptos pop crank [CRANKHEXSTRING]</code>",id:"sbv2-aptos-pop-crank-crankhexstring",level:2},{value:"<code>sbv2 aptos print ACCOUNTTYPE ADDRESS</code>",id:"sbv2-aptos-print-accounttype-address",level:2},{value:"<code>sbv2 aptos push crank [CRANKHEXSTRING]</code>",id:"sbv2-aptos-push-crank-crankhexstring",level:2},{value:"<code>sbv2 aptos queue create</code>",id:"sbv2-aptos-queue-create",level:2},{value:"<code>sbv2 aptos update aggregator [AGGREGATORHEXSTRING]</code>",id:"sbv2-aptos-update-aggregator-aggregatorhexstring",level:2}]};function l(e){let{components:a,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},r,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with switchboard on Aptos"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-account-airdrop"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos account airdrop"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-aggregator-add-job-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos aggregator add job [AGGREGATORHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-aggregator-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos aggregator create [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-aggregator-job-add-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos aggregator job add [AGGREGATORHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-aggregator-update-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos aggregator update [AGGREGATORHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-crank-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos crank create [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-crank-list-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos crank list [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-crank-pop-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos crank pop [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-crank-push-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos crank push [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-create-aggregator-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos create aggregator [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-create-crank-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos create crank [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-create-job-queuehexstring-jobdefinition"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos create job QUEUEHEXSTRING JOBDEFINITION"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-create-oracle-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos create oracle [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-create-queue"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos create queue"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-job-create-queuehexstring-jobdefinition"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos job create QUEUEHEXSTRING JOBDEFINITION"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-list-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos list crank [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-oracle-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos oracle create [QUEUEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-oracle-start-oraclehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos oracle start [ORACLEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-oracle-up-oraclehexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos oracle up [ORACLEHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-pop-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos pop crank [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-print-accounttype-address"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos print ACCOUNTTYPE ADDRESS"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-push-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos push crank [CRANKHEXSTRING]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-queue-create"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos queue create"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-aptos-update-aggregator-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 aptos update aggregator [AGGREGATORHEXSTRING]")))),(0,o.kt)("h2",{id:"sbv2-aptos-account-airdrop"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos account airdrop")),(0,o.kt)("p",null,"request an airdrop"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos account airdrop --address <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--json] [-n <value>]\n\nFLAGS\n  -h, --help              Show CLI help.\n  -n, --amount=<value>    [default: 50000] number of airdrops to request, 10_000 coins each\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --address=<value>       (required) HexString address of account to fund\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  request an airdrop\n")),(0,o.kt)("h2",{id:"sbv2-aptos-aggregator-add-job-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos aggregator add job [AGGREGATORHEXSTRING]")),(0,o.kt)("p",null,"add a job to an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos aggregator add job [AGGREGATORHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> |\n    --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\n\nARGUMENTS\n  AGGREGATORHEXSTRING  HexString address of the aggregator\n\nFLAGS\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --jobDefinition=<value>  filesystem path of job json definition file\n  --jobKey=<value>         public key of an existing job account to add to an aggregator\n  --jobWeight=<value>      [default: 1] job weight\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the job account\n  --name=<value>           name of the job account\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nDESCRIPTION\n  add a job to an aggregator\n\nALIASES\n  $ sbv2 aptos aggregator job add\n")),(0,o.kt)("h2",{id:"sbv2-aptos-aggregator-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos aggregator create [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create an aptos aggregator for a given queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos aggregator create [QUEUEHEXSTRING] --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\n    devnet|testnet] [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a\n    <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize\n    <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n\nFLAGS\n  -a, --authority=<value>      alternate named account that will be the authority for the oracle\n  -h, --help                   Show CLI help.\n  -j, --job=<value>...         filesystem path to job definition file\n  -s, --silent                 suppress cli prompts\n  -u, --rpcUrl=<value>         alternate RPC url\n  -v, --verbose                log everything\n  --batchSize=<value>          number of oracles requested for each open round call\n  --crankAddress=<value>       optional, address of the crank to add the aggregator to\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\n                               responses from oracles.\n  --keypair=<value>            (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>           metadata of the aggregator for easier identification\n  --minJobs=<value>            number of jobs that must respond before an oracle responds\n  --minOracles=<value>         number of oracles that must respond before a value is accepted on-chain\n  --name=<value>               name of the aggregator for easier identification\n  --networkId=<option>         [default: devnet] Aptos network to connect to\n                               <options: devnet|testnet>\n  --new                        create account at new AptosAccount with authority set to --account\n  --profileName=<value>        [default: default] If --keypair is pointing to a yaml file, provide an optional profile\n                               to load. If none provided, default will be used\n  --programId=<value>          [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                               programId on the selected Aptos network\n  --stateAddress=<value>       [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                               state address\n  --updateInterval=<value>     (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\n                               volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create an aptos aggregator for a given queue\n\nALIASES\n  $ sbv2 aptos create aggregator\n")),(0,o.kt)("h2",{id:"sbv2-aptos-aggregator-job-add-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos aggregator job add [AGGREGATORHEXSTRING]")),(0,o.kt)("p",null,"add a job to an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos aggregator job add [AGGREGATORHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> |\n    --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\n\nARGUMENTS\n  AGGREGATORHEXSTRING  HexString address of the aggregator\n\nFLAGS\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --jobDefinition=<value>  filesystem path of job json definition file\n  --jobKey=<value>         public key of an existing job account to add to an aggregator\n  --jobWeight=<value>      [default: 1] job weight\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the job account\n  --name=<value>           name of the job account\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nDESCRIPTION\n  add a job to an aggregator\n\nALIASES\n  $ sbv2 aptos aggregator job add\n")),(0,o.kt)("h2",{id:"sbv2-aptos-aggregator-update-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos aggregator update [AGGREGATORHEXSTRING]")),(0,o.kt)("p",null,"request a new value on-chain for an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos aggregator update [AGGREGATORHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>]\n\nARGUMENTS\n  AGGREGATORHEXSTRING  HexString address of the aggregator\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nDESCRIPTION\n  request a new value on-chain for an aggregator\n\nALIASES\n  $ sbv2 aptos update aggregator\n")),(0,o.kt)("h2",{id:"sbv2-aptos-crank-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos crank create [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create a new crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos crank create [QUEUEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--name <value>] [--metadata <value>]\n    [--maxRows <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString of the oracle queue to create a crank for\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --maxRows=<value>       [default: 100] maximum number of rows on the crank\n  --metadata=<value>      metadata of the queue for easier identification\n  --name=<value>          name of the queue for easier identification\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --new                   create account at new AptosAccount with authority set to --account\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nDESCRIPTION\n  create a new crank\n\nALIASES\n  $ sbv2 aptos create crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-crank-list-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos crank list [CRANKHEXSTRING]")),(0,o.kt)("p",null,"sort the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos crank list [CRANKHEXSTRING] [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  sort the crank\n\nALIASES\n  $ sbv2 aptos list crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-crank-pop-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos crank pop [CRANKHEXSTRING]")),(0,o.kt)("p",null,"pop the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos crank pop [CRANKHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  pop the crank\n\nALIASES\n  $ sbv2 aptos pop crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-crank-push-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos crank push [CRANKHEXSTRING]")),(0,o.kt)("p",null,"push an aggregator onto the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos crank push [CRANKHEXSTRING] --keypair <value> -a <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -a, --aggregatorHexString=<value>  (required) HexString address of the aggregator\n  -h, --help                         Show CLI help.\n  -s, --silent                       suppress cli prompts\n  -u, --rpcUrl=<value>               alternate RPC url\n  -v, --verbose                      log everything\n  --keypair=<value>                  (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>               [default: devnet] Aptos network to connect to\n                                     <options: devnet|testnet>\n  --profileName=<value>              [default: default] If --keypair is pointing to a yaml file, provide an optional\n                                     profile to load. If none provided, default will be used\n  --programId=<value>                [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd]\n                                     Switchboard programId on the selected Aptos network\n  --stateAddress=<value>             [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd]\n                                     Switchboard state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  push an aggregator onto the crank\n\nALIASES\n  $ sbv2 aptos push crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-create-aggregator-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos create aggregator [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create an aptos aggregator for a given queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos create aggregator [QUEUEHEXSTRING] --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\n    devnet|testnet] [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a\n    <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize\n    <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n\nFLAGS\n  -a, --authority=<value>      alternate named account that will be the authority for the oracle\n  -h, --help                   Show CLI help.\n  -j, --job=<value>...         filesystem path to job definition file\n  -s, --silent                 suppress cli prompts\n  -u, --rpcUrl=<value>         alternate RPC url\n  -v, --verbose                log everything\n  --batchSize=<value>          number of oracles requested for each open round call\n  --crankAddress=<value>       optional, address of the crank to add the aggregator to\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\n                               responses from oracles.\n  --keypair=<value>            (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>           metadata of the aggregator for easier identification\n  --minJobs=<value>            number of jobs that must respond before an oracle responds\n  --minOracles=<value>         number of oracles that must respond before a value is accepted on-chain\n  --name=<value>               name of the aggregator for easier identification\n  --networkId=<option>         [default: devnet] Aptos network to connect to\n                               <options: devnet|testnet>\n  --new                        create account at new AptosAccount with authority set to --account\n  --profileName=<value>        [default: default] If --keypair is pointing to a yaml file, provide an optional profile\n                               to load. If none provided, default will be used\n  --programId=<value>          [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                               programId on the selected Aptos network\n  --stateAddress=<value>       [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                               state address\n  --updateInterval=<value>     (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\n                               volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create an aptos aggregator for a given queue\n\nALIASES\n  $ sbv2 aptos create aggregator\n")),(0,o.kt)("h2",{id:"sbv2-aptos-create-crank-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos create crank [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create a new crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos create crank [QUEUEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--name <value>] [--metadata <value>]\n    [--maxRows <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString of the oracle queue to create a crank for\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --maxRows=<value>       [default: 100] maximum number of rows on the crank\n  --metadata=<value>      metadata of the queue for easier identification\n  --name=<value>          name of the queue for easier identification\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --new                   create account at new AptosAccount with authority set to --account\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nDESCRIPTION\n  create a new crank\n\nALIASES\n  $ sbv2 aptos create crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-create-job-queuehexstring-jobdefinition"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos create job QUEUEHEXSTRING JOBDEFINITION")),(0,o.kt)("p",null,"create a new job"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos create job [QUEUEHEXSTRING] [JOBDEFINITION] --keypair <value> [-h] [-v] [-s] [--networkId\n    devnet|testnet] [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>] [--new] [--weight <value>]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n  JOBDEFINITION   filesystem path to job definition\n\nFLAGS\n  -a, --authority=<value>  alternate named account that will be the authority for the job account\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the job for easier identification\n  --name=<value>           name of the job for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n  --weight=<value>         [default: 1] job weight to assign\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new job\n\nALIASES\n  $ sbv2 aptos create job\n")),(0,o.kt)("h2",{id:"sbv2-aptos-create-oracle-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos create oracle [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create a oracle for a given queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos create oracle [QUEUEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>]\n    [--metadata <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n\nFLAGS\n  -a, --authority=<value>  alternate named account that will be the authority for the oracle\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the oracle for easier identification\n  --name=<value>           name of the oracle for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a oracle for a given queue\n\nALIASES\n  $ sbv2 aptos create oracle\n")),(0,o.kt)("h2",{id:"sbv2-aptos-create-queue"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos create queue")),(0,o.kt)("p",null,"create a new oracle queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos create queue --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]\n\nFLAGS\n  -a, --authority=<value>  alternate account HexString that will be the authority for the queue\n  -h, --help               Show CLI help.\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --enableBufferRelayers   enable oracles to fulfill buffer relayer requests\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --lockLeaseFunding       lock lease funding\n  --metadata=<value>       metadata of the queue for easier identification\n  --minStake=<value>       minimum stake required by an oracle to join the queue\n  --name=<value>           name of the queue for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\n  --slashingEnabled        permit slashing malicous oracles\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n  --unpermissionedFeeds    permit unpermissioned feeds\n  --unpermissionedVrf      permit unpermissioned VRF accounts\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new oracle queue\n\nALIASES\n  $ sbv2 aptos create queue\n")),(0,o.kt)("h2",{id:"sbv2-aptos-job-create-queuehexstring-jobdefinition"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos job create QUEUEHEXSTRING JOBDEFINITION")),(0,o.kt)("p",null,"create a new job"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos job create [QUEUEHEXSTRING] [JOBDEFINITION] --keypair <value> [-h] [-v] [-s] [--networkId\n    devnet|testnet] [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>] [--new] [--weight <value>]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n  JOBDEFINITION   filesystem path to job definition\n\nFLAGS\n  -a, --authority=<value>  alternate named account that will be the authority for the job account\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the job for easier identification\n  --name=<value>           name of the job for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n  --weight=<value>         [default: 1] job weight to assign\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new job\n\nALIASES\n  $ sbv2 aptos create job\n")),(0,o.kt)("h2",{id:"sbv2-aptos-list-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos list crank [CRANKHEXSTRING]")),(0,o.kt)("p",null,"sort the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos list crank [CRANKHEXSTRING] [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  sort the crank\n\nALIASES\n  $ sbv2 aptos list crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-oracle-create-queuehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos oracle create [QUEUEHEXSTRING]")),(0,o.kt)("p",null,"create a oracle for a given queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos oracle create [QUEUEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>]\n    [--metadata <value>] [--new]\n\nARGUMENTS\n  QUEUEHEXSTRING  HexString address of the queue\n\nFLAGS\n  -a, --authority=<value>  alternate named account that will be the authority for the oracle\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --metadata=<value>       metadata of the oracle for easier identification\n  --name=<value>           name of the oracle for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a oracle for a given queue\n\nALIASES\n  $ sbv2 aptos create oracle\n")),(0,o.kt)("h2",{id:"sbv2-aptos-oracle-start-oraclehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos oracle start [ORACLEHEXSTRING]")),(0,o.kt)("p",null,"start an aptos oracle in docker"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos oracle start [ORACLEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [-a <value>]\n\nARGUMENTS\n  ORACLEHEXSTRING  HexString address of the oracle\n\nFLAGS\n  -a, --authority=<value>  alternate named account that is the authority for the oracle\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nDESCRIPTION\n  start an aptos oracle in docker\n\nALIASES\n  $ sbv2 aptos oracle start\n")),(0,o.kt)("h2",{id:"sbv2-aptos-oracle-up-oraclehexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos oracle up [ORACLEHEXSTRING]")),(0,o.kt)("p",null,"start an aptos oracle in docker"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos oracle up [ORACLEHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [-a <value>]\n\nARGUMENTS\n  ORACLEHEXSTRING  HexString address of the oracle\n\nFLAGS\n  -a, --authority=<value>  alternate named account that is the authority for the oracle\n  -h, --help               Show CLI help.\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n\nDESCRIPTION\n  start an aptos oracle in docker\n\nALIASES\n  $ sbv2 aptos oracle start\n")),(0,o.kt)("h2",{id:"sbv2-aptos-pop-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos pop crank [CRANKHEXSTRING]")),(0,o.kt)("p",null,"pop the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos pop crank [CRANKHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId\n    <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  pop the crank\n\nALIASES\n  $ sbv2 aptos pop crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-print-accounttype-address"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos print ACCOUNTTYPE ADDRESS")),(0,o.kt)("p",null,"print an aptos account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos print [ACCOUNTTYPE] [ADDRESS] [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--json]\n\nARGUMENTS\n  ACCOUNTTYPE  (queue|aggregator|crank|oracle|permission|lease|job|state) account type to print\n  ADDRESS      HexString address of the account to print\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  print an aptos account\n\nALIASES\n  $ sbv2 aptos print\n")),(0,o.kt)("h2",{id:"sbv2-aptos-push-crank-crankhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos push crank [CRANKHEXSTRING]")),(0,o.kt)("p",null,"push an aggregator onto the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos push crank [CRANKHEXSTRING] --keypair <value> -a <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json]\n\nARGUMENTS\n  CRANKHEXSTRING  HexString address of the crank\n\nFLAGS\n  -a, --aggregatorHexString=<value>  (required) HexString address of the aggregator\n  -h, --help                         Show CLI help.\n  -s, --silent                       suppress cli prompts\n  -u, --rpcUrl=<value>               alternate RPC url\n  -v, --verbose                      log everything\n  --keypair=<value>                  (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>               [default: devnet] Aptos network to connect to\n                                     <options: devnet|testnet>\n  --profileName=<value>              [default: default] If --keypair is pointing to a yaml file, provide an optional\n                                     profile to load. If none provided, default will be used\n  --programId=<value>                [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd]\n                                     Switchboard programId on the selected Aptos network\n  --stateAddress=<value>             [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd]\n                                     Switchboard state address\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  push an aggregator onto the crank\n\nALIASES\n  $ sbv2 aptos push crank\n")),(0,o.kt)("h2",{id:"sbv2-aptos-queue-create"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos queue create")),(0,o.kt)("p",null,"create a new oracle queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos queue create --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet] [--programId <value>]\n    [--stateAddress <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]\n\nFLAGS\n  -a, --authority=<value>  alternate account HexString that will be the authority for the queue\n  -h, --help               Show CLI help.\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\n  -s, --silent             suppress cli prompts\n  -u, --rpcUrl=<value>     alternate RPC url\n  -v, --verbose            log everything\n  --enableBufferRelayers   enable oracles to fulfill buffer relayer requests\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\n  --lockLeaseFunding       lock lease funding\n  --metadata=<value>       metadata of the queue for easier identification\n  --minStake=<value>       minimum stake required by an oracle to join the queue\n  --name=<value>           name of the queue for easier identification\n  --networkId=<option>     [default: devnet] Aptos network to connect to\n                           <options: devnet|testnet>\n  --new                    create account at new AptosAccount with authority set to --account\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                           load. If none provided, default will be used\n  --programId=<value>      [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           programId on the selected Aptos network\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\n  --slashingEnabled        permit slashing malicous oracles\n  --stateAddress=<value>   [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                           state address\n  --unpermissionedFeeds    permit unpermissioned feeds\n  --unpermissionedVrf      permit unpermissioned VRF accounts\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new oracle queue\n\nALIASES\n  $ sbv2 aptos create queue\n")),(0,o.kt)("h2",{id:"sbv2-aptos-update-aggregator-aggregatorhexstring"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 aptos update aggregator [AGGREGATORHEXSTRING]")),(0,o.kt)("p",null,"request a new value on-chain for an aggregator"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 aptos update aggregator [AGGREGATORHEXSTRING] --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet]\n    [--programId <value>] [--stateAddress <value>] [-u <value>] [--profileName <value>]\n\nARGUMENTS\n  AGGREGATORHEXSTRING  HexString address of the aggregator\n\nFLAGS\n  -h, --help              Show CLI help.\n  -s, --silent            suppress cli prompts\n  -u, --rpcUrl=<value>    alternate RPC url\n  -v, --verbose           log everything\n  --keypair=<value>       (required) Path to AptosAccount keypair or config.yaml file\n  --networkId=<option>    [default: devnet] Aptos network to connect to\n                          <options: devnet|testnet>\n  --profileName=<value>   [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\n                          load. If none provided, default will be used\n  --programId=<value>     [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          programId on the selected Aptos network\n  --stateAddress=<value>  [default: 0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd] Switchboard\n                          state address\n\nDESCRIPTION\n  request a new value on-chain for an aggregator\n\nALIASES\n  $ sbv2 aptos update aggregator\n")))}l.isMDXComponent=!0}}]);