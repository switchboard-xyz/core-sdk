"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[51059],{82764:(e,t,a)=>{a.d(t,{Z:()=>h});var r=a(45675),o=a(92897),s=a(49231),n=a(19841),i=a(32301),l=a(56133),d=a(32268),c=a(38026),u=a(1274),p=a(7523);function g(e){return(0,p.Z)("MuiCard",e)}(0,u.Z)("MuiCard",["root"]);var m=a(20264);const v=["className","raised"],b=(0,l.ZP)(c.Z,{name:"MuiCard",slot:"Root",overridesResolver:(e,t)=>t.root})((()=>({overflow:"hidden"}))),h=s.forwardRef((function(e,t){const a=(0,d.Z)({props:e,name:"MuiCard"}),{className:s,raised:l=!1}=a,c=(0,o.Z)(a,v),u=(0,r.Z)({},a,{raised:l}),p=(e=>{const{classes:t}=e;return(0,i.Z)({root:["root"]},g,t)})(u);return(0,m.jsx)(b,(0,r.Z)({className:(0,n.Z)(p.root,s),elevation:l?8:void 0,ref:t,ownerState:u},c))}))},63607:(e,t,a)=>{a.d(t,{Z:()=>b});var r=a(45675),o=a(92897),s=a(49231),n=a(19841),i=a(32301),l=a(56133),d=a(32268),c=a(1274),u=a(7523);function p(e){return(0,u.Z)("MuiCardContent",e)}(0,c.Z)("MuiCardContent",["root"]);var g=a(20264);const m=["className","component"],v=(0,l.ZP)("div",{name:"MuiCardContent",slot:"Root",overridesResolver:(e,t)=>t.root})((()=>({padding:16,"&:last-child":{paddingBottom:24}}))),b=s.forwardRef((function(e,t){const a=(0,d.Z)({props:e,name:"MuiCardContent"}),{className:s,component:l="div"}=a,c=(0,o.Z)(a,m),u=(0,r.Z)({},a,{component:l}),b=(e=>{const{classes:t}=e;return(0,i.Z)({root:["root"]},p,t)})(u);return(0,g.jsx)(v,(0,r.Z)({as:l,className:(0,n.Z)(b.root,s),ownerState:u,ref:t},c))}))},27429:(e,t,a)=>{a.d(t,{Z:()=>y});var r=a(92897),o=a(45675),s=a(49231),n=a(19841),i=a(32301),l=a(69681),d=a(32268),c=a(56133),u=a(1274),p=a(7523);function g(e){return(0,p.Z)("MuiCardHeader",e)}const m=(0,u.Z)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var v=a(20264);const b=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],h=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,t)=>(0,o.Z)({[`& .${m.title}`]:t.title,[`& .${m.subheader}`]:t.subheader},t.root)})({display:"flex",alignItems:"center",padding:16}),f=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,t)=>t.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),k=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,t)=>t.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),Z=(0,c.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,t)=>t.content})({flex:"1 1 auto"}),y=s.forwardRef((function(e,t){const a=(0,d.Z)({props:e,name:"MuiCardHeader"}),{action:s,avatar:c,className:u,component:p="div",disableTypography:m=!1,subheader:y,subheaderTypographyProps:x,title:w,titleTypographyProps:_}=a,C=(0,r.Z)(a,b),M=(0,o.Z)({},a,{component:p,disableTypography:m}),N=(e=>{const{classes:t}=e;return(0,i.Z)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},g,t)})(M);let S=w;null==S||S.type===l.Z||m||(S=(0,v.jsx)(l.Z,(0,o.Z)({variant:c?"body2":"h5",className:N.title,component:"span",display:"block"},_,{children:S})));let R=y;return null==R||R.type===l.Z||m||(R=(0,v.jsx)(l.Z,(0,o.Z)({variant:c?"body2":"body1",className:N.subheader,color:"text.secondary",component:"span",display:"block"},x,{children:R}))),(0,v.jsxs)(h,(0,o.Z)({className:(0,n.Z)(N.root,u),as:p,ref:t,ownerState:M},C,{children:[c&&(0,v.jsx)(f,{className:N.avatar,ownerState:M,children:c}),(0,v.jsxs)(Z,{className:N.content,ownerState:M,children:[S,R]}),s&&(0,v.jsx)(k,{className:N.action,ownerState:M,children:s})]}))}))},26365:(e,t,a)=>{a.d(t,{Z:()=>b});var r=a(68868),o=a(49231),s=a(63607),n=a(69681),i=a(44018),l=a(27429),d=a(82764),c=a(15733),u=a(57236),p=a(65137);const g=(0,u.Z)(d.Z)((e=>{let{theme:t,dark:a}=e;return{display:"flex",flexDirection:"row",justifyItems:"baseline",background:a?"rgba(42, 56, 68, 1)":"rgba(255, 255, 255, 0.6)",border:(a?.15:.1)+"rem solid var(--ifm-navbar-link-color)",borderRadius:"13.2px",boxShadow:"0 6px 7px 5px rgba(107 107 107, 0.03)",boxSizing:"border-box",width:"100%",height:"100%",verticalAlign:"middle",textDecoration:"none",[t.breakpoints.down(300)]:{paddingLeft:""},transition:"transform 0.15s ease-in-out","&&&:hover":{background:a?"rgba(42, 56, 68, 1)":"white",transform:"scale3d(1.05, 1.05, 1)"}}})),m=(0,u.Z)(l.Z)((e=>{let{theme:t}=e;return{display:"flex",maxHeight:"96px"}}));function v(e){let{title:t,image:a,imageDark:r,description:l,to:d,sx:u}=e;const{colorMode:v}=(0,p.I)();return o.createElement(c.Z,{href:d,style:{textDecoration:"none"}},o.createElement(g,{dark:"dark"===v?1:0,sx:u},o.createElement(s.Z,{sx:{height:"100%",width:"100%"}},o.createElement(m,{avatar:o.createElement("div",{style:{height:48,width:48,display:"flex",alignItems:"center",justifyContent:"center"}},"dark"===v&&r?r:a),title:t,titleTypographyProps:{fontSize:"1.25rem",color:"var(--ifm-navbar-link-color)",fontWeight:"var(--ifm-font-weight-bold)"}}),l?o.createElement(o.Fragment,null,o.createElement(i.Z,{sx:{marginBottom:"1rem"}}),o.createElement(n.Z,{variant:"body2",color:"textSecondary",component:"p",sx:{color:"var(--ifm-navbar-link-color)",fontSize:"1.1rem"}},l)):o.createElement(o.Fragment,null))))}function b(e){let{items:t,cols:a,sx:s,direction:n,justifyContent:i,alignItems:l}=e;return o.createElement(r.ZP,{container:!0,spacing:3,direction:n??"row",justifyContent:i,alignItems:l},t.map((e=>o.createElement(r.ZP,{key:e.title,item:!0,style:{flexGrow:1},xs:12,md:6,lg:Math.floor(12/a??2)},o.createElement(v,{title:e.title,image:e.image,imageDark:e.imageDark,to:e.to,description:e.description,sx:s})))))}},41592:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>d,toc:()=>u});var r=a(48041),o=(a(49231),a(54852)),s=a(26365),n=a(43939);const i={sidebar_position:10,title:"sbv2-aptos"},l=void 0,d={unversionedId:"aptos/dev/move",id:"aptos/dev/move",title:"sbv2-aptos",description:"A Move module to interact with Switchboard V2 on Aptos.",source:"@site/docs/aptos/dev/move.mdx",sourceDirName:"aptos/dev",slug:"/aptos/dev/move",permalink:"/aptos/dev/move",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"sbv2-aptos"},sidebar:"aptos",previous:{title:"Sbv2 CLI",permalink:"/aptos/dev/cli"},next:{title:"@switchboard-xyz/aptos.js",permalink:"/aptos/dev/javascript"}},c={},u=[{value:"Quick Links",id:"quick-links",level:2},{value:"Install",id:"install",level:2},{value:"Reading Feeds",id:"reading-feeds",level:2},{value:"Tests",id:"tests",level:2}],p={toc:u},g="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(g,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"A Move module to interact with Switchboard V2 on Aptos."),(0,o.kt)("h2",{id:"quick-links"},"Quick Links"),(0,o.kt)(s.Z,{cols:2,items:[{to:"https://github.com/switchboard-xyz/sbv2-aptos/tree/main/move/switchboard",title:"Github",description:"View the Github repo",image:(0,o.kt)("img",{src:(0,n.Z)("/img/icons/github/light.svg")}),imageDark:(0,o.kt)("img",{src:(0,n.Z)("/img/icons/github/dark.svg")})}],mdxType:"RoundedCardGroup"}),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,"Add the following to your ",(0,o.kt)("inlineCode",{parentName:"p"},"Move.toml")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[addresses]\nswitchboard = "0xc9b4bb0b1f7a343687c4f8bc6eea36dd2a3aa8d654e640050ab5b8635a6b9cbd"\n\n[dependencies]\nMoveStdlib = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/move-stdlib/", rev = "devnet" }\nAptosFramework = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/aptos-framework/", rev = "devnet" }\nAptosStdlib = { git = "https://github.com/aptos-labs/aptos-core.git", subdir = "aptos-move/framework/aptos-stdlib/", rev = "devnet" }\nSwitchboard = { git = "https://github.com/switchboard-xyz/sbv2-aptos.git", subdir = "switchboard-move/switchboard/", rev = "main" }\n')),(0,o.kt)("h2",{id:"reading-feeds"},"Reading Feeds"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"use switchboard::aggregator;\nuse switchboard::math;\n\n// store latest value\nstruct AggregatorInfo has copy, drop, store, key {\n    aggregator_addr: address,\n    latest_result: u128,\n    latest_result_scaling_factor: u8,\n    latest_result_neg: bool,\n}\n\n// get latest value\npublic fun save_latest_value(aggregator_addr: address) {\n    // get latest value\n    let latest_value = aggregator::latest_value(aggregator_addr);\n    let (value, scaling_factor, neg) = math::unpack(latest_value);\n    move_to(account, AggregatorInfo {\n        aggregator_addr: aggregator_addr,\n        latest_result: value,\n        latest_result_scaling_factor: scaling_factor,\n        latest_result_neg: neg,\n    });\n}\n")),(0,o.kt)("h2",{id:"tests"},"Tests"),(0,o.kt)("p",null,"Some testing that uses aggregator test utility functions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"#[test(account = @0x1)]\npublic entry fun test_aggregator(account: &signer) {\n\n    // creates test aggregator with data\n    aggregator::new_test(account, 100, 0, false);\n\n    // print out value\n    std::debug::print(&aggregator::latest_value(signer::address_of(account)));\n}\n")))}m.isMDXComponent=!0}}]);