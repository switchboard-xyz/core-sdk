"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9172],{3905:(e,a,n)=>{n.d(a,{Zo:()=>d,kt:()=>p});var t=n(67294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function o(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?o(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=t.createContext({}),u=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},d=function(e){var a=u(e.components);return t.createElement(i.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},v=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),v=u(n),p=r,g=v["".concat(i,".").concat(p)]||v[p]||c[p]||o;return n?t.createElement(g,l(l({ref:a},d),{},{components:n})):t.createElement(g,l({ref:a},d))}));function p(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=v;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=n[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}v.displayName="MDXCreateElement"},85162:(e,a,n)=>{n.d(a,{Z:()=>l});var t=n(67294),r=n(86010);const o="tabItem_Ymn6";function l(e){let{children:a,hidden:n,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:n},a)}},65488:(e,a,n)=>{n.d(a,{Z:()=>p});var t=n(83117),r=n(67294),o=n(86010),l=n(72389),s=n(67392),i=n(7094),u=n(12466);const d="tabList__CuJ",c="tabItem_LNqP";function v(e){var a,n;const{lazy:l,block:v,defaultValue:p,values:g,groupId:m,className:h}=e,b=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=g?g:b.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),S=(0,s.l)(f,((e,a)=>e.value===a.value));if(S.length>0)throw new Error('Docusaurus error: Duplicate values "'+S.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===p?p:null!=(a=null!=p?p:null==(n=b.find((e=>e.props.default)))?void 0:n.props.value)?a:b[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:A,setTabGroupChoices:D}=(0,i.U)(),[N,E]=(0,r.useState)(k),I=[],{blockElementScrollPositionUntilNextRender:w}=(0,u.o5)();if(null!=m){const e=A[m];null!=e&&e!==N&&f.some((a=>a.value===e))&&E(e)}const R=e=>{const a=e.currentTarget,n=I.indexOf(a),t=f[n].value;t!==N&&(w(a),E(t),null!=m&&D(m,String(t)))},C=e=>{var a;let n=null;switch(e.key){case"ArrowRight":{var t;const a=I.indexOf(e.currentTarget)+1;n=null!=(t=I[a])?t:I[0];break}case"ArrowLeft":{var r;const a=I.indexOf(e.currentTarget)-1;n=null!=(r=I[a])?r:I[I.length-1];break}}null==(a=n)||a.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":v},h)},f.map((e=>{let{value:a,label:n,attributes:l}=e;return r.createElement("li",(0,t.Z)({role:"tab",tabIndex:N===a?0:-1,"aria-selected":N===a,key:a,ref:e=>I.push(e),onKeyDown:C,onFocus:R,onClick:R},l,{className:(0,o.Z)("tabs__item",c,null==l?void 0:l.className,{"tabs__item--active":N===a})}),null!=n?n:a)}))),l?(0,r.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},b.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==N})))))}function p(e){const a=(0,l.Z)();return r.createElement(v,(0,t.Z)({key:String(a)},e))}},89500:(e,a,n)=>{n.d(a,{ZP:()=>l});var t=n(83117),r=(n(67294),n(3905));const o={toc:[{value:"<code>sbv2 near aggregator add job [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-add-job-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator create QUEUEADDRESS</code>",id:"sbv2-near-aggregator-create-queueaddress",level:2},{value:"<code>sbv2 near aggregator fetch</code>",id:"sbv2-near-aggregator-fetch",level:2},{value:"<code>sbv2 near aggregator job add [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-job-add-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator job remove [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-job-remove-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator permission create [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-permission-create-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator remove job [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-remove-job-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator set AGGREGATORADDRESS</code>",id:"sbv2-near-aggregator-set-aggregatoraddress",level:2},{value:"<code>sbv2 near aggregator up AGGREGATORDEFINITIONPATH</code>",id:"sbv2-near-aggregator-up-aggregatordefinitionpath",level:2},{value:"<code>sbv2 near aggregator update [AGGREGATORADDRESS]</code>",id:"sbv2-near-aggregator-update-aggregatoraddress",level:2},{value:"<code>sbv2 near crank create [QUEUEADDRESS]</code>",id:"sbv2-near-crank-create-queueaddress",level:2},{value:"<code>sbv2 near crank pop [CRANKADDRESS]</code>",id:"sbv2-near-crank-pop-crankaddress",level:2},{value:"<code>sbv2 near crank push [CRANKADDRESS]</code>",id:"sbv2-near-crank-push-crankaddress",level:2},{value:"<code>sbv2 near create aggregator QUEUEADDRESS</code>",id:"sbv2-near-create-aggregator-queueaddress",level:2},{value:"<code>sbv2 near create aggregator permission [AGGREGATORADDRESS]</code>",id:"sbv2-near-create-aggregator-permission-aggregatoraddress",level:2},{value:"<code>sbv2 near create crank [QUEUEADDRESS]</code>",id:"sbv2-near-create-crank-queueaddress",level:2},{value:"<code>sbv2 near create escrow</code>",id:"sbv2-near-create-escrow",level:2},{value:"<code>sbv2 near create job JOBDEFINITION</code>",id:"sbv2-near-create-job-jobdefinition",level:2},{value:"<code>sbv2 near create oracle [QUEUEADDRESS]</code>",id:"sbv2-near-create-oracle-queueaddress",level:2},{value:"<code>sbv2 near create oracle permission [ORACLEADDRESS]</code>",id:"sbv2-near-create-oracle-permission-oracleaddress",level:2},{value:"<code>sbv2 near create queue</code>",id:"sbv2-near-create-queue",level:2},{value:"<code>sbv2 near escrow create</code>",id:"sbv2-near-escrow-create",level:2},{value:"<code>sbv2 near fetch aggregators</code>",id:"sbv2-near-fetch-aggregators",level:2},{value:"<code>sbv2 near job create JOBDEFINITION</code>",id:"sbv2-near-job-create-jobdefinition",level:2},{value:"<code>sbv2 near list queue QUEUEADDRESS</code>",id:"sbv2-near-list-queue-queueaddress",level:2},{value:"<code>sbv2 near oracle create [QUEUEADDRESS]</code>",id:"sbv2-near-oracle-create-queueaddress",level:2},{value:"<code>sbv2 near oracle permission create [ORACLEADDRESS]</code>",id:"sbv2-near-oracle-permission-create-oracleaddress",level:2},{value:"<code>sbv2 near permission create</code>",id:"sbv2-near-permission-create",level:2},{value:"<code>sbv2 near pop crank [CRANKADDRESS]</code>",id:"sbv2-near-pop-crank-crankaddress",level:2},{value:"<code>sbv2 near print ACCOUNTTYPE ADDRESS</code>",id:"sbv2-near-print-accounttype-address",level:2},{value:"<code>sbv2 near push crank [CRANKADDRESS]</code>",id:"sbv2-near-push-crank-crankaddress",level:2},{value:"<code>sbv2 near queue aggregators QUEUEADDRESS</code>",id:"sbv2-near-queue-aggregators-queueaddress",level:2},{value:"<code>sbv2 near queue create</code>",id:"sbv2-near-queue-create",level:2},{value:"<code>sbv2 near queue feeds QUEUEADDRESS</code>",id:"sbv2-near-queue-feeds-queueaddress",level:2},{value:"<code>sbv2 near queue list QUEUEADDRESS</code>",id:"sbv2-near-queue-list-queueaddress",level:2},{value:"<code>sbv2 near set aggregator AGGREGATORADDRESS</code>",id:"sbv2-near-set-aggregator-aggregatoraddress",level:2},{value:"<code>sbv2 near update aggregator [AGGREGATORADDRESS]</code>",id:"sbv2-near-update-aggregator-aggregatoraddress",level:2}]};function l(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},o,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"interact with switchboard on Near"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-add-job-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator add job [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator create QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-fetch"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator fetch"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-job-add-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator job add [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-job-remove-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator job remove [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-permission-create-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator permission create [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-remove-job-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator remove job [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-set-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator set AGGREGATORADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-up-aggregatordefinitionpath"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator up AGGREGATORDEFINITIONPATH"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-aggregator-update-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near aggregator update [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-crank-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near crank create [QUEUEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-crank-pop-crankaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near crank pop [CRANKADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-crank-push-crankaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near crank push [CRANKADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-aggregator-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create aggregator QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-aggregator-permission-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create aggregator permission [AGGREGATORADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-crank-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create crank [QUEUEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-escrow"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create escrow"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-job-jobdefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create job JOBDEFINITION"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-oracle-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create oracle [QUEUEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-oracle-permission-oracleaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create oracle permission [ORACLEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-create-queue"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near create queue"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-escrow-create"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near escrow create"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-fetch-aggregators"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near fetch aggregators"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-job-create-jobdefinition"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near job create JOBDEFINITION"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-list-queue-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near list queue QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-oracle-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near oracle create [QUEUEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-oracle-permission-create-oracleaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near oracle permission create [ORACLEADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-permission-create"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near permission create"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-pop-crank-crankaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near pop crank [CRANKADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-print-accounttype-address"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near print ACCOUNTTYPE ADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-push-crank-crankaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near push crank [CRANKADDRESS]"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-queue-aggregators-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near queue aggregators QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-queue-create"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near queue create"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-queue-feeds-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near queue feeds QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-queue-list-queueaddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near queue list QUEUEADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-set-aggregator-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near set aggregator AGGREGATORADDRESS"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sbv2-near-update-aggregator-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"a"},"sbv2 near update aggregator [AGGREGATORADDRESS]")))),(0,r.kt)("h2",{id:"sbv2-near-aggregator-add-job-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator add job [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"add a job to an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator add job [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight\n    <value>]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --jobDefinition=<value>       filesystem path of job json definition file\n  --jobKey=<value>              public key of an existing job account to add to an aggregator\n  --jobWeight=<value>           [default: 1] job weight\n  --metadata=<value>            metadata of the job account\n  --name=<value>                name of the job account\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  add a job to an aggregator\n\nALIASES\n  $ sbv2 near aggregator job add\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator create QUEUEADDRESS")),(0,r.kt)("p",null,"create a near aggregator for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator create [QUEUEADDRESS] --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize\n    <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>]\n    [--historyLimit <value>] [--enable]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --batchSize=<value>           number of oracles requested for each open round call\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\n  --enable                      if required and queue authority is provided, enable permissions\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\n                                responses from oracles.\n  --historyLimit=<value>        [default: 1000] number of samples to store in aggregator's history\n  --metadata=<value>            metadata of the crank for easier identification\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --rewardEscrow=<value>        where to send rewards. defaults to user's escrow account\n  --updateInterval=<value>      (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\n                                volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a near aggregator for a given queue\n\nALIASES\n  $ sbv2 near create aggregator\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-fetch"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator fetch")),(0,r.kt)("p",null,"fetch all aggregators for a given near account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator fetch --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountId=<value>           (required) optional, authority to fetch aggregators for\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  fetch all aggregators for a given near account\n\nALIASES\n  $ sbv2 near fetch aggregators\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-job-add-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator job add [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"add a job to an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator job add [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight\n    <value>]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --jobDefinition=<value>       filesystem path of job json definition file\n  --jobKey=<value>              public key of an existing job account to add to an aggregator\n  --jobWeight=<value>           [default: 1] job weight\n  --metadata=<value>            metadata of the job account\n  --name=<value>                name of the job account\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  add a job to an aggregator\n\nALIASES\n  $ sbv2 near aggregator job add\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-job-remove-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator job remove [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"remove a job to an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator job remove [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [-j <value>]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\n  -h, --help                    Show CLI help.\n  -j, --jobAddress=<value>...   public key of an existing job account to remove from an aggregator\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  remove a job to an aggregator\n\nALIASES\n  $ sbv2 near aggregator job remove\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-permission-create-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator permission create [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"create a permission account for a near aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator permission create [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a permission account for a near aggregator\n\nALIASES\n  $ sbv2 near create aggregator permission\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-remove-job-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator remove job [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"remove a job to an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator remove job [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [-j <value>]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\n  -h, --help                    Show CLI help.\n  -j, --jobAddress=<value>...   public key of an existing job account to remove from an aggregator\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  remove a job to an aggregator\n\nALIASES\n  $ sbv2 near aggregator job remove\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-set-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator set AGGREGATORADDRESS")),(0,r.kt)("p",null,"set a near aggregator's config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator set [AGGREGATORADDRESS] --accountName <value> --updateInterval <value> [-h] [-v] [-s]\n    [--networkId testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>]\n    [--json] [-a <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>]\n    [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>]\n    [--rewardEscrow <value>] [--historyLimit <value>] [--enable]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -j, --job=<value>...          filesystem path to job definition file\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --batchSize=<value>           number of oracles requested for each open round call\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\n  --enable                      if required and queue authority is provided, enable permissions\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\n                                responses from oracles.\n  --historyLimit=<value>        [default: 1000] number of samples to store in aggregator's history\n  --metadata=<value>            metadata of the crank for easier identification\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --rewardEscrow=<value>        where to send rewards. defaults to user's escrow account\n  --updateInterval=<value>      (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\n                                volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  set a near aggregator's config\n\nALIASES\n  $ sbv2 near set aggregator\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-up-aggregatordefinitionpath"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator up AGGREGATORDEFINITIONPATH")),(0,r.kt)("p",null,"anneal an aggregator and sync settings and target lease amount"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator up [AGGREGATORDEFINITIONPATH] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>]\n\nARGUMENTS\n  AGGREGATORDEFINITIONPATH  file path to aggregator containing the desired settings\n\nFLAGS\n  -a, --authority=<value>       alternate named account that is the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  anneal an aggregator and sync settings and target lease amount\n")),(0,r.kt)("h2",{id:"sbv2-near-aggregator-update-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near aggregator update [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"request a new value on-chain for an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near aggregator update [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  request a new value on-chain for an aggregator\n\nALIASES\n  $ sbv2 near update aggregator\n")),(0,r.kt)("h2",{id:"sbv2-near-crank-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near crank create [QUEUEADDRESS]")),(0,r.kt)("p",null,"create a new crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near crank create [QUEUEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name\n    <value>] [--metadata <value>] [--maxRows <value>]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --maxRows=<value>             [default: 100] maximum number of rows on the crank\n  --metadata=<value>            metadata of the crank for easier identification\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new crank\n\nALIASES\n  $ sbv2 near create crank\n")),(0,r.kt)("h2",{id:"sbv2-near-crank-pop-crankaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near crank pop [CRANKADDRESS]")),(0,r.kt)("p",null,"pop the crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near crank pop [CRANKADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  pop the crank\n\nALIASES\n  $ sbv2 near pop crank\n")),(0,r.kt)("h2",{id:"sbv2-near-crank-push-crankaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near crank push [CRANKADDRESS]")),(0,r.kt)("p",null,"push an aggregator onto the crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near crank push [CRANKADDRESS] --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --aggregatorAddress=<value>  (required) address of the aggregator in Uint8 or Base58 encoding\n  -h, --help                       Show CLI help.\n  -s, --silent                     suppress cli prompts\n  -u, --rpcUrl=<value>             alternate RPC url\n  -v, --verbose                    log everything\n  --accountName=<value>            (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>     [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                   Defaults to ~/.near-credentials\n  --networkId=<option>             [default: testnet] Near network ID to connect to\n                                   <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>              [default: switchboard-v2.testnet] Switchboard programId on the selected Near\n                                   networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  push an aggregator onto the crank\n\nALIASES\n  $ sbv2 near push crank\n")),(0,r.kt)("h2",{id:"sbv2-near-create-aggregator-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create aggregator QUEUEADDRESS")),(0,r.kt)("p",null,"create a near aggregator for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create aggregator [QUEUEADDRESS] --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize\n    <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>]\n    [--historyLimit <value>] [--enable]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --batchSize=<value>           number of oracles requested for each open round call\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\n  --enable                      if required and queue authority is provided, enable permissions\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\n                                responses from oracles.\n  --historyLimit=<value>        [default: 1000] number of samples to store in aggregator's history\n  --metadata=<value>            metadata of the crank for easier identification\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --rewardEscrow=<value>        where to send rewards. defaults to user's escrow account\n  --updateInterval=<value>      (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\n                                volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a near aggregator for a given queue\n\nALIASES\n  $ sbv2 near create aggregator\n")),(0,r.kt)("h2",{id:"sbv2-near-create-aggregator-permission-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create aggregator permission [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"create a permission account for a near aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create aggregator permission [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a permission account for a near aggregator\n\nALIASES\n  $ sbv2 near create aggregator permission\n")),(0,r.kt)("h2",{id:"sbv2-near-create-crank-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create crank [QUEUEADDRESS]")),(0,r.kt)("p",null,"create a new crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create crank [QUEUEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name\n    <value>] [--metadata <value>] [--maxRows <value>]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --maxRows=<value>             [default: 100] maximum number of rows on the crank\n  --metadata=<value>            metadata of the crank for easier identification\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new crank\n\nALIASES\n  $ sbv2 near create crank\n")),(0,r.kt)("h2",{id:"sbv2-near-create-escrow"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create escrow")),(0,r.kt)("p",null,"create an escrow token account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create escrow --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --mint=<value>                [default: wrap.test] token mint to create escrow account for\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create an escrow token account\n\nALIASES\n  $ sbv2 near create escrow\n")),(0,r.kt)("h2",{id:"sbv2-near-create-job-jobdefinition"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create job JOBDEFINITION")),(0,r.kt)("p",null,"create a job on near"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create job [JOBDEFINITION] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>]\n\nARGUMENTS\n  JOBDEFINITION  filesystem path to job definition\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the job account\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --metadata=<value>            metadata of the job for easier identification\n  --name=<value>                name of the job for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a job on near\n\nALIASES\n  $ sbv2 near create job\n")),(0,r.kt)("h2",{id:"sbv2-near-create-oracle-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create oracle [QUEUEADDRESS]")),(0,r.kt)("p",null,"create a near oracle for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create oracle [QUEUEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --metadata=<value>            metadata of the oracle for easier identification\n  --name=<value>                name of the oracle for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a near oracle for a given queue\n\nALIASES\n  $ sbv2 near create oracle\n")),(0,r.kt)("h2",{id:"sbv2-near-create-oracle-permission-oracleaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create oracle permission [ORACLEADDRESS]")),(0,r.kt)("p",null,"create a permission account for a near oracle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create oracle permission [ORACLEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a permission account for a near oracle\n\nALIASES\n  $ sbv2 near create oracle permission\n")),(0,r.kt)("h2",{id:"sbv2-near-create-queue"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near create queue")),(0,r.kt)("p",null,"create a new oracle queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near create queue --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the queue\n  -h, --help                    Show CLI help.\n  -r, --reward=<value>          oracle rewards for successfully responding to an update request\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --enableBufferRelayers        enable oracles to fulfill buffer relayer requests\n  --metadata=<value>            metadata of the queue for easier identification\n  --minStake=<value>            minimum stake required by an oracle to join the queue\n  --name=<value>                name of the queue for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --oracleTimeout=<value>       [default: 180] number of oracles to add to the queue\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --queueSize=<value>           [default: 100] maximum number of oracles the queue can support\n  --slashingEnabled             permit slashing malicous oracles\n  --unpermissionedFeeds         permit unpermissioned feeds\n  --unpermissionedVrf           permit unpermissioned VRF accounts\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new oracle queue\n\nALIASES\n  $ sbv2 near create queue\n")),(0,r.kt)("h2",{id:"sbv2-near-escrow-create"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near escrow create")),(0,r.kt)("p",null,"create an escrow token account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near escrow create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --mint=<value>                [default: wrap.test] token mint to create escrow account for\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create an escrow token account\n\nALIASES\n  $ sbv2 near create escrow\n")),(0,r.kt)("h2",{id:"sbv2-near-fetch-aggregators"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near fetch aggregators")),(0,r.kt)("p",null,"fetch all aggregators for a given near account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near fetch aggregators --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountId=<value>           (required) optional, authority to fetch aggregators for\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  fetch all aggregators for a given near account\n\nALIASES\n  $ sbv2 near fetch aggregators\n")),(0,r.kt)("h2",{id:"sbv2-near-job-create-jobdefinition"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near job create JOBDEFINITION")),(0,r.kt)("p",null,"create a job on near"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near job create [JOBDEFINITION] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>]\n\nARGUMENTS\n  JOBDEFINITION  filesystem path to job definition\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the job account\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --metadata=<value>            metadata of the job for easier identification\n  --name=<value>                name of the job for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a job on near\n\nALIASES\n  $ sbv2 near create job\n")),(0,r.kt)("h2",{id:"sbv2-near-list-queue-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near list queue QUEUEADDRESS")),(0,r.kt)("p",null,"list aggregators for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near list queue [QUEUEADDRESS] [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet] [--programId\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  list aggregators for a given queue\n\nALIASES\n  $ sbv2 near list queue\n")),(0,r.kt)("h2",{id:"sbv2-near-oracle-create-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near oracle create [QUEUEADDRESS]")),(0,r.kt)("p",null,"create a near oracle for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near oracle create [QUEUEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--name <value>] [--metadata <value>]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --metadata=<value>            metadata of the oracle for easier identification\n  --name=<value>                name of the oracle for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a near oracle for a given queue\n\nALIASES\n  $ sbv2 near create oracle\n")),(0,r.kt)("h2",{id:"sbv2-near-oracle-permission-create-oracleaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near oracle permission create [ORACLEADDRESS]")),(0,r.kt)("p",null,"create a permission account for a near oracle"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near oracle permission create [ORACLEADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a permission account for a near oracle\n\nALIASES\n  $ sbv2 near create oracle permission\n")),(0,r.kt)("h2",{id:"sbv2-near-permission-create"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near permission create")),(0,r.kt)("p",null,"create a permission account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near permission create --accountName <value> --granter <value> --grantee <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a\n    <value>] [--enable]\n\nFLAGS\n  -a, --authority=<value>       alternate account that is the granters authority\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --enable                      enable permissions\n  --grantee=<value>             (required) account that will be granted permissions, typically an Oracle or Aggregator\n  --granter=<value>             (required) account that will grant permissions, typically the OracleQueue\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a permission account\n\nALIASES\n  $ sbv2 near create oracle permission\n")),(0,r.kt)("h2",{id:"sbv2-near-pop-crank-crankaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near pop crank [CRANKADDRESS]")),(0,r.kt)("p",null,"pop the crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near pop crank [CRANKADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  pop the crank\n\nALIASES\n  $ sbv2 near pop crank\n")),(0,r.kt)("h2",{id:"sbv2-near-print-accounttype-address"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near print ACCOUNTTYPE ADDRESS")),(0,r.kt)("p",null,"print a near switchboard account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near print [ACCOUNTTYPE] [ADDRESS] [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--all]\n\nARGUMENTS\n  ACCOUNTTYPE  (queue|aggregator|crank|oracle|permission|lease|job) account type to print\n  ADDRESS      address of the account to print in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --all                         print all account attributes including jobs, permissions, and leases\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  print a near switchboard account\n\nALIASES\n  $ sbv2 near print\n")),(0,r.kt)("h2",{id:"sbv2-near-push-crank-crankaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near push crank [CRANKADDRESS]")),(0,r.kt)("p",null,"push an aggregator onto the crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near push crank [CRANKADDRESS] --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --aggregatorAddress=<value>  (required) address of the aggregator in Uint8 or Base58 encoding\n  -h, --help                       Show CLI help.\n  -s, --silent                     suppress cli prompts\n  -u, --rpcUrl=<value>             alternate RPC url\n  -v, --verbose                    log everything\n  --accountName=<value>            (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>     [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                   Defaults to ~/.near-credentials\n  --networkId=<option>             [default: testnet] Near network ID to connect to\n                                   <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>              [default: switchboard-v2.testnet] Switchboard programId on the selected Near\n                                   networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  push an aggregator onto the crank\n\nALIASES\n  $ sbv2 near push crank\n")),(0,r.kt)("h2",{id:"sbv2-near-queue-aggregators-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near queue aggregators QUEUEADDRESS")),(0,r.kt)("p",null,"fetch all aggregators for a given queue account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near queue aggregators [QUEUEADDRESS] [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet] [--programId\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  fetch all aggregators for a given queue account\n\nALIASES\n  $ sbv2 near queue feeds\n")),(0,r.kt)("h2",{id:"sbv2-near-queue-create"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near queue create")),(0,r.kt)("p",null,"create a new oracle queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near queue create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet]\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the queue\n  -h, --help                    Show CLI help.\n  -r, --reward=<value>          oracle rewards for successfully responding to an update request\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --enableBufferRelayers        enable oracles to fulfill buffer relayer requests\n  --metadata=<value>            metadata of the queue for easier identification\n  --minStake=<value>            minimum stake required by an oracle to join the queue\n  --name=<value>                name of the queue for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --oracleTimeout=<value>       [default: 180] number of oracles to add to the queue\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --queueSize=<value>           [default: 100] maximum number of oracles the queue can support\n  --slashingEnabled             permit slashing malicous oracles\n  --unpermissionedFeeds         permit unpermissioned feeds\n  --unpermissionedVrf           permit unpermissioned VRF accounts\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  create a new oracle queue\n\nALIASES\n  $ sbv2 near create queue\n")),(0,r.kt)("h2",{id:"sbv2-near-queue-feeds-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near queue feeds QUEUEADDRESS")),(0,r.kt)("p",null,"fetch all aggregators for a given queue account"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near queue feeds [QUEUEADDRESS] [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet] [--programId\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  fetch all aggregators for a given queue account\n\nALIASES\n  $ sbv2 near queue feeds\n")),(0,r.kt)("h2",{id:"sbv2-near-queue-list-queueaddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near queue list QUEUEADDRESS")),(0,r.kt)("p",null,"list aggregators for a given queue"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near queue list [QUEUEADDRESS] [-h] [-v] [-s] [--networkId testnet|mainnet|betanet|localnet] [--programId\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  list aggregators for a given queue\n\nALIASES\n  $ sbv2 near list queue\n")),(0,r.kt)("h2",{id:"sbv2-near-set-aggregator-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near set aggregator AGGREGATORADDRESS")),(0,r.kt)("p",null,"set a near aggregator's config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near set aggregator [AGGREGATORADDRESS] --accountName <value> --updateInterval <value> [-h] [-v] [-s]\n    [--networkId testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>]\n    [--json] [-a <value>] [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>]\n    [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>]\n    [--rewardEscrow <value>] [--historyLimit <value>] [--enable]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\n  -h, --help                    Show CLI help.\n  -j, --job=<value>...          filesystem path to job definition file\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --batchSize=<value>           number of oracles requested for each open round call\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\n  --enable                      if required and queue authority is provided, enable permissions\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\n                                responses from oracles.\n  --historyLimit=<value>        [default: 1000] number of samples to store in aggregator's history\n  --metadata=<value>            metadata of the crank for easier identification\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\n  --name=<value>                name of the crank for easier identification\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n  --rewardEscrow=<value>        where to send rewards. defaults to user's escrow account\n  --updateInterval=<value>      (required) set an aggregator's minimum update delay\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\n                                volatility\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  set a near aggregator's config\n\nALIASES\n  $ sbv2 near set aggregator\n")),(0,r.kt)("h2",{id:"sbv2-near-update-aggregator-aggregatoraddress"},(0,r.kt)("inlineCode",{parentName:"h2"},"sbv2 near update aggregator [AGGREGATORADDRESS]")),(0,r.kt)("p",null,"request a new value on-chain for an aggregator"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 near update aggregator [AGGREGATORADDRESS] --accountName <value> [-h] [-v] [-s] [--networkId\n    testnet|mainnet|betanet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\n\nARGUMENTS\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\n\nFLAGS\n  -h, --help                    Show CLI help.\n  -s, --silent                  suppress cli prompts\n  -u, --rpcUrl=<value>          alternate RPC url\n  -v, --verbose                 log everything\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\n                                Defaults to ~/.near-credentials\n  --networkId=<option>          [default: testnet] Near network ID to connect to\n                                <options: testnet|mainnet|betanet|localnet>\n  --programId=<value>           [default: switchboard-v2.testnet] Switchboard programId on the selected Near networkId\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nDESCRIPTION\n  request a new value on-chain for an aggregator\n\nALIASES\n  $ sbv2 near update aggregator\n")))}l.isMDXComponent=!0},96882:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>u,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>v});var t=n(83117),r=(n(67294),n(3905)),o=n(65488),l=n(85162),s=n(89500);const i={sidebar_position:8,title:"Sbv2 CLI"},u="Sbv2 near",d={unversionedId:"near/dev/cli",id:"near/dev/cli",title:"Sbv2 CLI",description:"Install",source:"@site/docs/near/dev/cli.mdx",sourceDirName:"near/dev",slug:"/near/dev/cli",permalink:"/near/dev/cli",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Sbv2 CLI"},sidebar:"near",previous:{title:"Developer Resources",permalink:"/near/dev/"},next:{title:"feed-parser",permalink:"/near/dev/examples/feed-parser"}},c={},v=[{value:"Install",id:"install",level:2},{value:"Config",id:"config",level:2},{value:"Commands",id:"commands",level:2}],p={toc:v};function g(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sbv2-near"},"Sbv2 near"),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @switchboard-xyz/cli^2\n"))),(0,r.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add -g @switchboard-xyz/cli^2\n")))),(0,r.kt)("h2",{id:"config"},"Config"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Testnet\nsbv2 config set near testnet rpc https://rpc.testnet.near.org\nsbv2 config set near testnet default-account my-named-account.testnet\n\n# Mainnet\nsbv2 config set near mainnet rpc https://rpc.mainnet.near.org\nsbv2 config set near mainnet default-account my-named-account.near\n")),(0,r.kt)("h2",{id:"commands"},"Commands"),(0,r.kt)(s.ZP,{mdxType:"NearCli"}))}g.isMDXComponent=!0}}]);