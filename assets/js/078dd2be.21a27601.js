"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5842],{54852:(t,e,n)=>{n.d(e,{Zo:()=>d,kt:()=>h});var r=n(49231);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=r.createContext({}),c=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=c(t.components);return r.createElement(s.Provider,{value:e},t.children)},p="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),p=c(n),m=a,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return n?r.createElement(h,i(i({ref:e},d),{},{components:n})):r.createElement(h,i({ref:e},d))}));function h(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[p]="string"==typeof t?t:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43800:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var r=n(95634),a=(n(49231),n(54852)),o=n(50853),i=n(40862);const l={title:"\u27a1\ufe0f Your First Contract",hide_title:!0,hide_table_of_contents:!0},s="Your First Contract",c={unversionedId:"evm/guides/first-contract",id:"evm/guides/first-contract",title:"\u27a1\ufe0f Your First Contract",description:"This guide will walk you through creating your first Switchboard x Solidity",source:"@site/docs/202-evm/80-guides/10-first-contract.mdx",sourceDirName:"202-evm/80-guides",slug:"/evm/guides/first-contract",permalink:"/evm/guides/first-contract",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{title:"\u27a1\ufe0f Your First Contract",hide_title:!0,hide_table_of_contents:!0},sidebar:"sidebar",previous:{title:"ISwitchboard.sol",permalink:"/evm/dev/switchboard-sol"},next:{title:"\ud83d\udcc8 Read a Data Feed",permalink:"/evm/guides/read-a-data-feed"}},d={},p=[{value:"Setup Workspace",id:"setup-workspace",level:2},{value:"Solidity Contract",id:"solidity-contract",level:2}],u={toc:p},m="wrapper";function h(t){let{components:e,...n}=t;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"your-first-contract"},"Your First Contract"),(0,a.kt)("p",null,"This guide will walk you through creating your first Switchboard x Solidity\ncontract and walk you through deploying it on a supported EVM chain."),(0,a.kt)("p",null,"For this guide we'll be using ",(0,a.kt)("a",{parentName:"p",href:"https://hardhat.org"},"Hardhat")," to debug and\ncompile our contract, spin up a localnet node, then run custom scripts to deploy\nour contract to different chains. You should have NodeJS and npm already\ninstalled - see ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/en/download/package-manager"},"nodejs.org")," for\ninstallation instructions."),(0,a.kt)("h2",{id:"setup-workspace"},"Setup Workspace"),(0,a.kt)("p",null,"We'll start by cloning\n",(0,a.kt)("a",{parentName:"p",href:"https://hardhat.org/tutorial/boilerplate-project"},"Hardhat's Boilerplate Project"),"\nto get us up and running."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/NomicFoundation/hardhat-boilerplate my-first-contract\ncd my-first-contract\nnpm install\n")),(0,a.kt)("p",null,"You should have the following folder structure:"),(0,a.kt)(o.ZP,{container:!0,spacing:2,justifyContent:"flex-start",alignItems:"flex-start",mdxType:"Grid"},(0,a.kt)(o.ZP,{item:!0,xs:12,md:4,mdxType:"Grid"},(0,a.kt)(i.Z,{mdxType:"Box"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 contracts\n\u2502   \u2514\u2500\u2500 Token.sol\n\u251c\u2500\u2500 frontend/\n\u251c\u2500\u2500 hardhat.config.js\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 scripts\n\u2502   \u2514\u2500\u2500 deploy.js\n\u251c\u2500\u2500 tasks\n\u2502   \u2514\u2500\u2500 faucet.js\n\u2514\u2500\u2500 test\n    \u2514\u2500\u2500 Token.js\n")))),(0,a.kt)(o.ZP,{item:!0,xs:12,md:8,mdxType:"Grid"},(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"contracts/Token.sol"))," - This is our Solidity contract"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"frontend"))," - This is a sample frontend dApp to interact with our contract.\nWe'll be ignoring it for this guide."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"hardhat.config.js"))," - This is the configuration file for Hardhat which is\nresponsible for compiling our Solidity contract into bytecode and also has\nsome helpful functionality to run custom tasks and interact with our contract."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"scripts/deploy.js"))," - This is a Hardhat script to deploy our contract to\nan EVM network."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"tasks/faucet.js"))," - This is a custom hardhat task we can run with\n",(0,a.kt)("inlineCode",{parentName:"li"},"npx hardhat faucet")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"test/Token.js"))," - This is a javascript test module to interact with our\ncontract and test its functionality from a client-side application.")))),(0,a.kt)("p",null,"Now let's add the Switchboard dependencies."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @switchboard-xyz/evm.js\n")),(0,a.kt)("p",null,"Now run ",(0,a.kt)("inlineCode",{parentName:"p"},"npx hardhat compile")," to compile the sample contract. You should see two\nnew directories ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"cache"),"."),(0,a.kt)("p",null,"So now we have our workspace setup with the Switchboard dependency added, so\nlets write a Solidity contract!"),(0,a.kt)("h2",{id:"solidity-contract"},"Solidity Contract"),(0,a.kt)("p",null,"We are going to write a Solidity contract which reads an existing Switchboard\ndata feed."),(0,a.kt)("p",null,"Then let's add the following line to our Solidity contract\n",(0,a.kt)("inlineCode",{parentName:"p"},"contracts/Token.sol"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'//SPDX-License-Identifier: UNLICENSED\n\n// Solidity files have to start with this pragma.\n// It will be used by the Solidity compiler to validate its version.\npragma solidity ^0.8.9;\n\n+ // Add the Switchboard data feed interface\n+ import {Switchboard} from "@switchboard-xyz/evm.js/contracts/core/testnet/Switchboard.sol";\n\n// We import this library to be able to use console.log\nimport "hardhat/console.sol";\n')))}h.isMDXComponent=!0}}]);