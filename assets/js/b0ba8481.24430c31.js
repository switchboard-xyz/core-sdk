"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8345],{54852:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(49231);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||o;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},24523:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(95634),a=(n(49231),n(54852));const o={sidebar_position:201,title:"Local NodeJS Oracle",hide_title:!0,hide_table_of_contents:!0},i="NodeJS Oracle",l={unversionedId:"guides/infra/nodejs-oracle",id:"guides/infra/nodejs-oracle",title:"Local NodeJS Oracle",description:"Switchboard provides an npm package @switchboard-xyz/oracle to help test your integrations.",source:"@site/docs/guides/infra/nodejs-oracle.mdx",sourceDirName:"guides/infra",slug:"/guides/infra/nodejs-oracle",permalink:"/guides/infra/nodejs-oracle",draft:!1,tags:[],version:"current",sidebarPosition:201,frontMatter:{sidebar_position:201,title:"Local NodeJS Oracle",hide_title:!0,hide_table_of_contents:!0},sidebar:"gettingStartedSidebar",previous:{title:"Google Cloud Oracle",permalink:"/guides/infra/gcp-oracle"},next:{title:"Switchboard x Solana",permalink:"/solana/"}},c={},s=[],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"nodejs-oracle"},"NodeJS Oracle"),(0,a.kt)("p",null,"Switchboard provides an npm package ",(0,a.kt)("a",{parentName:"p",href:"/api/oracle"},"@switchboard-xyz/oracle")," to help test your integrations."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This is only compatible with Switchboard Data Feeds. We currently do not have a way to emulate V3 Attestation oracles.")),(0,a.kt)("p",null,"In your tests, use ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeOracle.fromReleaseChannel")," to start an oracle for the provided environment."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { NodeOracle } from "@switchboard-xyz/oracle";\n\ndescribe("anchor-feed-parser test", () => {\n  let oracle: NodeOracle;\n\n  before(async () => {\n    oracle = await NodeOracle.fromReleaseChannel({\n      chain: "solana",\n      // use the latest testnet (devnet) version of the oracle\n      releaseChannel: "testnet",\n      // disables production capabilities like monitoring and alerts\n      network: "localnet",\n      rpcUrl: "http://localhost:8899",\n      oracleKey: "",\n      // path to the payer keypair so the oracle can pay for txns\n      secretPath: "~/.config/solana/id.json",\n      // set to true to suppress oracle logs in the console\n      silent: false,\n      // optional env variables to speed up the workflow\n      envVariables: {\n        VERBOSE: "1",\n        DEBUG: "1",\n        DISABLE_NONCE_QUEUE: "1",\n        DISABLE_METRICS: "1",\n      },\n    });\n\n    // start the oracle and wait for it to start heartbeating on-chain\n    await oracle.startAndAwait();\n  });\n\n  after(() => {\n    oracle?.stop();\n  });\n});\n')))}u.isMDXComponent=!0}}]);