"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2925],{10686:(t,e,a)=>{a.d(e,{Z:()=>h});var n=a(44267),i=a(15861),r=a(21519),o=a(78445),s=a(44073),l=a(67294),c=a(39960),p=a(13264),d=a(92949);const m=(0,p.Z)(s.Z)((t=>{let{theme:e,dark:a}=t;return{display:"flex",flexDirection:"row",justifyItems:"baseline",background:a?"rgba(42, 56, 68, 1)":"rgba(255, 255, 255, 0.6)",border:(a?.15:.1)+"rem solid var(--ifm-navbar-link-color)",borderRadius:"13.2px",boxShadow:"0 6px 7px 5px rgba(107 107 107, 0.03)",boxSizing:"border-box",width:"100%",height:"100%",verticalAlign:"middle",textDecoration:"none",[e.breakpoints.down(300)]:{paddingLeft:""},transition:"transform 0.15s ease-in-out","&&&:hover":{background:a?"rgba(42, 56, 68, 1)":"white",transform:"scale3d(1.05, 1.05, 1)"}}})),g=(0,p.Z)(o.Z)((t=>{let{theme:e}=t;return{display:"flex",maxHeight:"96px"}}));function h(t){let{title:e,image:a,imageDark:o,description:s,to:p,sx:h}=t;const{colorMode:y}=(0,d.I)();return l.createElement(c.Z,{href:p,style:{textDecoration:"none"}},l.createElement(m,{dark:"dark"===y?1:0,sx:h},l.createElement(n.Z,{sx:{height:"100%",width:"100%"}},l.createElement(g,{avatar:l.createElement("div",{style:{height:48,width:48,display:"flex",alignItems:"center",justifyContent:"center"}},"dark"===y&&o?o:a),title:e,titleTypographyProps:{fontSize:"1.25rem",color:"var(--ifm-navbar-link-color)",fontWeight:"var(--ifm-font-weight-bold)"}}),s?l.createElement(l.Fragment,null,l.createElement(r.Z,{sx:{marginBottom:"1rem"}}),l.createElement(i.Z,{variant:"body2",color:"textSecondary",component:"p",sx:{color:"var(--ifm-navbar-link-color)",fontSize:"1.1rem"}},s)):l.createElement(l.Fragment,null))))}},17547:(t,e,a)=>{a.d(e,{Z:()=>o});var n=a(86886),i=a(67294),r=a(10686);function o(t){let{items:e,cols:a,sx:o,direction:s,justifyContent:l,alignItems:c}=t;return i.createElement(n.ZP,{container:!0,spacing:3,direction:null!=s?s:"row",justifyContent:l,alignItems:c},e.map((t=>{var e;return i.createElement(n.ZP,{item:!0,style:{flexGrow:1},xs:12,md:6,lg:Math.floor(null!=(e=12/a)?e:2)},i.createElement(r.Z,{title:t.title,image:t.image,imageDark:t.imageDark,to:t.to,description:t.description,sx:o}))})))}},81182:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=a(83117),i=(a(67294),a(3905)),r=a(17547),o=a(44996);const s={sidebar_position:25,title:"Python"},l=void 0,c={unversionedId:"solana/dev/python",id:"solana/dev/python",title:"Python",description:"SwitchboardPy is the Python client for",source:"@site/docs/solana/dev/python.mdx",sourceDirName:"solana/dev",slug:"/solana/dev/python",permalink:"/solana/dev/python",draft:!1,tags:[],version:"current",sidebarPosition:25,frontMatter:{sidebar_position:25,title:"Python"},sidebar:"solana",previous:{title:"Javascript",permalink:"/solana/dev/javascript/"},next:{title:"vrf-flip",permalink:"/solana/dev/examples/vrf-flip"}},p={},d=[{value:"Quick Links",id:"quick-links",level:2},{value:"Installation",id:"installation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Anchorpy Client Gen",id:"anchorpy-client-gen",level:2}],m={toc:d};function g(t){let{components:e,...a}=t;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"SwitchboardPy is the Python client for\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/introduction"},"Switchboard"),". It provides wrappers\nto help you to interact with the Switchboard V2 program on-chain."),(0,i.kt)("p",null,"Internally it uses ",(0,i.kt)("a",{parentName:"p",href:"https://kevinheavey.github.io/anchorpy/"},"AnchorPy"),", an\nAnchor API implementation in Python."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi/switchboardpy"},(0,i.kt)("img",{parentName:"a",src:"https://badgen.net/pypi/v/switchboardpy",alt:"pypi"})),"\xa0","\xa0","\n",(0,i.kt)("a",{parentName:"p",href:"https://twitter.com/switchboardxyz"},(0,i.kt)("img",{parentName:"a",src:"https://badgen.net/twitter/follow/switchboardxyz",alt:"twitter"})),"\xa0","\xa0"),(0,i.kt)("h2",{id:"quick-links"},"Quick Links"),(0,i.kt)(r.Z,{cols:2,items:[{to:"https://github.com/switchboard-xyz/sbv2-solana/tree/main/python/switchboardpy",title:"Github",description:"View the Github repo",image:(0,i.kt)("img",{src:(0,o.Z)("/img/icons/github/light.svg")}),imageDark:(0,i.kt)("img",{src:(0,o.Z)("/img/icons/github/dark.svg")})},{to:"https://docs.switchboard.xyz/api/switchboardpy",title:"Typedocs",description:"View the Typedocs",image:(0,i.kt)("img",{src:(0,o.Z)("/img/icons/typedoc/logo.svg")}),imageDark:(0,i.kt)("img",{src:(0,o.Z)("/img/icons/typedoc/logo.svg")})}],mdxType:"RoundedCardGroup"}),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"pip install switchboardpy\n")),(0,i.kt)("h2",{id:"basic-usage"},"Basic Usage"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nfrom solana.keypair import Keypair\nfrom solana.publickey import PublicKey\nfrom solana.rpc.async_api import AsyncClient\nfrom anchorpy import Program, Provider, Wallet\n\nfrom switchboardpy import AggregatorAccount, AccountParams\n\n# Devnet Program ID.\nSBV2_DEVNET_PID = PublicKey(\n    \'2TfB33aLaneQb5TNVwyDz3jSZXS6jdW2ARw1Dgf84XCG\'\n)\n\nasync def main():\n    client = AsyncClient("https://api.devnet.solana.com/")\n    provider = Provider(client, Wallet(Keypair()))\n    program = await Program.at(\n        SBV2_DEVNET_PID, provider\n    )\n    agg = AggregatorAccount(AccountParams(program=program, public_key=PublicKey("88FX4tBstuwBPNhQU4EEBoPX35neSu4Le9zDSwtPRRQz")))\n\n    # getting aggregator data\n    data = await agg.load_data()\n\n    # getting most recent value (decimal.Decimal)\n    val = await agg.get_latest_value()\n\n    print(\'LATEST VALUE:\')\n    print(val)\n\n    await program.close()\n\nasyncio.run(main())\n\n"""\nOUTPUT\nLATEST VALUE:\n180.12115\n"""\n\n')),(0,i.kt)("h2",{id:"anchorpy-client-gen"},"Anchorpy Client Gen"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"anchorpy client-gen ./switchboard_v2.mainnet.parsed.json ./switchboardpy --program-id SW1TCH7qEPTdLsDHRgPuMQjbQxKdH2aBStViMFnt64f\n")))}g.isMDXComponent=!0}}]);