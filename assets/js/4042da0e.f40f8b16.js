"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3711],{54852:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(49231);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,d=u["".concat(c,".").concat(f)]||u[f]||m[f]||a;return n?r.createElement(d,l(l({ref:t},p),{},{components:n})):r.createElement(d,l({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},19512:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>l,default:()=>p,frontMatter:()=>a,toc:()=>i});var r=n(95634),o=(n(49231),n(54852));const a={},l=void 0,i=[{value:'<i className={`codicon codicon-symbol-method`} style={{ color: "var(--ifm-color-info)", fontSize: "1.5rem" }} /> OracleJob',id:"-oraclejob",level:2},{value:'<i className={`codicon codicon-symbol-method`} style={{ color: "var(--ifm-color-info)", fontSize: "1.5rem" }} /> Task',id:"-task",level:2}],c={toc:i},s="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Protobuf definitions to instruct an oracle how to fetch, parse, and transform\ndata to bring it on-chain."),(0,o.kt)("p",null,"Switchboard oracles read on-chain job accounts to determine how to fetch and\nrespond to update request. An OracleJob is a collection of tasks that are\nchained together to arrive at a single numerical value."),(0,o.kt)("p",null,"Switchboard tasks are executed sequentially with the output of the previous task\nprovided as the input to the next task in a chain. After the final task, the\nTaskRunner will attempt to convert the running result to a numeric value."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"NOTE"),": Some task do not consume the running input such as HttpTask,\nWebsocketTask, and most of the fetch tasks. If the TaskRunner sees one of these\ntask types in the middle of a job definition, it will effectively reset the\nrunning result."),(0,o.kt)("h2",{id:"-oraclejob"},(0,o.kt)("i",{className:"codicon codicon-symbol-method",style:{color:"var(--ifm-color-info)",fontSize:"1.5rem"}})," OracleJob"),(0,o.kt)("p",null,"Represents a list of tasks to be performed by a Switchboard oracle."),(0,o.kt)("p",null,"See the OracleJob typescript definition in\n",(0,o.kt)("a",{parentName:"p",href:"/api/common/class/OracleJob"},"@switchboard-xyz/common")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("i",{className:"codicon codicon-symbol-property",style:{color:"var(--ifm-color-success)",fontSize:"1.25rem"}}),"\xa0","tasks"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/api/protos/Task"},"Task[]")),(0,o.kt)("td",{parentName:"tr",align:null},"The chain of tasks to perform for this OracleJob.")))),(0,o.kt)("h2",{id:"-task"},(0,o.kt)("i",{className:"codicon codicon-symbol-method",style:{color:"var(--ifm-color-info)",fontSize:"1.5rem"}})," Task"),(0,o.kt)("p",null,"Represents a singular operation performed by an oracle to yield an eventual\nnumerical result."),(0,o.kt)("p",null,"See a table of task types with examples: ",(0,o.kt)("a",{parentName:"p",href:"/api/protos/Task"},"OracleJob.Task")),(0,o.kt)("p",null,"See the Task typescript definition in\n",(0,o.kt)("a",{parentName:"p",href:"/api/common/class/Task"},"@switchboard-xyz/common")))}p.isMDXComponent=!0}}]);