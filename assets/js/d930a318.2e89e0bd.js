"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[23614],{88491:(e,t,a)=>{a.d(t,{zY:()=>r,l1:()=>o,Au:()=>u});var l=a(49231),n=a(15733);const r=e=>{const{enumb:t}=e,a=()=>l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Number"),l.createElement("th",null,"Description"))),n=()=>l.createElement("tbody",null,t.values.map((e=>l.createElement("tr",{key:e.name},l.createElement("td",null,l.createElement("code",null,e.name)),l.createElement("td",null,l.createElement("code",null,e.number)),l.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return l.createElement(l.Fragment,null,l.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),l.createElement("table",null,l.createElement(a,null),l.createElement(n,null)))},s=e=>{const{fields:t}=e,a=()=>l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description"))),r=e=>{let{field:t}=e;const a=l.createElement("code",null,t.longType);return void 0===t.typeLink?a:l.createElement(n.Z,{to:t.typeLink},a)},s=()=>l.createElement("tbody",null,t.map((e=>l.createElement("tr",{key:e.name},l.createElement("td",null,l.createElement("code",null,e.name)),l.createElement("td",null,l.createElement(r,{field:e})),l.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return l.createElement("table",null,l.createElement(a,null),l.createElement(s,null))},u=e=>{const{message:t}=e;return l.createElement(l.Fragment,null,l.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),l.createElement(s,{fields:t.fields}))};var c=a(59415),i=a(17558);const o=e=>{(0,c.Z)();return l.createElement(l.Fragment,null,l.createElement("h3",null,e.title),l.createElement("p",null,e.description),l.createElement("p",null,l.createElement("strong",null,"Input: "),e.input||"N/A",e.inputSample?l.createElement(l.Fragment,null,l.createElement("br",null),e.inputSample):l.createElement(l.Fragment,null)),l.createElement(i.Z,{metastring:"",title:e.subtitle,language:"json"},JSON.stringify({name:e.title,tasks:e.tasks},void 0,2)),l.createElement("p",null,l.createElement("strong",null,"Output: "),e.output||"N/A",e.outputSample?l.createElement(l.Fragment,null,l.createElement("br",null),e.outputSample):l.createElement(l.Fragment,null)))}},9127:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>o});var l=a(48041),n=(a(49231),a(54852)),r=a(88491);const s={title:"SubtractTask",hide_title:!0},u=void 0,c={unversionedId:"tasks/SubtractTask",id:"tasks/SubtractTask",title:"SubtractTask",description:"SubtractTask",source:"@site/docs/tasks/SubtractTask.mdx",sourceDirName:"tasks",slug:"/tasks/SubtractTask",permalink:"/tasks/SubtractTask",draft:!1,tags:[],version:"current",frontMatter:{title:"SubtractTask",hide_title:!0},sidebar:"publisher",previous:{title:"SplTokenParseTask",permalink:"/tasks/SplTokenParseTask"},next:{title:"SushiswapExchangeRateTask",permalink:"/tasks/SushiswapExchangeRateTask"}},i={},o=[{value:"<code>SubtractTask</code>",id:"subtracttask",level:2},{value:"Messages",id:"messages",level:2},{value:"<code>SubtractTask</code>",id:"subtracttask-1",level:3}],m={toc:o},p="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,l.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"subtracttask"},(0,n.kt)("inlineCode",{parentName:"h2"},"SubtractTask")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"path")," SubtractTask")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"package")," SubtractTask")),(0,n.kt)("p",null,"This task will subtract a numerical input by a scalar value or by another\naggregate."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"messages"},"Messages"),(0,n.kt)("h3",{id:"subtracttask-1"},(0,n.kt)("inlineCode",{parentName:"h3"},"SubtractTask")),(0,n.kt)(r.Au,{key:0,message:{name:"SubtractTask",longName:"SubtractTask",fullName:".SubtractTask",description:"This task will subtract a numerical input by a scalar value or by another\naggregate.",hasExtensions:!1,hasFields:!0,hasOneofs:!0,extensions:[],fields:[{name:"scalar",description:"Specifies a scalar to subtract by.",label:"optional",type:"double",longType:"double",fullType:"double",ismap:!1,isoneof:!0,oneofdecl:"Subtraction",defaultValue:""},{name:"aggregator_pubkey",description:"Specifies an aggregator to subtract by.",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"Subtraction",defaultValue:""},{name:"job",description:"A job whose result is computed before subtracting our numerical input by that result.",label:"optional",type:"OracleJob",longType:"OracleJob",fullType:"OracleJob",ismap:!1,isoneof:!0,oneofdecl:"Subtraction",defaultValue:""},{name:"big",description:"A stringified big.js. `Accepts variable expansion syntax.`",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"Subtraction",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,n.kt)("hr",null))}d.isMDXComponent=!0}}]);