"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4538],{54852:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var r=a(49231);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(a),m=n,h=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},45983:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(63536),n=a(38984),o=a(40862),i=a(49231);const l=e=>{const{colorMode:t}=(0,r.I)(),a=(0,n.Z)("dark"===t&&e.darkImg?e.darkImg:e.img);let l="inherit";e.lightBg&&"dark"!==t&&(l=e.lightBg),e.darkBg&&"dark"===t&&(l=e.darkBg);let s={};return e.sx&&(s={backgroundColor:l,m:"auto",display:"flex",...s,...e.sx}),i.createElement(o.Z,{component:"img",sx:s,src:a})}},92389:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=a(95634),n=(a(49231),a(54852)),o=a(45983);const i={slug:"/data",title:"The Data Models",keywords:["Switchboard","web3","oracle","data feeds","vrf","randomness","solana","aptos","near"]},l="The Data Models",s={unversionedId:"learn/data-models",id:"learn/data-models",title:"The Data Models",description:"<MarkdownImage",source:"@site/docs/101-learn/10-data-models.mdx",sourceDirName:"101-learn",slug:"/data",permalink:"/data",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{slug:"/data",title:"The Data Models",keywords:["Switchboard","web3","oracle","data feeds","vrf","randomness","solana","aptos","near"]},sidebar:"sidebar",previous:{title:"Program Architecture",permalink:"/architecture"},next:{title:"What are TEEs?",permalink:"/tee"}},c={},d=[{value:"Push",id:"push",level:2},{value:"Pull (Not supported)",id:"pull-not-supported",level:2},{value:"Callback",id:"callback",level:2},{value:"Comparison",id:"comparison",level:2}],p={toc:d},u="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"the-data-models"},"The Data Models"),(0,n.kt)(o.Z,{img:"/img/data/datamodels.png",sx:{display:"flex"},mdxType:"MarkdownImage"}),(0,n.kt)("p",null,"The following sections depict the different ways of data propagation provided by\noracles and how developers can integrate Switchboard to have full control over\nhow data is sourced on-chain for their smart contracts."),(0,n.kt)("h2",{id:"push"},"Push"),(0,n.kt)("p",null,"Data is ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"pushed"))," on-chain by the oracle at a routine interval. The integrator\njust needs to verify the data was recently pushed and doesn't need to handle any\noff-chain requesting."),(0,n.kt)("p",null,"Switchboard Functions allow you to set up functions on a cron schedule, which\nessentially performs the same as a push based oracle. See ",(0,n.kt)("a",{parentName:"p",href:"/functions"},"Switchboard Functions"),"\nfor more information."),(0,n.kt)("h2",{id:"pull-not-supported"},"Pull (Not supported)"),(0,n.kt)("p",null,"Data is fetched and maintained in a data store (different from the origin chain)\nand ",(0,n.kt)("em",{parentName:"p"},(0,n.kt)("strong",{parentName:"em"},"pulled"))," on-chain by the integrator through a bridge."),(0,n.kt)("h2",{id:"callback"},"Callback"),(0,n.kt)("p",null,"Data is sourced off-chain each time it is requested and populated on-chain with\na callback into the callers smart contract. This method is more complex to\nintegrate but is less susceptible to oracle attacks because the data is only\nsourced when the user requests it."),(0,n.kt)("p",null,"Switchboard Functions allow you to set up functions on a callback model, which\nallows you to trigger based on events and pass in parameters. See ",(0,n.kt)("a",{parentName:"p",href:"/functions"},"Switchboard Functions"),"\nfor more information."),(0,n.kt)("h2",{id:"comparison"},"Comparison"),(0,n.kt)("p",null,"Each type of data propagation method poses their own advantages. The following\ntable compares the different criteria that should be looked at when\ndeciding which method is best for your specific solution."),(0,n.kt)(o.Z,{img:"/img/data/comparison_table.png",sx:{display:"flex"},mdxType:"MarkdownImage"}))}m.isMDXComponent=!0}}]);