"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7492],{5861:(t,e,a)=>{a.d(e,{Z:()=>h});var n=a(102),r=a(3117),l=a(7294),i=a(6010),o=a(9707),s=a(4780),u=a(948),p=a(3616),d=a(8216),m=a(4867);function k(t){return(0,m.Z)("MuiTypography",t)}(0,a(1588).Z)("MuiTypography",["root","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","button","caption","overline","alignLeft","alignRight","alignCenter","alignJustify","noWrap","gutterBottom","paragraph"]);var c=a(5893);const N=["align","className","component","gutterBottom","noWrap","paragraph","variant","variantMapping"],g=(0,u.ZP)("span",{name:"MuiTypography",slot:"Root",overridesResolver:(t,e)=>{const{ownerState:a}=t;return[e.root,a.variant&&e[a.variant],"inherit"!==a.align&&e[`align${(0,d.Z)(a.align)}`],a.noWrap&&e.noWrap,a.gutterBottom&&e.gutterBottom,a.paragraph&&e.paragraph]}})((({theme:t,ownerState:e})=>(0,r.Z)({margin:0},e.variant&&t.typography[e.variant],"inherit"!==e.align&&{textAlign:e.align},e.noWrap&&{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"},e.gutterBottom&&{marginBottom:"0.35em"},e.paragraph&&{marginBottom:16}))),f={h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",h6:"h6",subtitle1:"h6",subtitle2:"h6",body1:"p",body2:"p",inherit:"p"},b={primary:"primary.main",textPrimary:"text.primary",secondary:"secondary.main",textSecondary:"text.secondary",error:"error.main"},h=l.forwardRef((function(t,e){const a=(0,p.Z)({props:t,name:"MuiTypography"}),l=(t=>b[t]||t)(a.color),u=(0,o.Z)((0,r.Z)({},a,{color:l})),{align:m="inherit",className:h,component:v,gutterBottom:y=!1,noWrap:C=!1,paragraph:R=!1,variant:w="body1",variantMapping:V=f}=u,S=(0,n.Z)(u,N),A=(0,r.Z)({},u,{align:m,color:l,className:h,component:v,gutterBottom:y,noWrap:C,paragraph:R,variant:w,variantMapping:V}),x=v||(R?"p":V[w]||f[w])||"span",T=(t=>{const{align:e,gutterBottom:a,noWrap:n,paragraph:r,variant:l,classes:i}=t,o={root:["root",l,"inherit"!==t.align&&`align${(0,d.Z)(e)}`,a&&"gutterBottom",n&&"noWrap",r&&"paragraph"]};return(0,s.Z)(o,k,i)})(A);return(0,c.jsx)(g,(0,r.Z)({as:x,ref:e,ownerState:A,className:(0,i.Z)(T.root,h)},S))}))},4008:(t,e,a)=>{a.d(e,{Z:()=>o});var n=a(7357),r=a(2949),l=a(4996),i=a(7294);const o=t=>{const{colorMode:e}=(0,r.I)();let a="inherit";t.lightBg&&"dark"!==e&&(a=t.lightBg),t.darkBg&&"dark"===e&&(a=t.darkBg);let o={};return t.sx&&(o={backgroundColor:a,m:"auto",display:"flex",...o,...t.sx}),i.createElement(n.Z,{component:"img",sx:o,src:(0,l.Z)(t.img)})}},3471:(t,e,a)=>{a.d(e,{N:()=>i});var n=a(3219),r=a(3117),l=a(7294);function i(t){return l.createElement(n.Z,(0,r.Z)({},t,{viewBox:"0 0 251 283.9"}),l.createElement("linearGradient",{id:"SVGID_1_",gradientUnits:"userSpaceOnUse",x1:"125.5",y1:"52.0877",x2:"125.5",y2:"253.0878",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,233.9c-43.1,0-78.1-35-78.1-78.1c0-41.9,70.7-115.9,73.7-119l3.7-3.9l3.8,3.8c3.1,3.1,75,77.1,75,119 C203.6,198.9,168.6,233.9,125.5,233.9L125.5,233.9z M124.9,48c-6.2,6.7-19.2,21.2-32.1,38.2c-22.9,30.2-35,54.2-35,69.5 c0,37.3,30.4,67.7,67.7,67.7s67.7-30.4,67.7-67.7c0-15.3-12.3-39.3-35.6-69.5C144.5,69.3,131.2,54.7,124.9,48z"}),l.createElement("linearGradient",{id:"SVGID_2_",gradientUnits:"userSpaceOnUse",x1:"125.6",y1:"27.0877",x2:"125.6",y2:"269.3627",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,258.9c-56.9,0-103.1-46.3-103.1-103.1c0-55.6,77.6-133.2,80.9-136.4c2-2,5.4-2,7.4,0s2,5.4,0,7.4 c-0.8,0.8-77.8,77.8-77.8,129c0,51.1,41.6,92.7,92.7,92.7s92.7-41.6,92.7-92.7c0-21-13.6-50-39.4-84.1 c-19.8-26.1-39.7-45.9-39.9-46.1c-2.1-2-2.1-5.3,0-7.4c2-2.1,5.3-2.1,7.4,0c3.4,3.3,82.4,81.9,82.4,137.6 C228.6,212.6,182.4,258.9,125.5,258.9L125.5,258.9z"}),l.createElement("linearGradient",{id:"SVGID_3_",gradientUnits:"userSpaceOnUse",x1:"125.5",y1:"2.0877",x2:"125.5",y2:"285.9755",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,283.9C56.3,283.9,0,227.6,0,158.4c0-28.6,14.4-63.8,42.7-104.5C63.6,23.9,84.1,2.5,85,1.6 c2-2.1,5.3-2.1,7.4-0.1s2.1,5.3,0.1,7.4C92.3,9.1,71.6,30.7,51.2,60c-26.7,38.3-40.8,72.3-40.8,98.4c0,63.4,51.6,115.1,115.1,115.1 s115.1-51.6,115.1-115.1c0-26.1-14.2-60.1-41.1-98.4C178.9,30.7,158,9.1,157.8,8.9c-2-2.1-2-5.4,0.1-7.4s5.4-2,7.4,0.1 c3.5,3.6,85.7,89,85.7,156.8C251,227.6,194.7,283.9,125.5,283.9z"}))}},7414:(t,e,a)=>{a(3117),a(7294),a(3905),a(7735),a(3471),a(5861)},3967:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(3117),r=(a(7294),a(3905));const l={},i=void 0,o={unversionedId:"solana/idl/accounts/VrfAccountData",id:"solana/idl/accounts/VrfAccountData",title:"VrfAccountData",description:"Size 0.203134560SOL",source:"@site/docs/solana/idl/accounts/VrfAccountData.md",sourceDirName:"solana/idl/accounts",slug:"/solana/idl/accounts/VrfAccountData",permalink:"/sbv2-core/solana/idl/accounts/VrfAccountData",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solana",previous:{title:"SbState",permalink:"/sbv2-core/solana/idl/accounts/SbState"},next:{title:"Overview",permalink:"/sbv2-core/solana/idl/instructions/"}},s={},u=[],p={toc:u};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("b",null,"Size: "),"29058 Bytes",(0,r.kt)("br",null),(0,r.kt)("b",null,"Rent Exemption: "),"0.203134560SOL",(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/VrfStatus"},"VrfStatus")),(0,r.kt)("td",{parentName:"tr",align:null},"The current status of the VRF account.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"counter"),(0,r.kt)("td",{parentName:"tr",align:null},"u128"),(0,r.kt)("td",{parentName:"tr",align:null},"Incremental counter for tracking VRF rounds.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authority"),(0,r.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,r.kt)("td",{parentName:"tr",align:null},"On-chain account delegated for making account changes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracleQueue"),(0,r.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,r.kt)("td",{parentName:"tr",align:null},"The ",(0,r.kt)("a",{parentName:"td",href:"/solana/idl/accounts/OracleQueueAccountData"},"OracleQueueAccountData")," that is assigned to fulfill VRF update request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"escrow"),(0,r.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,r.kt)("td",{parentName:"tr",align:null},"The token account used to hold funds for VRF update request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"callback"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/CallbackZC"},"CallbackZC")),(0,r.kt)("td",{parentName:"tr",align:null},"The callback that is invoked when an update request is successfully verified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"batchSize"),(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of oracles assigned to a VRF update request.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"builders"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/VrfBuilder"},"VrfBuilder"),"[8]"),(0,r.kt)("td",{parentName:"tr",align:null},"Struct containing the intermediate state between VRF crank actions.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"buildersLen"),(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of builders.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"testMode"),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"currentRound"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/VrfRound"},"VrfRound")),(0,r.kt)("td",{parentName:"tr",align:null},"Oracle results from the current round of update request that has not been accepted as valid yet")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ebuf"),(0,r.kt)("td",{parentName:"tr",align:null},"u8","[1024]"),(0,r.kt)("td",{parentName:"tr",align:null},"Reserved.")))))}d.isMDXComponent=!0},6635:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(3117),r=(a(7294),a(3905));const l={},i=void 0,o={unversionedId:"solana/idl/instructions/vrfInit",id:"solana/idl/instructions/vrfInit",title:"vrfInit",description:"Accounts",source:"@site/docs/solana/idl/instructions/vrfInit.md",sourceDirName:"solana/idl/instructions",slug:"/solana/idl/instructions/vrfInit",permalink:"/sbv2-core/solana/idl/instructions/vrfInit",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solana",previous:{title:"vaultTransfer",permalink:"/sbv2-core/solana/idl/instructions/vaultTransfer"},next:{title:"vrfProveAndVerify",permalink:"/sbv2-core/solana/idl/instructions/vrfProveAndVerify"}},s={},u=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],p={toc:u};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"accounts"},"Accounts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"isMut"),(0,r.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vrf"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authority"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracleQueue"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"escrow"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"programState"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tokenProgram"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"args"},"Args"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"callback"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/Callback"},"Callback")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"stateBump"),(0,r.kt)("td",{parentName:"tr",align:null},"u8"),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0},5535:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(3117),r=(a(7294),a(3905));const l={},i=void 0,o={unversionedId:"solana/idl/instructions/vrfProveAndVerify",id:"solana/idl/instructions/vrfProveAndVerify",title:"vrfProveAndVerify",description:"Accounts",source:"@site/docs/solana/idl/instructions/vrfProveAndVerify.md",sourceDirName:"solana/idl/instructions",slug:"/solana/idl/instructions/vrfProveAndVerify",permalink:"/sbv2-core/solana/idl/instructions/vrfProveAndVerify",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solana",previous:{title:"vrfInit",permalink:"/sbv2-core/solana/idl/instructions/vrfInit"},next:{title:"vrfRequestRandomness",permalink:"/sbv2-core/solana/idl/instructions/vrfRequestRandomness"}},s={},u=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],p={toc:u};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"accounts"},"Accounts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"isMut"),(0,r.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vrf"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"callbackPid"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tokenProgram"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"escrow"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"programState"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracle"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracleAuthority"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracleWallet"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"instructionsSysvar"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"args"},"Args"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"nonce"),(0,r.kt)("td",{parentName:"tr",align:null},"Option","<","u32",">"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"stateBump"),(0,r.kt)("td",{parentName:"tr",align:null},"u8"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"idx"),(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"proof"),(0,r.kt)("td",{parentName:"tr",align:null},"bytes"),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0},2358:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(3117),r=(a(7294),a(3905));const l={},i=void 0,o={unversionedId:"solana/idl/instructions/vrfRequestRandomness",id:"solana/idl/instructions/vrfRequestRandomness",title:"vrfRequestRandomness",description:"Accounts",source:"@site/docs/solana/idl/instructions/vrfRequestRandomness.md",sourceDirName:"solana/idl/instructions",slug:"/solana/idl/instructions/vrfRequestRandomness",permalink:"/sbv2-core/solana/idl/instructions/vrfRequestRandomness",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solana",previous:{title:"vrfProveAndVerify",permalink:"/sbv2-core/solana/idl/instructions/vrfProveAndVerify"},next:{title:"Overview",permalink:"/sbv2-core/solana/idl/events/"}},s={},u=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],p={toc:u};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"accounts"},"Accounts"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"isMut"),(0,r.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"authority"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vrf"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"oracleQueue"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"queueAuthority"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"dataBuffer"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permission"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"escrow"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payerWallet"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"payerAuthority"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"recentBlockhashes"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"programState"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"tokenProgram"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h2",{id:"args"},"Args"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"permissionBump"),(0,r.kt)("td",{parentName:"tr",align:null},"u8"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"stateBump"),(0,r.kt)("td",{parentName:"tr",align:null},"u8"),(0,r.kt)("td",{parentName:"tr",align:null})))))}d.isMDXComponent=!0},400:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=a(3117),r=(a(7294),a(3905));const l={},i=void 0,o={unversionedId:"solana/idl/types/CallbackZC",id:"solana/idl/types/CallbackZC",title:"CallbackZC",description:"| Field       | Type                                                 | Description                                           |",source:"@site/docs/solana/idl/types/CallbackZC.md",sourceDirName:"solana/idl/types",slug:"/solana/idl/types/CallbackZC",permalink:"/sbv2-core/solana/idl/types/CallbackZC",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"solana",previous:{title:"Callback",permalink:"/sbv2-core/solana/idl/types/Callback"},next:{title:"CompletedPointZC",permalink:"/sbv2-core/solana/idl/types/CompletedPointZC"}},s={},u=[],p={toc:u};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"programId"),(0,r.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,r.kt)("td",{parentName:"tr",align:null},"The program ID of the callback program being invoked.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"accounts"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/solana/idl/types/AccountMetaZC"},"AccountMetaZC"),"[32]"),(0,r.kt)("td",{parentName:"tr",align:null},"The accounts being used in the callback instruction.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"accountsLen"),(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of accounts in the accounts array.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ixData"),(0,r.kt)("td",{parentName:"tr",align:null},"u8","[1024]"),(0,r.kt)("td",{parentName:"tr",align:null},"The serialized instruction data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ixDataLen"),(0,r.kt)("td",{parentName:"tr",align:null},"u32"),(0,r.kt)("td",{parentName:"tr",align:null},"The length of the instruction buffer.")))))}d.isMDXComponent=!0},7510:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(3117),r=(a(7294),a(3905)),l=(a(4008),a(7414),a(9960),a(3967),a(6635),a(5535),a(2358),a(400));const i={sidebar_position:10,title:"Integration",description:"Learn how to use Switchboard's Verifiable Random Functions",keywords:["Switchboard","Solana","VRF","randomness","verifiable","proof"]},o=void 0,s={unversionedId:"solana/randomness/integration",id:"solana/randomness/integration",title:"Integration",description:"Learn how to use Switchboard's Verifiable Random Functions",source:"@site/docs/solana/randomness/integration.mdx",sourceDirName:"solana/randomness",slug:"/solana/randomness/integration",permalink:"/sbv2-core/solana/randomness/integration",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,title:"Integration",description:"Learn how to use Switchboard's Verifiable Random Functions",keywords:["Switchboard","Solana","VRF","randomness","verifiable","proof"]},sidebar:"solana",previous:{title:"Overview",permalink:"/sbv2-core/solana/randomness/"},next:{title:"Overview",permalink:"/sbv2-core/solana/buffer-relayers/"}},u={},p=[{value:"Callback",id:"callback",level:3},{value:"Pseudorandom Result",id:"pseudorandom-result",level:2},{value:"Update Cost",id:"update-cost",level:2},{value:"Update Lifecycle",id:"update-lifecycle",level:2},{value:"Update Request",id:"update-request",level:3},{value:"Oracle Execution",id:"oracle-execution",level:2}],d={toc:p};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Switchboard's VRF implementation allows the creator to specify a program\ncallback that will be called each time a new proof is verified on-chain."),(0,r.kt)("h3",{id:"callback"},"Callback"),(0,r.kt)("p",null,"When creating a VRF Account, the VRF ",(0,r.kt)("inlineCode",{parentName:"p"},"vrf.authority")," ",(0,r.kt)("em",{parentName:"p"},"should")," specify a\n",(0,r.kt)("inlineCode",{parentName:"p"},"vrf.callback")," function that will be called by the oracle when a new randomness\nvalue is produced."),(0,r.kt)(l.default,{mdxType:"CallbackZC"}),(0,r.kt)("h2",{id:"pseudorandom-result"},"Pseudorandom Result"),(0,r.kt)("p",null,"The VRF function produces a ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"u8","[32]"))," buffer, ",(0,r.kt)("inlineCode",{parentName:"p"},"vrf.result"),", that can be\ntransmuted to most data types using the\n",(0,r.kt)("a",{parentName:"p",href:"https://crates.io/crates/bytemuck"},"bytemuck crate"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},'let result_buffer: [u8; 32];\n// get result buffer from parsed VRF Account\nmsg!("Result buffer is {:?}", result_buffer);\nlet value: &[u128] = bytemuck::cast_slice(&result_buffer[..]);\nmsg!("u128 buffer {:?}", value);\nlet result = value[0] % max_result as u128;\nmsg!("Current VRF Value [0 - {}) = {}!", max_result, result);\n')),(0,r.kt)("h2",{id:"update-cost"},"Update Cost"),(0,r.kt)("p",null,"A VRF Account is required to have ",(0,r.kt)("inlineCode",{parentName:"p"},"0.002 wrapped SOL")," in their ",(0,r.kt)("inlineCode",{parentName:"p"},"vrf.escrow"),"\nbefore requesting randomness. If the ",(0,r.kt)("inlineCode",{parentName:"p"},"vrf.escrow")," has insufficient funds, the\ndifference will be deducted from the requesters token wallet. The oracle\nfulfilling the crank will receive ",(0,r.kt)("inlineCode",{parentName:"p"},"0.002 / 277 wrapped SOL")," upon submitting the\nproof, with the remaining amount being dispersed to the account who turned the\nVRF crank, which is typically the oracle."),(0,r.kt)("h2",{id:"update-lifecycle"},"Update Lifecycle"),(0,r.kt)("h3",{id:"update-request"},"Update Request"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.authority")," calls\n",(0,r.kt)("a",{parentName:"li",href:"/solana/idl/instructions/vrfRequestRandomness"},"vrfRequestRandomness")),(0,r.kt)("li",{parentName:"ul"},"sbv2 program checks if the request is valid by:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The previous ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," is equal to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusNone")),",\n",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusCallbackSuccess")),", or ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerifyFailure"))),(0,r.kt)("li",{parentName:"ul"},"The previous ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," is equal to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusRequesting")),",\n",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerifying")),", or ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerified"))," and one minute has elapsed\nsince the previous VRF request"))),(0,r.kt)("li",{parentName:"ul"},"sbv2 program sets the current ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusRequesting"))),(0,r.kt)("li",{parentName:"ul"},"sbv2 program checks the requester provided the required oracle reward and\ntransfers it to ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.escrow")),(0,r.kt)("li",{parentName:"ul"},"sbv2 program increments ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.counter")),(0,r.kt)("li",{parentName:"ul"},"sbv2 program emits\n",(0,r.kt)("a",{parentName:"li",href:"/solana/idl/events/VrfRequestRandomnessEvent"},"VrfRequestRandomnessEvent"))),(0,r.kt)("h2",{id:"oracle-execution"},"Oracle Execution"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Oracle watches the chain for a\n",(0,r.kt)("a",{parentName:"li",href:"/solana/idl/events/VrfRequestRandomnessEvent"},"VrfRequestRandomnessEvent")," with\nthe oracle's public key assigned to the update request"),(0,r.kt)("li",{parentName:"ul"},"Oracle calculates the VRF proof and submits a\n",(0,r.kt)("a",{parentName:"li",href:"/solana/idl/instructions/vrfProveAndVerify"},"vrfProveAndVerify")," instruction\non-chain",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Oracle receives 1 / 277 of the reward"))),(0,r.kt)("li",{parentName:"ul"},"sbv2 program sets the current ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerifying"))),(0,r.kt)("li",{parentName:"ul"},"Oracle submits 276 \xd7\n",(0,r.kt)("a",{parentName:"li",href:"/solana/idl/instructions/vrfProveAndVerify"},"vrfProveAndVerify")," instructions\non-chain",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Invoker receives 1 / 277 of the reward per each successful instruction"))),(0,r.kt)("li",{parentName:"ul"},"If proof verification fails,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"sbv2 program sets ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerifyFailure"))))),(0,r.kt)("li",{parentName:"ul"},"If proof verification succeeds,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"sbv2 program sets ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusVerified"))),(0,r.kt)("li",{parentName:"ul"},"Oracle invokes ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.callback")),(0,r.kt)("li",{parentName:"ul"},"If ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.callback")," is successfully invoked,",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"sbv2 program sets ",(0,r.kt)("inlineCode",{parentName:"li"},"vrf.status")," to ",(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("em",{parentName:"strong"},"StatusCallbackSuccess")))))))))}m.isMDXComponent=!0}}]);