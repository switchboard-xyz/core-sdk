"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5005],{54852:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var r=t(49231);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(t),g=a,f=d["".concat(c,".").concat(g)]||d[g]||u[g]||o;return t?r.createElement(f,i(i({ref:n},p),{},{components:t})):r.createElement(f,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=g;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[d]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},53140:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>i,default:()=>p,frontMatter:()=>o,toc:()=>s});var r=t(95634),a=(t(49231),t(54852));const o={},i=void 0,s=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Reading Feeds",id:"reading-feeds",level:3},{value:"Creating Feeds",id:"creating-feeds",level:3}],c={toc:s},l="wrapper";function p(e){let{components:n,...t}=e;return(0,a.kt)(l,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("div",{align:"center"},(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://github.com/switchboard-xyz/sbv2-core/raw/main/website/static/img/icons/switchboard/avatar.png",alt:"Switchboard Logo"})),(0,a.kt)("h1",{id:"switchboard-xyzsuijs"},"@switchboard-xyz/sui.js"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"A Typescript client to interact with Switchboard V2 on Sui.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@switchboard-xyz/sui.js"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/github/package-json/v/switchboard-xyz/sbv2-sui?color=red&filename=javascript%2Fsui.js%2Fpackage.json&label=%40switchboard-xyz%2Fsui.js&logo=npm",alt:"NPM Badge"})))),(0,a.kt)("h2",{id:"install"},"Install"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @switchboard-xyz/sui.js\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Directory")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#reading-feeds"},"Reading Feeds")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#creating-feeds"},"Creating Feeds"))),(0,a.kt)("h3",{id:"reading-feeds"},"Reading Feeds"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { AggregatorAccount } from "@switchboard-xyz/sui.js";\n\nconst aggregatorAccount: AggregatorAccount = new AggregatorAccount(\n  client,\n  aggregator_address,\n  SWITCHBOARD_ADDRESS\n);\n\nconsole.log(await aggregatorAccount.loadData());\n')),(0,a.kt)("h3",{id:"creating-feeds"},"Creating Feeds"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'import { Buffer } from "buffer";\nimport { OracleJob, createFeed } from "@switchboard-xyz/sui.js";\nimport Big from "big.js";\nimport {\nEd25519Keypair,\nJsonRpcProvider,\ndevnetConnection,\n} from "@mysten/sui.js";\n\n// devnet address\nconst SWITCHBOARD_ADDRESS = "0x23ecb0df7bed0b4048f939298c9a179973e13d4e";\nconst QUEUE_ADDRESS = "0xacbb5327b76a6980495f4f3b7482c7f6cc5a4791";\n\n// keypair\nconst keypair = Ed25519Keypair.fromSecretKey(Buffer.from(/** YOUR KEYPAIR IMPORT GOES HERE **/, "hex"));\n\n// Make Job data for btc price\nconst serializedJob = Buffer.from(\nOracleJob.encodeDelimited(\n  OracleJob.create({\n    tasks: [\n      {\n        httpTask: {\n          url: "https://www.binance.us/api/v3/ticker/price?symbol=BTCUSD",\n        },\n      },\n      {\n        jsonParseTask: {\n          path: "$.price",\n        },\n      },\n    ],\n  })\n).finish()\n);\n\nconst coins = await provider.selectCoinsWithBalanceGreaterThanOrEqual(\nuserAddress,\nBigInt(10000000)\n);\n\nconst coin: any = coins.pop();\n\nconst [aggregator, createFeedTx] = await createFeed(\nprovider,\nkeypair, // you will need to import a Sui Payer Keypair\n{\n  name: "BTC/USD",\n  authority: userAddress,\n  queueAddress: queue.address,\n  batchSize: 1,\n  minJobResults: 1,\n  minOracleResults: 1,\n  minUpdateDelaySeconds: 5,\n  varianceThreshold: new Big(0),\n  forceReportPeriod: 0,\n  coinType: "0x2::sui::SUI",\n  initialLoadAmount: 1,\n  loadCoin: coin.details.reference.objectId,\n  jobs: [\n    {\n      name: "BTC/USD",\n      data: Array.from(serializedJob1),\n      weight: 1,\n    },\n  ],\n},\nSWITCHBOARD_ADDRESS\n);\n\nconsole.log(`Created Aggregator address ${aggregator.address}.`);\n')))}p.isMDXComponent=!0}}]);