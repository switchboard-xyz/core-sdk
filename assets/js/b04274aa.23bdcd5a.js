"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8455],{61131:e=>{e.exports=JSON.parse('[{"name":"OracleJob","longName":"OracleJob","fullName":".OracleJob","description":"Represnts a list of tasks to be performed by a switchboard oracle.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"tasks","description":"The chain of tasks to perform for this OracleJob.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"oracle-job","permalink":"protos/OracleJob"},{"name":"Task","longName":"OracleJob.Task","fullName":".OracleJob.Task","description":"Represents a singular operation performed by an oracle to yield an eventual numerical result.","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"httpTask","description":"The adapter will report the text body of a successful HTTP request to the \\nspecified url, or return an error if the response status code is greater \\nthan or equal to 400.\\n\\n_**Input**_: None\\n\\n_**Returns**_: String representation of the http response.\\n\\n_**Example**_: Basic HttpTask\\n\\n```json\\n{\\"httpTask\\": {\\"url\\": \\"https://mywebsite.org/path\\"} }\\n```\\n\\n_**Example**_: HttpTask example with headers\\n\\n```json\\n{ \\"httpTask\\": { \\"url\\": \\"https://mywebsite.org/path\\", \\"method\\": \\"METHOD_POST\\", \\"headers\\": [ { \\"key\\": \\"MY_HEADER_KEY\\", \\"value\\": \\"MY_HEADER_VALUE\\" } ], \\"body\\": \\"{\\\\\\"MY_BODY_KEY\\\\\\":\\\\\\"MY_BODY_VALUE\\\\\\"}\\" } }\\n```","label":"optional","type":"[HttpTask](/api/protos/HttpTask)","longType":"OracleJob.HttpTask","fullType":"OracleJob.HttpTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"jsonParseTask","description":"The adapter walks the path specified and returns the value found at that result. If returning\\nJSON data from the HttpGet or HttpPost adapters, you must use this adapter to parse the response.\\n\\n_**Input**_: String representation of a JSON object.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Parses the price field from a JSON object\\n\\n```json\\n{\\"jsonParse\\": {\\"path\\": \\"$.price\\"} }\\n```","label":"optional","type":"[JsonParseTask](/api/protos/JsonParseTask)","longType":"OracleJob.JsonParseTask","fullType":"OracleJob.JsonParseTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"medianTask","description":"Returns the median (middle) of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the median numerical result of 3 tasks.\\n\\n```json\\n{\\"medianTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the median numerical result of 3 jobs.\\n\\n```json\\n{\\"medianTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","label":"optional","type":"[MedianTask](/api/protos/MedianTask)","longType":"OracleJob.MedianTask","fullType":"OracleJob.MedianTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"meanTask","description":"Returns the mean (average) of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the mean numerical result of 3 tasks.\\n\\n```json\\n{\\"meanTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the mean numerical result of 3 jobs.\\n\\n```json\\n{\\"meanTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","label":"optional","type":"[MeanTask](/api/protos/MeanTask)","longType":"OracleJob.MeanTask","fullType":"OracleJob.MeanTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"websocketTask","description":"Opens and maintains a websocket for light speed data retrieval.\\n\\n_**Input**_: None\\n\\n_**Returns**_: String representation of the websocket subscription message.\\n\\n_**Example**_: Opens a coinbase websocket\\n\\n```json\\n{ \\"websocketTask\\": { \\"url\\": \\"wss://ws-feed.pro.coinbase.com\\", \\"subscription\\": \\"{\\\\\\"type\\\\\\":\\\\\\"subscribe\\\\\\",\\\\\\"product_ids\\\\\\":[\\\\\\"BTC-USD\\\\\\"],\\\\\\"channels\\\\\\":[\\\\\\"ticker\\\\\\",{\\\\\\"name\\\\\\":\\\\\\"ticker\\\\\\",\\\\\\"product_ids\\\\\\":[\\\\\\"BTC-USD\\\\\\"]}]}\\", \\"maxDataAgeSeconds\\": 15, \\"filter\\": \\"$[?(@.type == \'ticker\' && @.product_id == \'BTC-USD\')]\\" } }\\n```","label":"optional","type":"[WebsocketTask](/api/protos/WebsocketTask)","longType":"OracleJob.WebsocketTask","fullType":"OracleJob.WebsocketTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"divideTask","description":"This task will divide a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by dividing by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by dividing by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by dividing by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","label":"optional","type":"[DivideTask](/api/protos/DivideTask)","longType":"OracleJob.DivideTask","fullType":"OracleJob.DivideTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"multiplyTask","description":"This task will multiply a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by multiplying by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","label":"optional","type":"[MultiplyTask](/api/protos/MultiplyTask)","longType":"OracleJob.MultiplyTask","fullType":"OracleJob.MultiplyTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"lpTokenPriceTask","description":"Fetch LP token price info from a number of supported exchanges. \\n\\nSee our blog post on [Fair LP Token Oracles](/blog/2022/01/20/Fair-LP-Token-Oracles)\\n\\n*NOTE**: This is not the swap price but the price of the underlying LP token.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The price of an LP token for a given AMM pool. \\n\\n_**Example**_: Fetch the Orca LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\" } }\\n```\\n\\n_**Example**_: Fetch the fair price Orca LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\", \\"useFairPrice\\": true, \\"priceFeedAddresses\\": [ \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\", \\"BjUgj6YCnFBZ49wF54ddBVA9qu8TeqkFtkbqmZcee8uW\\" ] } }\\n```\\n\\n_**Example**_: Fetch the fair price Raydium LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"raydiumPoolAddress\\": \\"58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2\\", \\"useFairPrice\\": true,\\"priceFeedAddresses\\": [\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\",\\"BjUgj6YCnFBZ49wF54ddBVA9qu8TeqkFtkbqmZcee8uW\\" ] } }\\n```","label":"optional","type":"[LpTokenPriceTask](/api/protos/LpTokenPriceTask)","longType":"OracleJob.LpTokenPriceTask","fullType":"OracleJob.LpTokenPriceTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"lpExchangeRateTask","description":"Fetch the current swap price for a given liquidity pool\\n\\n_**Input**_: None\\n\\n_**Returns**_: The swap price for a given AMM pool.\\n\\n_**Example**_: Fetch the exchange rate from the Orca SOL/USDC pool\\n\\n```json\\n{ \\"lpExchangeRateTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\" } }\\n```\\n\\n_**Example**_: Fetch the exchange rate from the Raydium SOL/USDC pool\\n\\n```json\\n{ \\"lpExchangeRateTask\\": { \\"raydiumPoolAddress\\": \\"58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2\\" } }\\n```","label":"optional","type":"[LpExchangeRateTask](/api/protos/LpExchangeRateTask)","longType":"OracleJob.LpExchangeRateTask","fullType":"OracleJob.LpExchangeRateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"conditionalTask","description":"This task will run the `attempt` on the subtasks in an effort to produce a valid numerical result. If `attempt`. fails to produce an acceptable result, `on_failure` subtasks will be run instead.\\n\\n_**Input**_: The current running numerical result output from a task.\\n\\n_**Returns**_: A numerical result, else run `on_failure` subtasks.\\n\\n_**Example**_: Returns the numerical result from the conditionalTask\'s subtasks, else `on_failure` returns the numerical result from its subtasks.\\n\\n```json\\n{\\"conditionalTask\\":{\\"attempt\\":[{\\"tasks\\":[{\\"jupiterSwapTask\\":{\\"inTokenAddress\\":\\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\",\\"outTokenAddress\\":\\"DUALa4FC2yREwZ59PHeu1un4wis36vHRv5hWVBmzykCJ\\"}}]}],\\"onFailure\\":[{\\"lpExchangeRateTask\\":{\\"orcaPoolAddress\\":\\"7yJ4gMRJhEoCR48aPE3EAWRmCoygakik81ZS1sajaTnE\\"}}]}}\\n```","label":"optional","type":"[ConditionalTask](/api/protos/ConditionalTask)","longType":"OracleJob.ConditionalTask","fullType":"OracleJob.ConditionalTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"valueTask","description":"Returns a specified value.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the value 10\\n\\n```json\\n{\\"valueTask\\": {\\"value\\": 10} }\\n```\\n\\n_**Example**_: Returns the currentRound result of an aggregator\\n\\n```json\\n{\\"valueTask\\": {\\"aggregatorPubkey\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"} }\\n```\\n\\n_**Example**_: Returns the value stored in a CacheTask variable\\n\\n```json\\n{\\"valueTask\\": {\\"big\\": \\"${ONE}\\"} }\\n```","label":"optional","type":"[ValueTask](/api/protos/ValueTask)","longType":"OracleJob.ValueTask","fullType":"OracleJob.ValueTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"maxTask","description":"Returns the maximum value of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the maximum numerical result from 3 tasks.\\n\\n```json\\n{\\"maxTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the minimum numerical result from 3 jobs.\\n\\n```json\\n{\\"maxTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","label":"optional","type":"[MaxTask](/api/protos/MaxTask)","longType":"OracleJob.MaxTask","fullType":"OracleJob.MaxTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"regexExtractTask","description":"","label":"optional","type":"[RegexExtractTask](/api/protos/RegexExtractTask)","longType":"OracleJob.RegexExtractTask","fullType":"OracleJob.RegexExtractTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"xstepPriceTask","description":"","label":"optional","type":"[XStepPriceTask](/api/protos/XStepPriceTask)","longType":"OracleJob.XStepPriceTask","fullType":"OracleJob.XStepPriceTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"addTask","description":"This task will add a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by adding by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","label":"optional","type":"[AddTask](/api/protos/AddTask)","longType":"OracleJob.AddTask","fullType":"OracleJob.AddTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"subtractTask","description":"This task will subtract a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by subtracting by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","label":"optional","type":"[SubtractTask](/api/protos/SubtractTask)","longType":"OracleJob.SubtractTask","fullType":"OracleJob.SubtractTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"twapTask","description":"Takes a twap over a set period for a certain aggregator. Aggregators have an optional history buffer account storing the last N accepted results. The TwapTask will iterate over an aggregators history buffer and calculate the time weighted average of the samples within a given time period.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The time weighted average of an aggregator over a given time period.\\n\\n_**Example**_: The 1hr Twap of the SOL/USD Aggregator, requiring at least 60 samples.\\n\\n```json\\n{ \\"twapTask\\": { \\"aggregatorPubkey\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\", \\"period\\": 3600, \\"minSamples\\": 60, \\"weightByPropagationTime\\": true  } }\\n```","label":"optional","type":"[TwapTask](/api/protos/TwapTask)","longType":"OracleJob.TwapTask","fullType":"OracleJob.TwapTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"serumSwapTask","description":"","label":"optional","type":"[SerumSwapTask](/api/protos/SerumSwapTask)","longType":"OracleJob.SerumSwapTask","fullType":"OracleJob.SerumSwapTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"powTask","description":"Round the current running result to an exponential power.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The input raised to an exponential power.\\n\\n_**Example**_: Raise 2 to the power of 3, 2^3\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":2}},{\\"powTask\\":{\\"scalar\\":3}}]}\\n```","label":"optional","type":"[PowTask](/api/protos/PowTask)","longType":"OracleJob.PowTask","fullType":"OracleJob.PowTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"lendingRateTask","description":"","label":"optional","type":"[LendingRateTask](/api/protos/LendingRateTask)","longType":"OracleJob.LendingRateTask","fullType":"OracleJob.LendingRateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"mangoPerpMarketTask","description":"","label":"optional","type":"MangoPerpMarketTask","longType":"OracleJob.MangoPerpMarketTask","fullType":"OracleJob.MangoPerpMarketTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"jupiterSwapTask","description":"Fetch the simulated price for a swap on JupiterSwap.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The swap price on Jupiter for a given input and output token mint address.\\n\\n_**Example**_: Fetch the JupiterSwap price for exchanging 1 SOL into USDC.\\n\\n```json\\n{ \\"jupiterSwapTask\\": { \\"inTokenAddress\\": \\"So11111111111111111111111111111111111111112\\", \\"outTokenAddress\\": \\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\" } }\\n```\\n\\n_**Example**_: Fetch the JupiterSwap price for exchanging 1000 SOL into USDC.\\n\\n```json\\n{ \\"jupiterSwapTask\\": { \\"inTokenAddress\\": \\"So11111111111111111111111111111111111111112\\", \\"outTokenAddress\\": \\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\", \\"baseAmount\\": \\"1000\\" } }\\n```","label":"optional","type":"[JupiterSwapTask](/api/protos/JupiterSwapTask)","longType":"OracleJob.JupiterSwapTask","fullType":"OracleJob.JupiterSwapTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"perpMarketTask","description":"","label":"optional","type":"PerpMarketTask","longType":"OracleJob.PerpMarketTask","fullType":"OracleJob.PerpMarketTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"oracleTask","description":"Fetch the current price of a Solana oracle protocol. \\n\\n_**Input**_: None\\n\\n_**Returns**_: The current price of an on-chain oracle.\\n\\n_**Example**_: The Switchboard SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"switchboardAddress\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\" } }\\n```\\n\\n_**Example**_: The Pyth SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"pythAddress\\": \\"H6ARHf6YXhGYeQfUzQNGk6rDNnLBQKrenN712K4AQJEG\\" } }\\n```\\n\\n_**Example**_: The Chainlink SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"chainlinkAddress\\": \\"CcPVS9bqyXbD9cLnTbhhHazLsrua8QMFUHTutPtjyDzq\\" } }\\n```","label":"optional","type":"[OracleTask](/api/protos/OracleTask)","longType":"OracleJob.OracleTask","fullType":"OracleJob.OracleTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"anchorFetchTask","description":"","label":"optional","type":"[AnchorFetchTask](/api/protos/AnchorFetchTask)","longType":"OracleJob.AnchorFetchTask","fullType":"OracleJob.AnchorFetchTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"defiKingdomsTask","description":"","label":"optional","type":"[DefiKingdomsTask](/api/protos/DefiKingdomsTask)","longType":"OracleJob.DefiKingdomsTask","fullType":"OracleJob.DefiKingdomsTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"tpsTask","description":"","label":"optional","type":"[TpsTask](/api/protos/TpsTask)","longType":"OracleJob.TpsTask","fullType":"OracleJob.TpsTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"splStakePoolTask","description":"","label":"optional","type":"[SplStakePoolTask](/api/protos/SplStakePoolTask)","longType":"OracleJob.SplStakePoolTask","fullType":"OracleJob.SplStakePoolTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"splTokenParseTask","description":"","label":"optional","type":"[SplTokenParseTask](/api/protos/SplTokenParseTask)","longType":"OracleJob.SplTokenParseTask","fullType":"OracleJob.SplTokenParseTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"uniswapExchangeRateTask","description":"","label":"optional","type":"[UniswapExchangeRateTask](/api/protos/UniswapExchangeRateTask)","longType":"OracleJob.UniswapExchangeRateTask","fullType":"OracleJob.UniswapExchangeRateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"sushiswapExchangeRateTask","description":"","label":"optional","type":"[SushiswapExchangeRateTask](/api/protos/SushiswapExchangeRateTask)","longType":"OracleJob.SushiswapExchangeRateTask","fullType":"OracleJob.SushiswapExchangeRateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"pancakeswapExchangeRateTask","description":"","label":"optional","type":"[PancakeswapExchangeRateTask](/api/protos/PancakeswapExchangeRateTask)","longType":"OracleJob.PancakeswapExchangeRateTask","fullType":"OracleJob.PancakeswapExchangeRateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"cacheTask","description":"Execute a job and store the result in a variable to reference later.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The input\\n\\n_**Example**_: CacheTask storing ${ONE} = 1\\n\\n```json\\n{ \\"cacheTask\\": { \\"cacheItems\\": [ { \\"variableName\\": \\"ONE\\", \\"job\\": { \\"tasks\\": [ { \\"valueTask\\": { \\"value\\": 1 } } ] } } ] } }\\n```","label":"optional","type":"[CacheTask](/api/protos/CacheTask)","longType":"OracleJob.CacheTask","fullType":"OracleJob.CacheTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"sysclockOffsetTask","description":"","label":"optional","type":"[SysclockOffsetTask](/api/protos/SysclockOffsetTask)","longType":"OracleJob.SysclockOffsetTask","fullType":"OracleJob.SysclockOffsetTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"marinadeStateTask","description":"","label":"optional","type":"[MarinadeStateTask](/api/protos/MarinadeStateTask)","longType":"OracleJob.MarinadeStateTask","fullType":"OracleJob.MarinadeStateTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"solanaAccountDataFetchTask","description":"","label":"optional","type":"[SolanaAccountDataFetchTask](/api/protos/SolanaAccountDataFetchTask)","longType":"OracleJob.SolanaAccountDataFetchTask","fullType":"OracleJob.SolanaAccountDataFetchTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"bufferLayoutParseTask","description":"","label":"optional","type":"[BufferLayoutParseTask](/api/protos/BufferLayoutParseTask)","longType":"OracleJob.BufferLayoutParseTask","fullType":"OracleJob.BufferLayoutParseTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"cronParseTask","description":"Return a timestamp from a crontab instruction.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A timestamp\\n\\n_**Example**_: Return the unix timestamp for the on-chain SYSCLOCK\\n\\n```json\\n{\\"cronParseTask\\":{\\"cronPattern\\":\\"* * * * * *\\",\\"clockOffset\\":0,\\"clock\\":\\"SYSCLOCK\\"}}\\n```\\n\\n_**Example**_: Return the unix timestamp for next friday at 5pm UTC\\n\\n```json\\n{\\"cronParseTask\\":{\\"cronPattern\\":\\"0 17 * * 5\\",\\"clockOffset\\":0,\\"clock\\":0}}\\n```","label":"optional","type":"[CronParseTask](/api/protos/CronParseTask)","longType":"OracleJob.CronParseTask","fullType":"OracleJob.CronParseTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"minTask","description":"Returns the minimum value of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the minimum numerical result from 3 tasks.\\n\\n```json\\n{\\"minTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the minimum numerical result from 3 jobs.\\n\\n```json\\n{\\"minTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","label":"optional","type":"[MinTask](/api/protos/MinTask)","longType":"OracleJob.MinTask","fullType":"OracleJob.MinTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"historyFunctionTask","description":"","label":"optional","type":"HistoryFunctionTask","longType":"OracleJob.HistoryFunctionTask","fullType":"OracleJob.HistoryFunctionTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"vwapTask","description":"","label":"optional","type":"VwapTask","longType":"OracleJob.VwapTask","fullType":"OracleJob.VwapTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"ewmaTask","description":"","label":"optional","type":"[EwmaTask](/api/protos/EwmaTask)","longType":"OracleJob.EwmaTask","fullType":"OracleJob.EwmaTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"comparisonTask","description":"","label":"optional","type":"[ComparisonTask](/api/protos/ComparisonTask)","longType":"OracleJob.ComparisonTask","fullType":"OracleJob.ComparisonTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"roundTask","description":"Round the current running result to a set number of decimal places.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The running result rounded to a set number of decimal places.\\n\\n_**Example**_: Round down the running resul to 8 decimal places\\n\\n```json\\n{ \\"roundTask\\": { \\"method\\": \\"METHOD_ROUND_DOWN\\", \\"decimals\\": 8 } }\\n```","label":"optional","type":"[RoundTask](/api/protos/RoundTask)","longType":"OracleJob.RoundTask","fullType":"OracleJob.RoundTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""},{"name":"boundTask","description":"Bound the running result to an upper/lower bound. This is typically the last task in an OracleJob.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The running result bounded to an upper or lower bound if it exceeds a given threshold.\\n\\n_**Example**_: Bound the running result to a value between 0.90 and 1.10\\n\\n```json\\n{ \\"boundTask\\": { \\"lowerBoundValue\\": \\"0.90\\",\\"onExceedsLowerBoundValue\\": \\"0.90\\",\\"upperBoundValue\\": \\"1.10\\",\\"onExceedsUpperBoundValue\\": \\"1.10\\" } }\\n```","label":"optional","type":"[BoundTask](/api/protos/BoundTask)","longType":"OracleJob.BoundTask","fullType":"OracleJob.BoundTask","ismap":false,"isoneof":true,"oneofdecl":"Task","defaultValue":""}],"id":"task","permalink":"protos/Task"},{"name":"AddTask","longName":"OracleJob.AddTask","fullName":".OracleJob.AddTask","description":"This task will add a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by adding by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"addTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"scalar","description":"Specifies a scalar to add by.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Addition","defaultValue":""},{"name":"aggregatorPubkey","description":"Specifies an aggregator to add by.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Addition","defaultValue":""},{"name":"job","description":"A job whose result is computed before adding our numerical input by that result.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"Addition","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Addition","defaultValue":""}],"id":"add-task","permalink":"protos/AddTask"},{"name":"AnchorFetchTask","longName":"OracleJob.AnchorFetchTask","fullName":".OracleJob.AnchorFetchTask","description":"Load a parse an Anchor based solana account.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"programId","description":"Owning program of the account to parse.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"accountAddress","description":"The account to parse.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"anchor-fetch-task","permalink":"protos/AnchorFetchTask"},{"name":"BoundTask","longName":"OracleJob.BoundTask","fullName":".OracleJob.BoundTask","description":"Bound the running result to an upper/lower bound. This is typically the last task in an OracleJob.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The running result bounded to an upper or lower bound if it exceeds a given threshold.\\n\\n_**Example**_: Bound the running result to a value between 0.90 and 1.10\\n\\n```json\\n{ \\"boundTask\\": { \\"lowerBoundValue\\": \\"0.90\\",\\"onExceedsLowerBoundValue\\": \\"0.90\\",\\"upperBoundValue\\": \\"1.10\\",\\"onExceedsUpperBoundValue\\": \\"1.10\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"lowerBound","description":"The OracleJob to execute for the lower bound value.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"lowerBoundValue","description":"The value to use for the lower bound. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"upperBound","description":"The OracleJob to execute for the upper bound value.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"upperBoundValue","description":"The value to use for the upper bound. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onExceedsUpperBound","description":"The OracleJob to execute if the upper bound is exceeded.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onExceedsUpperBoundValue","description":"The value to use if the upper bound is exceeded. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onExceedsLowerBound","description":"The OracleJob to execute if the lower bound is exceeded.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onExceedsLowerBoundValue","description":"The value to use if the lower bound is exceeded. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"bound-task","permalink":"protos/BoundTask"},{"name":"BufferLayoutParseTask","longName":"OracleJob.BufferLayoutParseTask","fullName":".OracleJob.BufferLayoutParseTask","description":"Return the deserialized value from a stringified buffer.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"offset","description":"The buffer offset to start deserializing from.","label":"optional","type":"uint32","longType":"uint32","fullType":"uint32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"endian","description":"The endianness of the stored value.","label":"optional","type":"[Endian](/api/protos/BufferLayoutParseTask#endian)","longType":"OracleJob.BufferLayoutParseTask.Endian","fullType":"OracleJob.BufferLayoutParseTask.Endian","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"type","description":"The type of value to deserialize.","label":"optional","type":"[BufferParseType](/api/protos/BufferLayoutParseTask#buffer-parse-type)","longType":"OracleJob.BufferLayoutParseTask.BufferParseType","fullType":"OracleJob.BufferLayoutParseTask.BufferParseType","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"buffer-layout-parse-task","permalink":"protos/BufferLayoutParseTask","enums":[{"name":"BufferParseType","longName":"OracleJob.BufferLayoutParseTask.BufferParseType","fullName":".OracleJob.BufferLayoutParseTask.BufferParseType","description":"","values":[{"name":"pubkey","number":"1","description":"A public key."},{"name":"bool","number":"2","description":"A boolean."},{"name":"u8","number":"3","description":"An 8-bit unsigned value."},{"name":"i8","number":"4","description":"An 8-bit signed value."},{"name":"u16","number":"5","description":"A 16-bit unsigned value."},{"name":"i16","number":"6","description":"A 16-bit signed value."},{"name":"u32","number":"7","description":"A 32-bit unsigned value."},{"name":"i32","number":"8","description":"A 32-bit signed value."},{"name":"f32","number":"9","description":"A 32-bit IEEE floating point value."},{"name":"u64","number":"10","description":"A 64-bit unsigned value."},{"name":"i64","number":"11","description":"A 64-bit signed value."},{"name":"f64","number":"12","description":"A 64-bit IEEE floating point value."},{"name":"u128","number":"13","description":"A 128-bit unsigned value."},{"name":"i128","number":"14","description":"A 128-bit signed value."}],"id":"buffer-parse-type","permalink":"protos/BufferLayoutParseTask#buffer-parse-type"},{"name":"Endian","longName":"OracleJob.BufferLayoutParseTask.Endian","fullName":".OracleJob.BufferLayoutParseTask.Endian","description":"","values":[{"name":"LITTLE_ENDIAN","number":"0","description":"Use little endian byte order."},{"name":"BIG_ENDIAN","number":"1","description":"Use big endian byte order."}],"id":"endian","permalink":"protos/BufferLayoutParseTask#endian"}]},{"name":"CacheTask","longName":"OracleJob.CacheTask","fullName":".OracleJob.CacheTask","description":"Execute a job and store the result in a variable to reference later.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The input\\n\\n_**Example**_: CacheTask storing ${ONE} = 1\\n\\n```json\\n{ \\"cacheTask\\": { \\"cacheItems\\": [ { \\"variableName\\": \\"ONE\\", \\"job\\": { \\"tasks\\": [ { \\"valueTask\\": { \\"value\\": 1 } } ] } } ] } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"cacheItems","description":"A list of cached variables to reference in the job with `${VARIABLE_NAME}`.","label":"repeated","type":"[CacheItem[]](/api/protos/CacheTask#cache-item)","longType":"OracleJob.CacheTask.CacheItem","fullType":"OracleJob.CacheTask.CacheItem","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"cache-task","permalink":"protos/CacheTask","messages":[{"name":"CacheItem","longName":"OracleJob.CacheTask.CacheItem","fullName":".OracleJob.CacheTask.CacheItem","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"variableName","description":"The name of the variable to store in cache to reference later with `${VARIABLE_NAME}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"job","description":"The OracleJob to execute to yield the value to store in cache.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"cache-item","permalink":"protos/CacheTask#cache-item"}]},{"name":"ComparisonTask","longName":"OracleJob.ComparisonTask","fullName":".OracleJob.ComparisonTask","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"op","description":"The type of operator to use on the left (lhs) and right (rhs) operand.","label":"optional","type":"[Operation](/api/protos/ComparisonTask#operation)","longType":"OracleJob.ComparisonTask.Operation","fullType":"OracleJob.ComparisonTask.Operation","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"lhs","description":"OracleJob where the executed result is equal to the left hand side operand.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"LHS","defaultValue":""},{"name":"lhsValue","description":"String or `${CACHE_KEY}` representing the left hand side operand.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"LHS","defaultValue":""},{"name":"rhs","description":"OracleJob where the executed result is equal to the right hand side operand.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"RHS","defaultValue":""},{"name":"rhsValue","description":"String or `${CACHE_KEY}` representing the right hand side operand.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"RHS","defaultValue":""},{"name":"onTrue","description":"The OracleJob to execute if the condition evaluates to true.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onTrueValue","description":"The result to use if the condition evaluates to true. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onFalse","description":"The OracleJob to execute if the condition evaluates to false.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onFalseValue","description":"The result to use if the condition evaluates to false. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onFailure","description":"The OracleJob to execute if the condition fails to evaluate.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onFailureValue","description":"The result to use if the condition fails to evaluate. Can be set to a `${CACHE_KEY}`.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"comparison-task","permalink":"protos/ComparisonTask","enums":[{"name":"Operation","longName":"OracleJob.ComparisonTask.Operation","fullName":".OracleJob.ComparisonTask.Operation","description":"","values":[{"name":"OPERATION_EQ","number":"0","description":"Use the equals to \'==\' operator."},{"name":"OPERATION_GT","number":"1","description":"Use the greater than \'>\' operator."},{"name":"OPERATION_LT","number":"2","description":"Use the less than \'<\' operator."}],"id":"operation","permalink":"protos/ComparisonTask#operation"}]},{"name":"ConditionalTask","longName":"OracleJob.ConditionalTask","fullName":".OracleJob.ConditionalTask","description":"This task will run the `attempt` on the subtasks in an effort to produce a valid numerical result. If `attempt`. fails to produce an acceptable result, `on_failure` subtasks will be run instead.\\n\\n_**Input**_: The current running numerical result output from a task.\\n\\n_**Returns**_: A numerical result, else run `on_failure` subtasks.\\n\\n_**Example**_: Returns the numerical result from the conditionalTask\'s subtasks, else `on_failure` returns the numerical result from its subtasks.\\n\\n```json\\n{\\"conditionalTask\\":{\\"attempt\\":[{\\"tasks\\":[{\\"jupiterSwapTask\\":{\\"inTokenAddress\\":\\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\",\\"outTokenAddress\\":\\"DUALa4FC2yREwZ59PHeu1un4wis36vHRv5hWVBmzykCJ\\"}}]}],\\"onFailure\\":[{\\"lpExchangeRateTask\\":{\\"orcaPoolAddress\\":\\"7yJ4gMRJhEoCR48aPE3EAWRmCoygakik81ZS1sajaTnE\\"}}]}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"attempt","description":"A list of subtasks to process in an attempt to produce a valid numerical result.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"onFailure","description":"A list of subtasks that will be run if `attempt` subtasks are unable to produce an acceptable\\n/ result.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"conditional-task","permalink":"protos/ConditionalTask"},{"name":"CronParseTask","longName":"OracleJob.CronParseTask","fullName":".OracleJob.CronParseTask","description":"Return a timestamp from a crontab instruction.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A timestamp\\n\\n_**Example**_: Return the unix timestamp for the on-chain SYSCLOCK\\n\\n```json\\n{\\"cronParseTask\\":{\\"cronPattern\\":\\"* * * * * *\\",\\"clockOffset\\":0,\\"clock\\":\\"SYSCLOCK\\"}}\\n```\\n\\n_**Example**_: Return the unix timestamp for next friday at 5pm UTC\\n\\n```json\\n{\\"cronParseTask\\":{\\"cronPattern\\":\\"0 17 * * 5\\",\\"clockOffset\\":0,\\"clock\\":0}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"cronPattern","description":"The cron pattern to parse.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"clockOffset","description":"The timestamp offset to calculate the next run.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"clock","description":"Use the TaskRunner\'s clock or the on-chain SYSCLOCK.","label":"optional","type":"[ClockType](/api/protos/CronParseTask#clock-type)","longType":"OracleJob.CronParseTask.ClockType","fullType":"OracleJob.CronParseTask.ClockType","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"cron-parse-task","permalink":"protos/CronParseTask","enums":[{"name":"ClockType","longName":"OracleJob.CronParseTask.ClockType","fullName":".OracleJob.CronParseTask.ClockType","description":"","values":[{"name":"ORACLE","number":"0","description":"Use the TaskRunners system clock for the current time."},{"name":"SYSCLOCK","number":"1","description":"Use the on-chain SYSCLOCK for the current time."}],"id":"clock-type","permalink":"protos/CronParseTask#clock-type"}]},{"name":"DefiKingdomsTask","longName":"OracleJob.DefiKingdomsTask","fullName":".OracleJob.DefiKingdomsTask","description":"Fetch the swap price from DefiKingdoms.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"provider","description":"The RPC provider to use for the swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"inToken","description":"The input token of the swap.","label":"optional","type":"[Token](/api/protos/DefiKingdomsTask#token)","longType":"OracleJob.DefiKingdomsTask.Token","fullType":"OracleJob.DefiKingdomsTask.Token","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outToken","description":"The output token of the swap.","label":"optional","type":"[Token](/api/protos/DefiKingdomsTask#token)","longType":"OracleJob.DefiKingdomsTask.Token","fullType":"OracleJob.DefiKingdomsTask.Token","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"defi-kingdoms-task","permalink":"protos/DefiKingdomsTask","messages":[{"name":"Token","longName":"OracleJob.DefiKingdomsTask.Token","fullName":".OracleJob.DefiKingdomsTask.Token","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"address","description":"The address of the token.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"decimals","description":"The number of decimal places for a token.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"token","permalink":"protos/DefiKingdomsTask#token"}]},{"name":"DivideTask","longName":"OracleJob.DivideTask","fullName":".OracleJob.DivideTask","description":"This task will divide a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by dividing by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by dividing by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by dividing by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"divideTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"scalar","description":"Specifies a basic scalar denominator to divide by.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Denominator","defaultValue":""},{"name":"aggregatorPubkey","description":"Specifies another aggregator resut to divide by.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Denominator","defaultValue":""},{"name":"job","description":"A job whose result is computed before dividing our numerical input by that result.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"Denominator","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Denominator","defaultValue":""}],"id":"divide-task","permalink":"protos/DivideTask"},{"name":"EwmaTask","longName":"OracleJob.EwmaTask","fullName":".OracleJob.EwmaTask","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"aggregatorAddress","description":"","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"period","description":"","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"lambda","description":"","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"ewma-task","permalink":"protos/EwmaTask"},{"name":"HttpTask","longName":"OracleJob.HttpTask","fullName":".OracleJob.HttpTask","description":"The adapter will report the text body of a successful HTTP request to the \\nspecified url, or return an error if the response status code is greater \\nthan or equal to 400.\\n\\n_**Input**_: None\\n\\n_**Returns**_: String representation of the http response.\\n\\n_**Example**_: Basic HttpTask\\n\\n```json\\n{\\"httpTask\\": {\\"url\\": \\"https://mywebsite.org/path\\"} }\\n```\\n\\n_**Example**_: HttpTask example with headers\\n\\n```json\\n{ \\"httpTask\\": { \\"url\\": \\"https://mywebsite.org/path\\", \\"method\\": \\"METHOD_POST\\", \\"headers\\": [ { \\"key\\": \\"MY_HEADER_KEY\\", \\"value\\": \\"MY_HEADER_VALUE\\" } ], \\"body\\": \\"{\\\\\\"MY_BODY_KEY\\\\\\":\\\\\\"MY_BODY_VALUE\\\\\\"}\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"url","description":"A string containing the URL to direct this HTTP request to.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"method","description":"The type of HTTP request to make.","label":"optional","type":"[Method](/api/protos/RoundTask#method)","longType":"OracleJob.HttpTask.Method","fullType":"OracleJob.HttpTask.Method","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"headers","description":"A list of headers to add to this HttpTask.","label":"repeated","type":"[Header[]](/api/protos/HttpTask#header)","longType":"OracleJob.HttpTask.Header","fullType":"OracleJob.HttpTask.Header","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"body","description":"A stringified body (if any) to add to this HttpTask.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"http-task","permalink":"protos/HttpTask","messages":[{"name":"Header","longName":"OracleJob.HttpTask.Header","fullName":".OracleJob.HttpTask.Header","description":"An object that represents a header to add to an HTTP request.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"key","description":"A header key such as `Authorization` or `Content-Type`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"value","description":"A value for the given header key like `Basic MYAUTHKEY` or `application/json`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"header","permalink":"protos/HttpTask#header"}],"enums":[{"name":"Method","longName":"OracleJob.HttpTask.Method","fullName":".OracleJob.HttpTask.Method","description":"An enumeration representing the types of HTTP requests available to make.","values":[{"name":"METHOD_UNKOWN","number":"0","description":"Unset HTTP method will default to METHOD_GET"},{"name":"METHOD_GET","number":"1","description":"Perform an HTTP \'GET\' request."},{"name":"METHOD_POST","number":"2","description":"Perform an HTTP \'POST\' request."}],"id":"method","permalink":"protos/HttpTask#method"}]},{"name":"JsonParseTask","longName":"OracleJob.JsonParseTask","fullName":".OracleJob.JsonParseTask","description":"The adapter walks the path specified and returns the value found at that result. If returning\\nJSON data from the HttpGet or HttpPost adapters, you must use this adapter to parse the response.\\n\\n_**Input**_: String representation of a JSON object.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Parses the price field from a JSON object\\n\\n```json\\n{\\"jsonParse\\": {\\"path\\": \\"$.price\\"} }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"path","description":"JSONPath formatted path to the element. https://t.ly/uLtw\\n/ https://www.npmjs.com/package/jsonpath-plus","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"aggregationMethod","description":"The technique that will be used to aggregate the results if walking the specified path returns multiple numerical results.","label":"optional","type":"[AggregationMethod](/api/protos/JsonParseTask#aggregation-method)","longType":"OracleJob.JsonParseTask.AggregationMethod","fullType":"OracleJob.JsonParseTask.AggregationMethod","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"json-parse-task","permalink":"protos/JsonParseTask","enums":[{"name":"AggregationMethod","longName":"OracleJob.JsonParseTask.AggregationMethod","fullName":".OracleJob.JsonParseTask.AggregationMethod","description":"The methods of combining a list of numerical results.","values":[{"name":"NONE","number":"0","description":""},{"name":"MIN","number":"1","description":"Grab the minimum value of the results."},{"name":"MAX","number":"2","description":"Grab the maximum value of the results."},{"name":"SUM","number":"3","description":"Sum up all of the results."},{"name":"MEAN","number":"4","description":"Average all of the results."},{"name":"MEDIAN","number":"5","description":"Grab the median of the results."}],"id":"aggregation-method","permalink":"protos/JsonParseTask#aggregation-method"}]},{"name":"JupiterSwapTask","longName":"OracleJob.JupiterSwapTask","fullName":".OracleJob.JupiterSwapTask","description":"Fetch the simulated price for a swap on JupiterSwap.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The swap price on Jupiter for a given input and output token mint address.\\n\\n_**Example**_: Fetch the JupiterSwap price for exchanging 1 SOL into USDC.\\n\\n```json\\n{ \\"jupiterSwapTask\\": { \\"inTokenAddress\\": \\"So11111111111111111111111111111111111111112\\", \\"outTokenAddress\\": \\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\" } }\\n```\\n\\n_**Example**_: Fetch the JupiterSwap price for exchanging 1000 SOL into USDC.\\n\\n```json\\n{ \\"jupiterSwapTask\\": { \\"inTokenAddress\\": \\"So11111111111111111111111111111111111111112\\", \\"outTokenAddress\\": \\"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v\\", \\"baseAmount\\": \\"1000\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"inTokenAddress","description":"The input token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outTokenAddress","description":"The output token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"allowList","description":"A list of AMM markets to allow.","label":"optional","type":"[FilterList](/api/protos/JupiterSwapTask#filter-list)","longType":"OracleJob.JupiterSwapTask.FilterList","fullType":"OracleJob.JupiterSwapTask.FilterList","ismap":false,"isoneof":true,"oneofdecl":"RoutesFilters","defaultValue":""},{"name":"denyList","description":"A list of AMM markets to deny.","label":"optional","type":"[FilterList](/api/protos/JupiterSwapTask#filter-list)","longType":"OracleJob.JupiterSwapTask.FilterList","fullType":"OracleJob.JupiterSwapTask.FilterList","ismap":false,"isoneof":true,"oneofdecl":"RoutesFilters","defaultValue":""},{"name":"baseAmount","description":"The amount of `in_token_address` tokens to swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"SwapAmount","defaultValue":""},{"name":"quoteAmount","description":"The amount of `out_token_address` tokens to swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"SwapAmount","defaultValue":""},{"name":"baseAmountString","description":"The amount of `in_token_address` tokens to swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"SwapAmount","defaultValue":""},{"name":"quoteAmountString","description":"The amount of `out_token_address` tokens to swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"SwapAmount","defaultValue":""}],"id":"jupiter-swap-task","permalink":"protos/JupiterSwapTask","messages":[{"name":"FilterList","longName":"OracleJob.JupiterSwapTask.FilterList","fullName":".OracleJob.JupiterSwapTask.FilterList","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"labels","description":"A list of Jupiter AMM labels to allow or deny (e.g. \'Raydium\', \'Orca\')","label":"repeated","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"filter-list","permalink":"protos/JupiterSwapTask#filter-list"}]},{"name":"LendingRateTask","longName":"OracleJob.LendingRateTask","fullName":".OracleJob.LendingRateTask","description":"Fetch the lending rates for various Solana protocols","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"protocol","description":"01, apricot, francium, jet, larix, mango, port, solend, tulip","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"assetMint","description":"A token mint address supported by the chosen protocol","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"field","description":"","label":"optional","type":"[Field](/api/protos/LendingRateTask#field)","longType":"OracleJob.LendingRateTask.Field","fullType":"OracleJob.LendingRateTask.Field","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"lending-rate-task","permalink":"protos/LendingRateTask","enums":[{"name":"Field","longName":"OracleJob.LendingRateTask.Field","fullName":".OracleJob.LendingRateTask.Field","description":"","values":[{"name":"FIELD_DEPOSIT_RATE","number":"0","description":"deposit lending rate"},{"name":"FIELD_BORROW_RATE","number":"1","description":"borrow lending rate"}],"id":"field","permalink":"protos/LendingRateTask#field"}]},{"name":"LpExchangeRateTask","longName":"OracleJob.LpExchangeRateTask","fullName":".OracleJob.LpExchangeRateTask","description":"Fetch the current swap price for a given liquidity pool\\n\\n_**Input**_: None\\n\\n_**Returns**_: The swap price for a given AMM pool.\\n\\n_**Example**_: Fetch the exchange rate from the Orca SOL/USDC pool\\n\\n```json\\n{ \\"lpExchangeRateTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\" } }\\n```\\n\\n_**Example**_: Fetch the exchange rate from the Raydium SOL/USDC pool\\n\\n```json\\n{ \\"lpExchangeRateTask\\": { \\"raydiumPoolAddress\\": \\"58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"inTokenAddress","description":"Used alongside mercurial_pool_address to specify the input token for a swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outTokenAddress","description":"Used alongside mercurial_pool_address to specify the output token for a swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"mercurialPoolAddress","description":"Mercurial finance pool address. A full list can be found here: https://github.com/mercurial-finance/stable-swap-n-pool-js","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"saberPoolAddress","description":"Saber pool address. A full list can be found here: https://github.com/saber-hq/saber-registry-dist","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"orcaPoolTokenMintAddress","description":"@deprecated** Use orcaPoolAddress","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":"","options":{"deprecated":true}},{"name":"orcaPoolAddress","description":"The Raydium liquidity pool ammId. A full list can be found here: https://raydium.io/pools\\n/ Pool address for an Orca LP pool or whirlpool. \\n/ A full list of Orca LP pools can be found here: https://www.orca.so/pools","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"portReserveAddress","description":"The Port reserve pubkey. A full list can be found here: https://api-v1.port.finance/reserves","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""}],"id":"lp-exchange-rate-task","permalink":"protos/LpExchangeRateTask"},{"name":"LpTokenPriceTask","longName":"OracleJob.LpTokenPriceTask","fullName":".OracleJob.LpTokenPriceTask","description":"Fetch LP token price info from a number of supported exchanges. \\n\\nSee our blog post on [Fair LP Token Oracles](/blog/2022/01/20/Fair-LP-Token-Oracles)\\n\\n*NOTE**: This is not the swap price but the price of the underlying LP token.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The price of an LP token for a given AMM pool. \\n\\n_**Example**_: Fetch the Orca LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\" } }\\n```\\n\\n_**Example**_: Fetch the fair price Orca LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"orcaPoolAddress\\": \\"APDFRM3HMr8CAGXwKHiu2f5ePSpaiEJhaURwhsRrUUt9\\", \\"useFairPrice\\": true, \\"priceFeedAddresses\\": [ \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\", \\"BjUgj6YCnFBZ49wF54ddBVA9qu8TeqkFtkbqmZcee8uW\\" ] } }\\n```\\n\\n_**Example**_: Fetch the fair price Raydium LP token price of the SOL/USDC pool\\n\\n```json\\n{ \\"lpTokenPriceTask\\": { \\"raydiumPoolAddress\\": \\"58oQChx4yWmvKdwLLZzBi4ChoCc2fqCUWBkwMihLYQo2\\", \\"useFairPrice\\": true,\\"priceFeedAddresses\\": [\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\",\\"BjUgj6YCnFBZ49wF54ddBVA9qu8TeqkFtkbqmZcee8uW\\" ] } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"mercurialPoolAddress","description":"Mercurial finance pool address. A full list can be found here: https://github.com/mercurial-finance/stable-swap-n-pool-js","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"saberPoolAddress","description":"Saber pool address. A full list can be found here: https://github.com/saber-hq/saber-registry-dist","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"orcaPoolAddress","description":"Orca pool address. A full list can be found here: https://www.orca.so/pools","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"raydiumPoolAddress","description":"The Raydium liquidity pool ammId. A full list can be found here: https://raydium.io/pools","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"PoolAddress","defaultValue":""},{"name":"priceFeedAddresses","description":"A list of Switchboard aggregator accounts used to calculate the fair LP price. This ensures the price is based on the previous round to mitigate flash loan price manipulation.","label":"repeated","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"priceFeedJobs","description":"A list of OracleJobs to execute in order to yield the price feed jobs to use for the fair price formula.","label":"repeated","type":"[OracleJob[]](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"useFairPrice","description":"If enabled and price_feed_addresses provided, the oracle will calculate the fair LP price based on the liquidity pool reserves. See our blog post for more information: https://switchboardxyz.medium.com/fair-lp-token-oracles-94a457c50239","label":"optional","type":"bool","longType":"bool","fullType":"bool","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"lp-token-price-task","permalink":"protos/LpTokenPriceTask"},{"name":"MarinadeStateTask","longName":"OracleJob.MarinadeStateTask","fullName":".OracleJob.MarinadeStateTask","description":"","hasExtensions":false,"hasFields":false,"hasOneofs":false,"extensions":[],"fields":[],"id":"marinade-state-task","permalink":"protos/MarinadeStateTask"},{"name":"MaxTask","longName":"OracleJob.MaxTask","fullName":".OracleJob.MaxTask","description":"Returns the maximum value of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the maximum numerical result from 3 tasks.\\n\\n```json\\n{\\"maxTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the maximum numerical result from 3 jobs.\\n\\n```json\\n{\\"maxTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"tasks","description":"A list of subtasks to process and produce a list of result values.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"jobs","description":"A list of subjobs to process and produce a list of result values.","label":"repeated","type":"[OracleJob[]](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"max-task","permalink":"protos/MaxTask"},{"name":"MeanTask","longName":"OracleJob.MeanTask","fullName":".OracleJob.MeanTask","description":"Returns the mean (average) of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the mean numerical result of 3 tasks.\\n\\n```json\\n{\\"meanTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the mean numerical result of 3 jobs.\\n\\n```json\\n{\\"meanTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"tasks","description":"A list of subtasks to process and produce a list of result values.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"jobs","description":"A list of subjobs to process and produce a list of result values.","label":"repeated","type":"[OracleJob[]](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"mean-task","permalink":"protos/MeanTask"},{"name":"MedianTask","longName":"OracleJob.MedianTask","fullName":".OracleJob.MedianTask","description":"Returns the median (middle) of all the results returned by the provided subtasks and subjobs. Nested tasks must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the median numerical result of 3 tasks.\\n\\n```json\\n{\\"medianTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the median numerical result of 3 jobs.\\n\\n```json\\n{\\"medianTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"tasks","description":"A list of subtasks to process and produce a list of result values.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"jobs","description":"A list of subjobs to process and produce a list of result values.","label":"repeated","type":"[OracleJob[]](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"minSuccessfulRequired","description":"The minimum number of values before a successful median can be yielded.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"median-task","permalink":"protos/MedianTask"},{"name":"MinTask","longName":"OracleJob.MinTask","fullName":".OracleJob.MinTask","description":"Returns the minimum value of all the results returned by the provided subtasks and subjobs. Nested tasks or jobs must return a Number.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the minimum numerical result from 3 tasks.\\n\\n```json\\n{\\"minTask\\": {\\"tasks\\": [{\\"valueTask\\": {\\"value\\": 10}},{\\"valueTask\\": {\\"value\\": 20}},{\\"valueTask\\": {\\"value\\": 30}}]}}\\n```\\n\\n_**Example**_: Returns the minimum numerical result from 3 jobs.\\n\\n```json\\n{\\"minTask\\": {\\"jobs\\": [{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.com/api/v3/ticker/price?symbol=SOLUSDT\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://www.binance.us/api/v3/ticker/price?symbol=SOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$.price\\"}}]},{\\"tasks\\": [{\\"httpTask\\": {\\"url\\": \\"https://api-pub.bitfinex.com/v2/tickers?symbols=tSOLUSD\\"}},{\\"jsonParseTask\\": {\\"path\\": \\"$[0][7]\\"}}]}]}}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"tasks","description":"A list of subtasks to process and produce a list of result values.","label":"repeated","type":"[Task[]](/api/protos/Task)","longType":"OracleJob.Task","fullType":"OracleJob.Task","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"jobs","description":"A list of subjobs to process and produce a list of result values.","label":"repeated","type":"[OracleJob[]](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"min-task","permalink":"protos/MinTask"},{"name":"MultiplyTask","longName":"OracleJob.MultiplyTask","fullName":".OracleJob.MultiplyTask","description":"This task will multiply a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by multiplying by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"multiplyTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"scalar","description":"Specifies a scalar to multiply by.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Multiple","defaultValue":""},{"name":"aggregatorPubkey","description":"Specifies an aggregator to multiply by.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Multiple","defaultValue":""},{"name":"job","description":"A job whose result is computed before multiplying our numerical input by that result.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"Multiple","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Multiple","defaultValue":""}],"id":"multiply-task","permalink":"protos/MultiplyTask"},{"name":"OracleTask","longName":"OracleJob.OracleTask","fullName":".OracleJob.OracleTask","description":"Fetch the current price of a Solana oracle protocol. \\n\\n_**Input**_: None\\n\\n_**Returns**_: The current price of an on-chain oracle.\\n\\n_**Example**_: The Switchboard SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"switchboardAddress\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\" } }\\n```\\n\\n_**Example**_: The Pyth SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"pythAddress\\": \\"H6ARHf6YXhGYeQfUzQNGk6rDNnLBQKrenN712K4AQJEG\\" } }\\n```\\n\\n_**Example**_: The Chainlink SOL/USD oracle price.\\n\\n```json\\n{ \\"oracleTask\\": { \\"chainlinkAddress\\": \\"CcPVS9bqyXbD9cLnTbhhHazLsrua8QMFUHTutPtjyDzq\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"switchboardAddress","description":"Mainnet address of a Switchboard V2 feed. Switchboard is decentralized and allows anyone to build their own feed. A small subset of feeds is available here: https://switchboard.xyz/explorer","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"AggregatorAddress","defaultValue":""},{"name":"pythAddress","description":"Mainnet address for a Pyth feed. A full list can be found here: https://pyth.network/price-feeds/","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"AggregatorAddress","defaultValue":""},{"name":"chainlinkAddress","description":"Mainnet address for a Chainlink feed. A full list can be found here: https://docs.chain.link/docs/solana/data-feeds-solana","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"AggregatorAddress","defaultValue":""},{"name":"pythAllowedConfidenceInterval","description":"Value (as a percentage) that the lower bound confidence interval is of the actual value.\\n/ Confidence intervals that are larger that this treshold are rejected.\\n/\\n/ The confidence interval should be provided as a raw percentage value. For example, to \\n/ represent 10%, enter the value as 10, not 0.1.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"oracle-task","permalink":"protos/OracleTask"},{"name":"PancakeswapExchangeRateTask","longName":"OracleJob.PancakeswapExchangeRateTask","fullName":".OracleJob.PancakeswapExchangeRateTask","description":"Fetch the swap price from PancakeSwap.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"inTokenAddress","description":"The input token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outTokenAddress","description":"The output token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"inTokenAmount","description":"The amount of tokens to swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"slippage","description":"The allowable slippage in percent for the swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"provider","description":"The RPC provider to use for the swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"pancakeswap-exchange-rate-task","permalink":"protos/PancakeswapExchangeRateTask"},{"name":"PowTask","longName":"OracleJob.PowTask","fullName":".OracleJob.PowTask","description":"Round the current running result to an exponential power.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The input raised to an exponential power.\\n\\n_**Example**_: Raise 2 to the power of 3, 2^3\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":2}},{\\"powTask\\":{\\"scalar\\":3}}]}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"scalar","description":"Take the working value to the exponent of value.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Exponent","defaultValue":""},{"name":"aggregatorPubkey","description":"Take the working value to the exponent of the aggregators value.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Exponent","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Exponent","defaultValue":""}],"id":"pow-task","permalink":"protos/PowTask"},{"name":"RegexExtractTask","longName":"OracleJob.RegexExtractTask","fullName":".OracleJob.RegexExtractTask","description":"Find a pattern within a string of a previous task and extract a group number.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"pattern","description":"Regex pattern to find.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"groupNumber","description":"Group number to extract.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"regex-extract-task","permalink":"protos/RegexExtractTask"},{"name":"RoundTask","longName":"OracleJob.RoundTask","fullName":".OracleJob.RoundTask","description":"Round the current running result to a set number of decimal places.\\n\\n_**Input**_: The current running numerical result.\\n\\n_**Returns**_: The running result rounded to a set number of decimal places.\\n\\n_**Example**_: Round down the running resul to 8 decimal places\\n\\n```json\\n{ \\"roundTask\\": { \\"method\\": \\"METHOD_ROUND_DOWN\\", \\"decimals\\": 8 } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"method","description":"The rounding method to use.","label":"optional","type":"[Method](/api/protos/RoundTask#method)","longType":"OracleJob.RoundTask.Method","fullType":"OracleJob.RoundTask.Method","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"decimals","description":"The number of decimals to round to.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"round-task","permalink":"protos/RoundTask","enums":[{"name":"Method","longName":"OracleJob.RoundTask.Method","fullName":".OracleJob.RoundTask.Method","description":"","values":[{"name":"METHOD_ROUND_UP","number":"0","description":"Round the result down."},{"name":"METHOD_ROUND_DOWN","number":"1","description":"Round the result up."}],"id":"method","permalink":"protos/RoundTask#method"}]},{"name":"SerumSwapTask","longName":"OracleJob.SerumSwapTask","fullName":".OracleJob.SerumSwapTask","description":"Fetch the latest swap price on Serum\'s orderbook","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"serumPoolAddress","description":"The serum pool to fetch swap price for","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"serum-swap-task","permalink":"protos/SerumSwapTask"},{"name":"SolanaAccountDataFetchTask","longName":"OracleJob.SolanaAccountDataFetchTask","fullName":".OracleJob.SolanaAccountDataFetchTask","description":"Fetch the account data in a stringified buffer format.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"pubkey","description":"The on-chain account to fetch the account data from.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"solana-account-data-fetch-task","permalink":"protos/SolanaAccountDataFetchTask"},{"name":"SplStakePoolTask","longName":"OracleJob.SplStakePoolTask","fullName":".OracleJob.SplStakePoolTask","description":"Fetch the JSON representation of an SPL Stake Pool account.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"pubkey","description":"The pubkey of the SPL Stake Pool.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"spl-stake-pool-task","permalink":"protos/SplStakePoolTask"},{"name":"SplTokenParseTask","longName":"OracleJob.SplTokenParseTask","fullName":".OracleJob.SplTokenParseTask","description":"Fetch the JSON representation of an SPL token mint.","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"tokenAccountAddress","description":"The publicKey of a token account to fetch the mintInfo for.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"AccountAddress","defaultValue":""},{"name":"mintAddress","description":"The publicKey of the token mint address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"AccountAddress","defaultValue":""}],"id":"spl-token-parse-task","permalink":"protos/SplTokenParseTask"},{"name":"SubtractTask","longName":"OracleJob.SubtractTask","fullName":".OracleJob.SubtractTask","description":"This task will subtract a numerical input by a scalar value from a job of subtasks, an aggregator, or a big.\\n\\n_**Input**_: The current running numerical result output from a scalar value, an aggregator, a job of subtasks or a big.\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the numerical result by subtracting by a job of subtasks.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by an aggregator.\\n\\n```json\\n{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"aggregatorPubkey\\":\\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"}}]}\\n```\\n\\n_**Example**_: Returns the numerical result by multiplying by a big.\\n\\n```json\\n{\\"tasks\\":[{\\"cacheTask\\":{\\"cacheItems\\":[{\\"variableName\\":\\"TEN\\",\\"job\\":{\\"tasks\\":[{\\"valueTask\\":{\\"value\\":10}}]}}]}},{\\"valueTask\\":{\\"value\\":100}},{\\"subtractTask\\":{\\"big\\":\\"${TEN}\\"}}]}\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"scalar","description":"Specifies a scalar to subtract by.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Subtraction","defaultValue":""},{"name":"aggregatorPubkey","description":"Specifies an aggregator to subtract by.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Subtraction","defaultValue":""},{"name":"job","description":"A job whose result is computed before subtracting our numerical input by that result.","label":"optional","type":"[OracleJob](/api/protos/OracleJob)","longType":"OracleJob","fullType":"OracleJob","ismap":false,"isoneof":true,"oneofdecl":"Subtraction","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Subtraction","defaultValue":""}],"id":"subtract-task","permalink":"protos/SubtractTask"},{"name":"SushiswapExchangeRateTask","longName":"OracleJob.SushiswapExchangeRateTask","fullName":".OracleJob.SushiswapExchangeRateTask","description":"Fetch the swap price from SushiSwap.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"inTokenAddress","description":"The input token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outTokenAddress","description":"The output token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"inTokenAmount","description":"The amount of tokens to swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"slippage","description":"The allowable slippage in percent for the swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"provider","description":"The RPC provider to use for the swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"sushiswap-exchange-rate-task","permalink":"protos/SushiswapExchangeRateTask"},{"name":"SysclockOffsetTask","longName":"OracleJob.SysclockOffsetTask","fullName":".OracleJob.SysclockOffsetTask","description":"Return the difference between an oracle\'s clock and the current timestamp at `SYSVAR_CLOCK_PUBKEY`.","hasExtensions":false,"hasFields":false,"hasOneofs":false,"extensions":[],"fields":[],"id":"sysclock-offset-task","permalink":"protos/SysclockOffsetTask"},{"name":"TpsTask","longName":"OracleJob.TpsTask","fullName":".OracleJob.TpsTask","description":"Fetch the current transactions per second.","hasExtensions":false,"hasFields":false,"hasOneofs":false,"extensions":[],"fields":[],"id":"tps-task","permalink":"protos/TpsTask"},{"name":"TwapTask","longName":"OracleJob.TwapTask","fullName":".OracleJob.TwapTask","description":"Takes a twap over a set period for a certain aggregator. Aggregators have an optional history buffer account storing the last N accepted results. The TwapTask will iterate over an aggregators history buffer and calculate the time weighted average of the samples within a given time period.\\n\\n_**Input**_: None\\n\\n_**Returns**_: The time weighted average of an aggregator over a given time period.\\n\\n_**Example**_: The 1hr Twap of the SOL/USD Aggregator, requiring at least 60 samples.\\n\\n```json\\n{ \\"twapTask\\": { \\"aggregatorPubkey\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\", \\"period\\": 3600, \\"minSamples\\": 60, \\"weightByPropagationTime\\": true  } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"aggregatorPubkey","description":"The target aggregator for the TWAP.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"period","description":"Period, in seconds, the twap should account for","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"weightByPropagationTime","description":"Weight samples by their propagation time","label":"optional","type":"bool","longType":"bool","fullType":"bool","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"minSamples","description":"Minimum number of samples in the history to calculate a valid result","label":"optional","type":"uint32","longType":"uint32","fullType":"uint32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"endingUnixTimestamp","description":"Ending unix timestamp to collect values up to","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"endingUnixTimestampTask","description":"Execute the task to get the ending unix timestamp","label":"optional","type":"[CronParseTask](/api/protos/CronParseTask)","longType":"OracleJob.CronParseTask","fullType":"OracleJob.CronParseTask","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"twap-task","permalink":"protos/TwapTask"},{"name":"UniswapExchangeRateTask","longName":"OracleJob.UniswapExchangeRateTask","fullName":".OracleJob.UniswapExchangeRateTask","description":"Fetch the swap price from UniSwap.","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"inTokenAddress","description":"The input token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"outTokenAddress","description":"The output token address.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"inTokenAmount","description":"The amount of tokens to swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"slippage","description":"The allowable slippage in percent for the swap.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"provider","description":"The RPC provider to use for the swap.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"uniswap-exchange-rate-task","permalink":"protos/UniswapExchangeRateTask"},{"name":"ValueTask","longName":"OracleJob.ValueTask","fullName":".OracleJob.ValueTask","description":"Returns a specified value.\\n\\n_**Input**_: None\\n\\n_**Returns**_: A numerical result.\\n\\n_**Example**_: Returns the value 10\\n\\n```json\\n{\\"valueTask\\": {\\"value\\": 10} }\\n```\\n\\n_**Example**_: Returns the currentRound result of an aggregator\\n\\n```json\\n{\\"valueTask\\": {\\"aggregatorPubkey\\": \\"GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\\"} }\\n```\\n\\n_**Example**_: Returns the value stored in a CacheTask variable\\n\\n```json\\n{\\"valueTask\\": {\\"big\\": \\"${ONE}\\"} }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"value","description":"The value that will be returned from this task.","label":"optional","type":"double","longType":"double","fullType":"double","ismap":false,"isoneof":true,"oneofdecl":"Value","defaultValue":""},{"name":"aggregatorPubkey","description":"Specifies an aggregatorr to pull the value of.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Value","defaultValue":""},{"name":"big","description":"A stringified big.js. `Accepts variable expansion syntax.`","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"Value","defaultValue":""}],"id":"value-task","permalink":"protos/ValueTask"},{"name":"WebsocketTask","longName":"OracleJob.WebsocketTask","fullName":".OracleJob.WebsocketTask","description":"Opens and maintains a websocket for light speed data retrieval.\\n\\n_**Input**_: None\\n\\n_**Returns**_: String representation of the websocket subscription message.\\n\\n_**Example**_: Opens a coinbase websocket\\n\\n```json\\n{ \\"websocketTask\\": { \\"url\\": \\"wss://ws-feed.pro.coinbase.com\\", \\"subscription\\": \\"{\\\\\\"type\\\\\\":\\\\\\"subscribe\\\\\\",\\\\\\"product_ids\\\\\\":[\\\\\\"BTC-USD\\\\\\"],\\\\\\"channels\\\\\\":[\\\\\\"ticker\\\\\\",{\\\\\\"name\\\\\\":\\\\\\"ticker\\\\\\",\\\\\\"product_ids\\\\\\":[\\\\\\"BTC-USD\\\\\\"]}]}\\", \\"maxDataAgeSeconds\\": 15, \\"filter\\": \\"$[?(@.type == \'ticker\' && @.product_id == \'BTC-USD\')]\\" } }\\n```","hasExtensions":false,"hasFields":true,"hasOneofs":false,"extensions":[],"fields":[{"name":"url","description":"The websocket url.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"subscription","description":"The websocket message to notify of a new subscription.","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"maxDataAgeSeconds","description":"Minimum amount of time required between when the horses are taking out.","label":"optional","type":"int32","longType":"int32","fullType":"int32","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""},{"name":"filter","description":"Incoming message JSONPath filter.\\n/ Example: \\"$[?(@.channel == \'ticker\' && @.market == \'BTC/USD\')]\\"","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":false,"oneofdecl":"","defaultValue":""}],"id":"websocket-task","permalink":"protos/WebsocketTask"},{"name":"XStepPriceTask","longName":"OracleJob.XStepPriceTask","fullName":".OracleJob.XStepPriceTask","description":"","hasExtensions":false,"hasFields":true,"hasOneofs":true,"extensions":[],"fields":[{"name":"stepJob","description":"median task containing the job definitions to fetch the STEP/USD price","label":"optional","type":"[MedianTask](/api/protos/MedianTask)","longType":"OracleJob.MedianTask","fullType":"OracleJob.MedianTask","ismap":false,"isoneof":true,"oneofdecl":"StepSource","defaultValue":""},{"name":"stepAggregatorPubkey","description":"existing aggregator pubkey for STEP/USD","label":"optional","type":"string","longType":"string","fullType":"string","ismap":false,"isoneof":true,"oneofdecl":"StepSource","defaultValue":""}],"id":"x-step-price-task","permalink":"protos/XStepPriceTask"}]')}}]);