"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4412],{3905:(e,a,t)=>{t.d(a,{Zo:()=>u,kt:()=>g});var r=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),c=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},u=function(e){var a=c(e.components);return r.createElement(i.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),g=n,m=p["".concat(i,".").concat(g)]||p[g]||d[g]||o;return t?r.createElement(m,l(l({ref:a},u),{},{components:t})):r.createElement(m,l({ref:a},u))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,l=new Array(o);l[0]=p;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:n,l[1]=s;for(var c=2;c<o;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>l});var r=t(67294),n=t(86010);const o="tabItem_Ymn6";function l(e){let{children:a,hidden:t,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o,l),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>g});var r=t(83117),n=t(67294),o=t(86010),l=t(72389),s=t(67392),i=t(7094),c=t(12466);const u="tabList__CuJ",d="tabItem_LNqP";function p(e){var a,t;const{lazy:l,block:p,defaultValue:g,values:m,groupId:b,className:h}=e,f=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=m?m:f.map((e=>{let{props:{value:a,label:t,attributes:r}}=e;return{value:a,label:t,attributes:r}})),y=(0,s.l)(v,((e,a)=>e.value===a.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const w=null===g?g:null!=(a=null!=g?g:null==(t=f.find((e=>e.props.default)))?void 0:t.props.value)?a:f[0].props.value;if(null!==w&&!v.some((e=>e.value===w)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+w+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:k,setTabGroupChoices:x}=(0,i.U)(),[A,j]=(0,n.useState)(w),N=[],{blockElementScrollPositionUntilNextRender:Z}=(0,c.o5)();if(null!=b){const e=k[b];null!=e&&e!==A&&v.some((a=>a.value===e))&&j(e)}const O=e=>{const a=e.currentTarget,t=N.indexOf(a),r=v[t].value;r!==A&&(Z(a),j(r),null!=b&&x(b,String(r)))},T=e=>{var a;let t=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{var r;const a=N.indexOf(e.currentTarget)+1;t=null!=(r=N[a])?r:N[0];break}case"ArrowLeft":{var n;const a=N.indexOf(e.currentTarget)-1;t=null!=(n=N[a])?n:N[N.length-1];break}}null==(a=t)||a.focus()};return n.createElement("div",{className:(0,o.Z)("tabs-container",u)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},h)},v.map((e=>{let{value:a,label:t,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:A===a?0:-1,"aria-selected":A===a,key:a,ref:e=>N.push(e),onKeyDown:T,onClick:O},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":A===a})}),null!=t?t:a)}))),l?(0,n.cloneElement)(f.filter((e=>e.props.value===A))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},f.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==A})))))}function g(e){const a=(0,l.Z)();return n.createElement(p,(0,r.Z)({key:String(a)},e))}},35417:(e,a,t)=>{t.d(a,{Z:()=>P});var r=t(86886),n=t(67294),o=t(44267),l=t(15861),s=t(21519),i=t(80102),c=t(83117),u=t(86010),d=t(94780),p=t(33616),g=t(90948),m=t(34867);function b(e){return(0,m.Z)("MuiCardHeader",e)}const h=(0,t(1588).Z)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var f=t(85893);const v=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],y=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,a)=>(0,c.Z)({[`& .${h.title}`]:a.title,[`& .${h.subheader}`]:a.subheader},a.root)})({display:"flex",alignItems:"center",padding:16}),w=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,a)=>a.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),k=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,a)=>a.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),x=(0,g.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,a)=>a.content})({flex:"1 1 auto"}),A=n.forwardRef((function(e,a){const t=(0,p.Z)({props:e,name:"MuiCardHeader"}),{action:r,avatar:n,className:o,component:s="div",disableTypography:g=!1,subheader:m,subheaderTypographyProps:h,title:A,titleTypographyProps:j}=t,N=(0,i.Z)(t,v),Z=(0,c.Z)({},t,{component:s,disableTypography:g}),O=(e=>{const{classes:a}=e;return(0,d.Z)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},b,a)})(Z);let T=A;null==T||T.type===l.Z||g||(T=(0,f.jsx)(l.Z,(0,c.Z)({variant:n?"body2":"h5",className:O.title,component:"span",display:"block"},j,{children:T})));let E=m;return null==E||E.type===l.Z||g||(E=(0,f.jsx)(l.Z,(0,c.Z)({variant:n?"body2":"body1",className:O.subheader,color:"text.secondary",component:"span",display:"block"},h,{children:E}))),(0,f.jsxs)(y,(0,c.Z)({className:(0,u.Z)(O.root,o),as:s,ref:a,ownerState:Z},N,{children:[n&&(0,f.jsx)(w,{className:O.avatar,ownerState:Z,children:n}),(0,f.jsxs)(x,{className:O.content,ownerState:Z,children:[T,E]}),r&&(0,f.jsx)(k,{className:O.action,ownerState:Z,children:r})]}))}));var j=t(44073),N=t(39960),Z=t(13264),O=t(92949);const T=(0,Z.Z)(j.Z)((e=>{let{theme:a,dark:t}=e;return{display:"flex",flexDirection:"row",justifyItems:"baseline",background:t?"rgba(42, 56, 68, 1)":"rgba(255, 255, 255, 0.6)",border:(t?.15:.1)+"rem solid var(--ifm-navbar-link-color)",borderRadius:"13.2px",boxShadow:"0 6px 7px 5px rgba(107 107 107, 0.03)",boxSizing:"border-box",width:"100%",height:"100%",verticalAlign:"middle",textDecoration:"none",[a.breakpoints.down(300)]:{paddingLeft:""},transition:"transform 0.15s ease-in-out","&&&:hover":{background:t?"rgba(42, 56, 68, 1)":"white",transform:"scale3d(1.05, 1.05, 1)"}}})),E=(0,Z.Z)(A)((e=>{let{theme:a}=e;return{display:"flex",maxHeight:"96px"}}));function S(e){let{title:a,image:t,imageDark:r,description:i,to:c}=e;const{colorMode:u}=(0,O.I)();return n.createElement(N.Z,{href:c,style:{textDecoration:"none"}},n.createElement(T,{dark:"dark"===u?1:0},n.createElement(o.Z,{sx:{height:"100%",width:"100%"}},n.createElement(E,{avatar:n.createElement("div",{style:{height:48,width:48,display:"flex",alignItems:"center",justifyContent:"center"}},"dark"===u&&r?r:t),title:a,titleTypographyProps:{fontSize:"1.25rem",color:"var(--ifm-navbar-link-color)",fontWeight:"var(--ifm-font-weight-bold)"}}),i?n.createElement(n.Fragment,null,n.createElement(s.Z,{sx:{marginBottom:"1rem"}}),n.createElement(l.Z,{variant:"body2",color:"textSecondary",component:"p",sx:{color:"var(--ifm-navbar-link-color)",fontSize:"1.1rem"}},i)):n.createElement(n.Fragment,null))))}function P(e){let{items:a,cols:t}=e;return n.createElement(r.ZP,{container:!0,spacing:3},a.map((e=>n.createElement(r.ZP,{item:!0,xs:12,md:6,lg:12/(null!=t?t:2)},n.createElement(S,{title:e.title,image:e.image,imageDark:e.imageDark,to:e.to,description:e.description})))))}},42604:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>u,default:()=>b,frontMatter:()=>c,metadata:()=>d,toc:()=>g});var r=t(83117),n=(t(67294),t(3905)),o=t(65488),l=t(85162),s=t(35417),i=t(44996);const c={sidebar_position:10,slug:".",title:"@switchboard-xyz/solana.js"},u=void 0,d={unversionedId:"solana/dev/javascript/solana.js",id:"solana/dev/javascript/solana.js",title:"@switchboard-xyz/solana.js",description:"GitHub&nbsp;&nbsp;",source:"@site/docs/solana/dev/javascript/solana.js.mdx",sourceDirName:"solana/dev/javascript",slug:"/solana/dev/javascript/",permalink:"/solana/dev/javascript/",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,slug:".",title:"@switchboard-xyz/solana.js"},sidebar:"solana",previous:{title:"Sbv2 CLI",permalink:"/solana/dev/cli"},next:{title:"Feed Parser",permalink:"/solana/dev/javascript/examples/feed-parser"}},p={},g=[{value:"Quick Links",id:"quick-links",level:2},{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Load the Switchboard Program",id:"load-the-switchboard-program",level:3},{value:"Create a queue",id:"create-a-queue",level:3},{value:"Add an oracle",id:"add-an-oracle",level:3},{value:"Add a data feed",id:"add-a-data-feed",level:3},{value:"Update a Data Feed",id:"update-a-data-feed",level:3},{value:"Read a Data Feed",id:"read-a-data-feed",level:3},{value:"History Buffer",id:"history-buffer",level:3},{value:"Watch Switchboard",id:"watch-switchboard",level:3}],m={toc:g};function b(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,r.Z)({},m,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/solana.js/tree/main/libraries/ts"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/--181717?logo=github&logoColor=ffffff",alt:"GitHub"})),"\xa0","\xa0","\n",(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@switchboard-xyz/solana.js"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@switchboard-xyz/solana.js",alt:"npm"})),"\xa0","\xa0","\n",(0,n.kt)("a",{parentName:"p",href:"https://twitter.com/switchboardxyz"},(0,n.kt)("img",{parentName:"a",src:"https://badgen.net/twitter/follow/switchboardxyz",alt:"twitter"})),"\xa0","\xa0"),(0,n.kt)("p",null,"A library of utility functions to interact with the Switchboardv2 program"),(0,n.kt)("h2",{id:"quick-links"},"Quick Links"),(0,n.kt)(s.Z,{cols:2,items:[{to:"https://github.com/switchboard-xyz/sbv2-solana/tree/main/javascript/solana.js",title:"Github",description:"View the Github repo",image:(0,n.kt)("img",{src:(0,i.Z)("/img/icons/github/light.svg")}),imageDark:(0,n.kt)("img",{src:(0,i.Z)("/img/icons/github/dark.svg")})},{to:"https://docs.switchboard.xyz/api/@switchboard-xyz/solana.js/",title:"Typedocs",description:"View the Typedocs",image:(0,n.kt)("img",{src:(0,i.Z)("/img/icons/typedoc/logo.svg")}),imageDark:(0,n.kt)("img",{src:(0,i.Z)("/img/icons/typedoc/logo.svg")})}],mdxType:"RoundedCardGroup"}),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,n.kt)(l.Z,{value:"npm",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @switchboard-xyz/solana.js\n"))),(0,n.kt)(l.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @switchboard-xyz/solana.js\n")))),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("h3",{id:"load-the-switchboard-program"},"Load the Switchboard Program"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { Connection } from "@solana/web3.js";\nimport {\n  SwitchboardProgram,\n  TransactionObject,\n} from "@switchboard-xyz/solana.js";\n\nconst program = await SwitchboardProgram.load(\n  "mainnet-beta",\n  new Connection("https://api.mainnet-beta.solana.com"),\n  payerKeypair /** Optional, READ-ONLY if not provided */\n);\n')),(0,n.kt)("h3",{id:"create-a-queue"},"Create a queue"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { QueueAccount } from "@switchboard-xyz/solana.js";\n\nconst [queueAccount, txnSignature] = await QueueAccount.create(program, {\n  name: "My Queue",\n  metadata: "Top Secret",\n  queueSize: 100,\n  reward: 0.00001337,\n  minStake: 10,\n  oracleTimeout: 60,\n  slashingEnabled: false,\n  unpermissionedFeeds: true,\n  unpermissionedVrf: true,\n  enableBufferRelayers: false,\n});\nconst queue = await queueAccount.loadData();\n')),(0,n.kt)("h3",{id:"add-an-oracle"},"Add an oracle"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { QueueAccount } from "@switchboard-xyz/solana.js";\n\nconst queueAccount = new QueueAccount(program, queuePubkey);\n\nconst [oracleAccount, oracleInitSignature] = await queueAccount.createOracle({\n  name: "My Oracle",\n  metadata: "Oracle #1",\n  stakeAmount: 10,\n});\nconst oracle = await oracleAccount.loadData();\n\nawait oracleAccount.heartbeat();\n')),(0,n.kt)("h3",{id:"add-a-data-feed"},"Add a data feed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { QueueAccount } from "@switchboard-xyz/solana.js";\n\nconst queueAccount = new QueueAccount(program, queuePubkey);\n\nconst [aggregatorAccount, aggregatorInitSignatures] =\n  await queueAccount.createFeed({\n    batchSize: 1,\n    minRequiredOracleResults: 1,\n    minRequiredJobResults: 1,\n    minUpdateDelaySeconds: 60,\n    fundAmount: 2.5, // deposit 2.5 wSOL into the leaseAccount escrow\n    jobs: [\n      { pubkey: jobAccount.publicKey },\n      {\n        weight: 2,\n        data: OracleJob.encodeDelimited(\n          OracleJob.fromObject({\n            tasks: [\n              {\n                valueTask: {\n                  value: 1,\n                },\n              },\n            ],\n          })\n        ).finish(),\n      },\n    ],\n  });\nconst aggregator = await aggregatorAccount.loadData();\n')),(0,n.kt)("h3",{id:"update-a-data-feed"},"Update a Data Feed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { AggregatorAccount } from "@switchboard-xyz/solana.js";\n\nconst aggregatorAccount = new AggregatorAccount(program, aggregatorPubkey);\n\nawait aggregatorAccount.openRound();\n')),(0,n.kt)("h3",{id:"read-a-data-feed"},"Read a Data Feed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import Big from "big.js";\nimport { AggregatorAccount } from "@switchboard-xyz/solana.js";\n\nconst aggregatorAccount = new AggregatorAccount(program, aggregatorPubkey);\n\nconst result: Big | null = await aggregatorAccount.fetchLatestValue();\nif (result === null) {\n  throw new Error("Aggregator holds no value");\n}\nconsole.log(result.toString());\n')),(0,n.kt)("h3",{id:"history-buffer"},"History Buffer"),(0,n.kt)("p",null,"Optionally, add a history buffer to your feed to store the last N historical\nsamples"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import {\n  AggregatorAccount,\n  AggregatorHistoryBuffer,\n} from "@switchboard-xyz/solana.js";\n\nconst aggregatorAccount = new AggregatorAccount(program, aggregatorPubkey);\nconst aggregator = await aggregatorAccount.loadData();\n\nconst [historyBuffer, addHistorySignature] =\n  await AggregatorHistoryBuffer.create(program, {\n    aggregatorAccount,\n    maxSamples: 10000,\n  });\nconst history = await historyBuffer.loadData();\n')),(0,n.kt)("h3",{id:"watch-switchboard"},"Watch Switchboard"),(0,n.kt)("p",null,"Setup a websocket listener to invoke a callback whenever an aggregator is\nupdated"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import Big from "big.js";\nimport { AggregatorAccount } from "@switchboard-xyz/solana.js";\n\nconst aggregatorAccount = new AggregatorAccount(program, aggregatorPubkey);\n\nconst ws = aggregatorAccount.onChange((aggregator) => {\n  const result = AggregatorAccount.decodeLatestValue(aggregator);\n  if (result !== null) {\n    console.log(result.toString());\n  }\n});\n')))}b.isMDXComponent=!0}}]);