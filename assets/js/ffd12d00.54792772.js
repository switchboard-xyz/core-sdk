"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57690],{88491:(e,t,n)=>{n.d(t,{zY:()=>r,l1:()=>i,Au:()=>o});var a=n(49231),l=n(15733);const r=e=>{const{enumb:t}=e,n=()=>a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Number"),a.createElement("th",null,"Description"))),l=()=>a.createElement("tbody",null,t.values.map((e=>a.createElement("tr",{key:e.name},a.createElement("td",null,a.createElement("code",null,e.name)),a.createElement("td",null,a.createElement("code",null,e.number)),a.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return a.createElement(a.Fragment,null,a.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),a.createElement("table",null,a.createElement(n,null),a.createElement(l,null)))},s=e=>{const{fields:t}=e,n=()=>a.createElement("thead",null,a.createElement("tr",null,a.createElement("th",null,"Name"),a.createElement("th",null,"Type"),a.createElement("th",null,"Description"))),r=e=>{let{field:t}=e;const n=a.createElement("code",null,t.longType);return void 0===t.typeLink?n:a.createElement(l.Z,{to:t.typeLink},n)},s=()=>a.createElement("tbody",null,t.map((e=>a.createElement("tr",{key:e.name},a.createElement("td",null,a.createElement("code",null,e.name)),a.createElement("td",null,a.createElement(r,{field:e})),a.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return a.createElement("table",null,a.createElement(n,null),a.createElement(s,null))},o=e=>{const{message:t}=e;return a.createElement(a.Fragment,null,a.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),a.createElement(s,{fields:t.fields}))};var c=n(62791),m=n(17558);const i=e=>{(0,c.Z)();return a.createElement(a.Fragment,null,a.createElement("h3",null,e.title),a.createElement("p",null,e.description),a.createElement("p",null,a.createElement("strong",null,"Input: "),e.input||"N/A",e.inputSample?a.createElement(a.Fragment,null,a.createElement("br",null),e.inputSample):a.createElement(a.Fragment,null)),a.createElement(m.Z,{metastring:"",title:e.subtitle,language:"json"},JSON.stringify({name:e.title,tasks:e.tasks},void 0,2)),a.createElement("p",null,a.createElement("strong",null,"Output: "),e.output||"N/A",e.outputSample?a.createElement(a.Fragment,null,a.createElement("br",null),e.outputSample):a.createElement(a.Fragment,null)))}},50072:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>k,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var a=n(48041),l=(n(49231),n(54852)),r=n(88491);const s={title:"CronParseTask",hide_title:!0},o=void 0,c={unversionedId:"tasks/CronParseTask",id:"tasks/CronParseTask",title:"CronParseTask",description:"CronParseTask",source:"@site/docs/tasks/CronParseTask.mdx",sourceDirName:"tasks",slug:"/tasks/CronParseTask",permalink:"/tasks/CronParseTask",draft:!1,tags:[],version:"current",frontMatter:{title:"CronParseTask",hide_title:!0},sidebar:"publisher",previous:{title:"ConditionalTask",permalink:"/tasks/ConditionalTask"},next:{title:"DefiKingdomsTask",permalink:"/tasks/DefiKingdomsTask"}},m={},i=[{value:"<code>CronParseTask</code>",id:"cronparsetask",level:2},{value:"Messages",id:"messages",level:2},{value:"<code>CronParseTask</code>",id:"cronparsetask-1",level:3},{value:"Enums",id:"enums",level:2},{value:"<code>CronParseTask.ClockType</code>",id:"cronparsetaskclocktype",level:3}],u={toc:i},p="wrapper";function k(e){let{components:t,...n}=e;return(0,l.kt)(p,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"cronparsetask"},(0,l.kt)("inlineCode",{parentName:"h2"},"CronParseTask")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"path")," CronParseTask")),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},(0,l.kt)("strong",{parentName:"em"},"package")," CronParseTask")),(0,l.kt)("p",null,"return a timestamp from a crontab instruction"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"messages"},"Messages"),(0,l.kt)("h3",{id:"cronparsetask-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"CronParseTask")),(0,l.kt)(r.Au,{key:0,message:{name:"CronParseTask",longName:"CronParseTask",fullName:".CronParseTask",description:"return a timestamp from a crontab instruction",hasExtensions:!1,hasFields:!0,hasOneofs:!1,extensions:[],fields:[{name:"cron_pattern",description:"the cron pattern to parse",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"clock_offset",description:"the timestamp offset \nto calculate the next run",label:"optional",type:"int32",longType:"int32",fullType:"int32",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""},{name:"clock",description:"",label:"optional",type:"ClockType",longType:"CronParseTask.ClockType",fullType:"CronParseTask.ClockType",ismap:!1,isoneof:!1,oneofdecl:"",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"enums"},"Enums"),(0,l.kt)("h3",{id:"cronparsetaskclocktype"},(0,l.kt)("inlineCode",{parentName:"h3"},"CronParseTask.ClockType")),(0,l.kt)(r.zY,{key:0,enumb:{name:"ClockType",longName:"CronParseTask.ClockType",fullName:".CronParseTask.ClockType",description:"which type of clock to use",values:[{name:"ORACLE",number:"0",description:""},{name:"SYSCLOCK",number:"1",description:""}]},mdxType:"ProtoEnum"}),(0,l.kt)("hr",null))}k.isMDXComponent=!0}}]);