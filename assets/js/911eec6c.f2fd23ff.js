"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[44337],{88491:(e,t,n)=>{n.d(t,{zY:()=>s,l1:()=>m,Au:()=>o});var l=n(49231),a=n(15733);const s=e=>{const{enumb:t}=e,n=()=>l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Number"),l.createElement("th",null,"Description"))),a=()=>l.createElement("tbody",null,t.values.map((e=>l.createElement("tr",{key:e.name},l.createElement("td",null,l.createElement("code",null,e.name)),l.createElement("td",null,l.createElement("code",null,e.number)),l.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return l.createElement(l.Fragment,null,l.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),l.createElement("table",null,l.createElement(n,null),l.createElement(a,null)))},r=e=>{const{fields:t}=e,n=()=>l.createElement("thead",null,l.createElement("tr",null,l.createElement("th",null,"Name"),l.createElement("th",null,"Type"),l.createElement("th",null,"Description"))),s=e=>{let{field:t}=e;const n=l.createElement("code",null,t.longType);return void 0===t.typeLink?n:l.createElement(a.Z,{to:t.typeLink},n)},r=()=>l.createElement("tbody",null,t.map((e=>l.createElement("tr",{key:e.name},l.createElement("td",null,l.createElement("code",null,e.name)),l.createElement("td",null,l.createElement(s,{field:e})),l.createElement("td",{style:{whiteSpace:"pre-wrap"}},e.description)))));return l.createElement("table",null,l.createElement(n,null),l.createElement(r,null))},o=e=>{const{message:t}=e;return l.createElement(l.Fragment,null,l.createElement("p",{style:{whiteSpace:"pre-wrap"}},t.description),l.createElement(r,{fields:t.fields}))};var p=n(59415),c=n(17558);const m=e=>{(0,p.Z)();return l.createElement(l.Fragment,null,l.createElement("h3",null,e.title),l.createElement("p",null,e.description),l.createElement("p",null,l.createElement("strong",null,"Input: "),e.input||"N/A",e.inputSample?l.createElement(l.Fragment,null,l.createElement("br",null),e.inputSample):l.createElement(l.Fragment,null)),l.createElement(c.Z,{metastring:"",title:e.subtitle,language:"json"},JSON.stringify({name:e.title,tasks:e.tasks},void 0,2)),l.createElement("p",null,l.createElement("strong",null,"Output: "),e.output||"N/A",e.outputSample?l.createElement(l.Fragment,null,l.createElement("br",null),e.outputSample):l.createElement(l.Fragment,null)))}},78793:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>p,toc:()=>m});var l=n(48041),a=(n(49231),n(54852)),s=n(88491);const r={title:"SplTokenParseTask",hide_title:!0},o=void 0,p={unversionedId:"tasks/SplTokenParseTask",id:"tasks/SplTokenParseTask",title:"SplTokenParseTask",description:"SplTokenParseTask",source:"@site/docs/tasks/SplTokenParseTask.mdx",sourceDirName:"tasks",slug:"/tasks/SplTokenParseTask",permalink:"/tasks/SplTokenParseTask",draft:!1,tags:[],version:"current",frontMatter:{title:"SplTokenParseTask",hide_title:!0},sidebar:"publisher",previous:{title:"SplStakePoolTask",permalink:"/tasks/SplStakePoolTask"},next:{title:"SubtractTask",permalink:"/tasks/SubtractTask"}},c={},m=[{value:"<code>SplTokenParseTask</code>",id:"spltokenparsetask",level:2},{value:"Messages",id:"messages",level:2},{value:"<code>SplTokenParseTask</code>",id:"spltokenparsetask-1",level:3}],i={toc:m},u="wrapper";function k(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,l.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"spltokenparsetask"},(0,a.kt)("inlineCode",{parentName:"h2"},"SplTokenParseTask")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"path")," SplTokenParseTask")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},(0,a.kt)("strong",{parentName:"em"},"package")," SplTokenParseTask")),(0,a.kt)("p",null,"Fetch the JSON representation of an SPL token mint."),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"messages"},"Messages"),(0,a.kt)("h3",{id:"spltokenparsetask-1"},(0,a.kt)("inlineCode",{parentName:"h3"},"SplTokenParseTask")),(0,a.kt)(s.Au,{key:0,message:{name:"SplTokenParseTask",longName:"SplTokenParseTask",fullName:".SplTokenParseTask",description:"Fetch the JSON representation of an SPL token mint.",hasExtensions:!1,hasFields:!0,hasOneofs:!0,extensions:[],fields:[{name:"token_account_address",description:"The publicKey of a token account to fetch the mintInfo for.",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"AccountAddress",defaultValue:""},{name:"mint_address",description:"The publicKey of the token mint address.",label:"optional",type:"string",longType:"string",fullType:"string",ismap:!1,isoneof:!0,oneofdecl:"AccountAddress",defaultValue:""}]},mdxType:"ProtoMessage"}),(0,a.kt)("hr",null))}k.isMDXComponent=!0}}]);