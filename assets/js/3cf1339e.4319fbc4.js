"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9486],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,b=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},80546:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var n=r(83117),a=(r(67294),r(3905));const o={sidebar_position:1,slug:".",title:"Background"},i="Background",s={unversionedId:"background",id:"background",title:"Background",description:"A Switchboard oracle is a Node.js container that sits between the Solana",source:"@site/oracle-operator/background.mdx",sourceDirName:".",slug:"/",permalink:"/sbv2-core/oracles/",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,slug:".",title:"Background"},sidebar:"tutorialSidebar",next:{title:"Configuration",permalink:"/sbv2-core/oracles/config"}},l={},c=[{value:"Staking",id:"staking",level:2},{value:"Heartbeat",id:"heartbeat",level:2},{value:"Metrics",id:"metrics",level:2},{value:"Cost &amp; Reward Estimations",id:"cost--reward-estimations",level:2},{value:"Hardware Requirements",id:"hardware-requirements",level:2}],u=(d="OracleMetrics",function(e){return console.warn("Component "+d+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var d;const p={toc:c};function m(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"background"},"Background"),(0,a.kt)("p",null,"A Switchboard oracle is a Node.js container that sits between the Solana\nblockchain and the internet and waits for update requests from an oracle queue.\nAn oracle queue assigns updates to oracles in a round robin fashion."),(0,a.kt)("p",null,"An oracle account is a program derived address (PDA) between the oracle queue\nit\u2019s being initialized for, as well as the oracles staking wallet. Before an\noracle is granted permissions to use a queue, it must transfer the minimum stake\namount, set by the queue, to its staking wallet."),(0,a.kt)("h2",{id:"staking"},"Staking"),(0,a.kt)("p",null,"An oracle is required to transfer ",(0,a.kt)("inlineCode",{parentName:"p"},"queue.minStake")," tokens to its staking wallet,\n",(0,a.kt)("inlineCode",{parentName:"p"},"oracle.tokenAccount"),", before being granted queue permissions. The minStake acts\nas an insurance policy to entice honest oracle behavior."),(0,a.kt)("h2",{id:"heartbeat"},"Heartbeat"),(0,a.kt)("p",null,"An oracle is required to heartbeat on-chain in order to join the queue and be\nassigned update request. An oracle must heartbeat before the queue's specified\n",(0,a.kt)("inlineCode",{parentName:"p"},"queue.oracleTimeout")," or it will be removed from the queue by the queue's\ngarbage collector."),(0,a.kt)("h2",{id:"metrics"},"Metrics"),(0,a.kt)("p",null,"The oracle also tracks its performance, ",(0,a.kt)("inlineCode",{parentName:"p"},"oracle.metrics"),"."),(0,a.kt)(u,{mdxType:"OracleMetrics"}),(0,a.kt)("h2",{id:"cost--reward-estimations"},"Cost & Reward Estimations"),(0,a.kt)("p",null,"An oracle is required to submit an SaveResult transaction each time it updates a\nfeed, which incurs a cost of 5000 lamports. This fee is set by the Solana\nnetwork and is subject to change."),(0,a.kt)("p",null,"$T",(0,a.kt)("em",{parentName:"p"},"{perUpdate}=T"),"{queueReward} - T_{transactionCost}$"),(0,a.kt)("p",null,"where,"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"T")," is the raw token amount in base units (",(0,a.kt)("em",{parentName:"li"},"Ex: lamports, tGas, or satoshis"),")")),(0,a.kt)("p",null,"To estimate an oracles cost basis, you will need to know a queue's capacity\n(Oracles, Feeds, VRFs) and the average number of update request an oracle is\nassigned over a given time period."),(0,a.kt)("p",null,"You will also need to factor in the oracle's heartbeat cost, which is 5000\nlamports each. The number of heartbeats is dependent on its\n",(0,a.kt)("inlineCode",{parentName:"p"},"queue.oracleTimeout"),", which determines how often an oracle is required to\nheartbeat."),(0,a.kt)("h2",{id:"hardware-requirements"},"Hardware Requirements"),(0,a.kt)("p",null,"A Switchboard oracle should be hosted in a highly available environment with\nsome level of redundancy and fail over to prevent outages, although oracles are\nnot deducted for being offline."),(0,a.kt)("p",null,"At the very minimum a node should have:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"4gb RAM"),(0,a.kt)("li",{parentName:"ul"},"3.0 Ghz CPU"),(0,a.kt)("li",{parentName:"ul"},"100+ Mbps connection")))}m.isMDXComponent=!0}}]);