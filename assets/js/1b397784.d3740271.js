"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4102],{54852:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>m});var a=n(49231);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),d=c(n),p=r,m=d["".concat(l,".").concat(p)]||d[p]||u[p]||o;return n?a.createElement(m,i(i({ref:t},h),{},{components:n})):a.createElement(m,i({ref:t},h))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},35966:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(95634),r=(n(49231),n(54852));const o={title:"Switchboard V2 (pt.3) \u2014 Incentives",description:"",authors:["gallynaut"],tags:[],hide_table_of_contents:!0},i="Switchboard V2 (pt.3) \u2014 Incentives",s={permalink:"/blog/2021/11/03/Switchboard-V2-Incentives",source:"@site/blog/2021/11-03-Switchboard-V2-Incentives.mdx",title:"Switchboard V2 (pt.3) \u2014 Incentives",description:"",date:"2021-11-03T00:00:00.000Z",formattedDate:"November 3, 2021",tags:[],readingTime:9.485,hasTruncateMarker:!0,authors:[{name:"gallynaut",title:"Developer Relations",url:"https://twitter.com/gallynaut",imageURL:"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg",key:"gallynaut"}],frontMatter:{title:"Switchboard V2 (pt.3) \u2014 Incentives",description:"",authors:["gallynaut"],tags:[],hide_table_of_contents:!0},prevItem:{title:"Fair LP Token Oracles",permalink:"/blog/2022/01/20/Fair-LP-Token-Oracles"},nextItem:{title:"Switchboard V2 (pt.2)\u200a\u2014\u200aArchitecture and Data Flows",permalink:"/blog/2021/10/12/Switchboard-V2-Architecture-and-Data-Flows"}},l={authorsImageUrls:[void 0]},c=[{value:"Governance",id:"governance",level:2},{value:"Incentives",id:"incentives",level:2},{value:"Job Diversity",id:"job-diversity",level:3},{value:"Rate Limiting",id:"rate-limiting",level:3},{value:"Approving New Feeds",id:"approving-new-feeds",level:3},{value:"Extraneous Feeds",id:"extraneous-feeds",level:3},{value:"Oracle Incentives",id:"oracle-incentives",level:3},{value:"Slashing",id:"slashing",level:3},{value:"Conclusion",id:"conclusion",level:2}],h={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"When designing a decentralized protocol, it\u2019s not enough to ensure your code is\nwell tested \u2014 you must also align the various parties so no single entity can\ngame the system. Today\u2019s article will walk through the design of Switchboard V2\nand how incentives are aligned to minimize trust in the protocol. Check out some\nof our past articles for more background on Switchboard, and how it works."),(0,r.kt)("p",null,"Incentives are mechanisms to influence an individual or group to behave in a\ncertain manner. For example, tax cuts are a government incentive that reduces an\nentity\u2019s operating cost to promote spending. Similarly, many food delivery\ncompanies subsidize delivery fees to capture future market share. These are all\nextrinsic incentives because you expect some kind of reward for your actions.\nExtrinsic incentives can only get you so far; eventually the food delivery\ncompanies will need to turn a profit. Decentralized projects cannot operate in\nthe same manner as traditional companies where a single group can make the\ndecision to sacrifice profit for future market share. Instead the incentives\nmust be baked into the protocol and be known to all parties up front."),(0,r.kt)("p",null,"Switchboard was created to level the playing field and provide equal access to\non-chain data which allows anyone to suggest, approve, and update feeds. We hope\nthe community will be intrinsically motivated to support this vision and\nactively participate to bring this to fruition. Switchboard will never whitelist\nparticipants and will rely on the community to make improvements as the network\nmatures. The following paragraphs detail how Switchboard is designed and how the\ncommunity is able to tweak the protocol to align everyone\u2019s incentives."),(0,r.kt)("h2",{id:"governance"},"Governance"),(0,r.kt)("p",null,"Let\u2019s begin with the governance system. Switchboard is governed by its\nstakeholders via a democratic DAO (Decentralized Autonomous Organization).\nSwitchboard participants are free to propose changes that fall into two\ncategories: Protocol proposals and Queue proposals."),(0,r.kt)("p",null,"Protocol proposals impact the overall architecture of Switchboard and have\ndeeper impacts on the network. An example of this might be increasing the number\nof oracles a single queue can support or upgrading the on-chain program to add\nadditional features requested by the community. Protocol proposals impact all\nqueues on the network so changes should be carefully laid out and discussed\nbefore reaching consensus."),(0,r.kt)("p",null,"Queue proposals impact a single oracle queue and can change various queue\nparameters to help reach equilibrium between oracles and data feed updates. Some\nof these parameters include:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Minimum stake required for an Oracle to join the queue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Criteria for a data feed to be automatically approved to use the queue")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Admitting additional data feeds to use the queue\u2019s Oracle resources")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Slashing rates for misbehaving Oracles"))),(0,r.kt)("p",null,"Giving the users of the protocol a stake in the network (\u201cskin in the game\u201d)\naligns their incentives toward a common goal: providing permission-less on-chain\ndata for smart contract developers to reliably build upon. It is ",(0,r.kt)("strong",{parentName:"p"},"NOT")," in the\nbest interest of the switchboard community to implement changes that could\nweaken the protocol or allow oracles to report dishonest data. Therefore it is\nup to the community to remain an active participant and propose improvements\nthat align with the common goal and keep all parties happy."),(0,r.kt)("p",null,"Upon the launch of V2, the Switchboard DAO will provide at least three oracle\nqueues with varying levels of security based on the publisher\u2019s needs.\nSwitchboard is a permission-less network so anyone can spin up their own Oracle\nqueues and control these parameters themselves. This is especially useful for\nprojects needing data from private endpoints or projects needing more\ncentralized control over their data. The rest of this article will be focused on\nthe Switchboard DAO and how oracle queues will be managed by the community."),(0,r.kt)("p",null,"Initially, the Switchboard DAO quorum will consist of oracle operators as they\nare the most familiar with the protocol constraints. There is no shortage of\npotential data feeds that developers want on-chain, so it\u2019s the number of\noracles that will be the limiting factor as the network scales in the early\ndays. Oracle operators are best positioned to evaluate the impact of new feeds\nand how it may impact their oracle\u2019s performance or how changing oracle rewards\nmay entice their peers to game the system. It is important to keep the initial\nquorum smaller in the early days of the network as it allows changes to be\nimplemented faster. Future DAO proposals will expand the DAO and include the\nother network participants."),(0,r.kt)("h2",{id:"incentives"},"Incentives"),(0,r.kt)("p",null,"Switchboard at its fundamental level is a data provider for smart contracts.\nDevelopers expect to receive a single result that is sourced from multiple\nendpoints, confirmed by multiple oracles, and updated at a set interval. The\npublisher is usually an on-chain consumer of the data so they are responsible\nfor setting the data feed configuration up-front to meet their use cases. The\nfollowing paragraphs detail how the Switchboard protocol leverages incentives to\ngive developers more confidence in the final oracle result."),(0,r.kt)("h3",{id:"job-diversity"},"Job Diversity"),(0,r.kt)("p",null,"As we are all too familiar with, the classical web lacks redundancy meaning a\nsingle network failure can crash an entire corporation, as we saw with Facebook\na few weeks ago. This is not a concern for blockchains but being as Switchboard\nis the gateway between the two, it is up to the protocol to mitigate any outside\nnetwork disruptions. To deal with potential data sources being unreachable,\nSwitchboard incentivizes Curators to scour the internet and find redundant data\nsources. Switchboard will provide the initial, open source reference\nimplementation that will allow anyone to submit potential data sources into a\nregistry for the Publishers to aggregate and build data feeds from. In return,\ncurators are rewarded with a percentage of the fees generated from a data feed.\nThe goal is to give everyone a role in the network and reward them for improving\nthe integrity of the network. When building a data feed, publishers can also\nspecify the minimum number of endpoints that must respond before accepting a\nresult. This flexibility gives the publisher more control over how a result is\nderived and gives them more confidence in the protocol."),(0,r.kt)("h3",{id:"rate-limiting"},"Rate Limiting"),(0,r.kt)("p",null,"Requested data feed updates will often be hitting the same endpoint fairly\nfrequently (e.g. FTX.com). To mitigate rate limiting, some level of\npseudo-randomness jitter is introduced to the feed scheduler to prevent requests\nhitting the same endpoint at the exact configured update interval. This helps\nthe network optimize for the lowest queries per second (QPS) and distributes\nexternal requests more efficiently."),(0,r.kt)("h3",{id:"approving-new-feeds"},"Approving New Feeds"),(0,r.kt)("p",null,"Data feeds are added to the network by either a DAO vote or having a\nsufficiently long enough update interval. The update interval threshold is set\nby the DAO and ensures new feeds joining the network can only consume a finite\namount of oracle resources in a set timeframe."),(0,r.kt)("p",null,"Publishers are responsible for funding a lease contract which provides the\nupfront capital to reward oracle operators for processing their scheduled\nupdates. This up-front capital incentivizes publishers to only publish feeds\nthat are worthwhile and provide them some kind of value. A publisher is free to\npropose any feed and eat the capital cost, as long as the oracles are rewarded\nfor their work. The lease contract amount is proportional to the length a\npublisher expects to receive updates, the number of oracles processing a given\nfeed update, as well as the oracle rewards set by the DAO. Oracle rewards are an\nupfront agreement between the publisher and oracle operators and should remain\nstatic, at least in the initial DAO quorum where oracle operators could collude\nto raise prices. Publishers are free to choose a queue with a lower cost but\nthey may be sacrificing security so it\u2019s up to the publishers to find the right\nbalance."),(0,r.kt)("h3",{id:"extraneous-feeds"},"Extraneous Feeds"),(0,r.kt)("p",null,"There may be a need for multiple data feeds resolving the same value but needing\ndifferent configurations depending on the publisher\u2019s use case. For instance,\none feed may need a higher fidelity of confidence requiring a greater number of\noracle and job responses to dictate a final result, which in turn requires a\nhigher up-front capital cost for the publisher and could cause slower updates in\nthe event the set number of jobs fail to respond. Another feed may just need the\nclosest approximation as fast as possible. Switchboard\u2019s flexibility gives\npublishers a wide array of options to control how a value gets derived but like\nall products, a publisher\u2019s use case may change over time. In this event, a\npublisher may elect to extend another publisher\u2019s lease and spread the capital\ncost to multiple on-chain consumers. This results in the feeds with the most use\nhaving the lowest capital cost to the on-chain consumers. This also further\nincentivizes curators to find resilient endpoints that get used frequently. This\npositive feedback loop creates an environment where the strongest feeds get\nextended and the remaining fall off the stack."),(0,r.kt)("h3",{id:"oracle-incentives"},"Oracle Incentives"),(0,r.kt)("p",null,"Switchboard is an open network allowing anyone to run an oracle but there are\nmany reasons an oracle may be incentivized to game the system. For example, if\nwe know a smart contract is using a particular feed to calculate a collateral\nratio, an oracle could under-report the asset price and cause a liquidation or\ncause someone to not get the fair market rate for a trade. There\u2019s a myriad of\nreasons an oracle could try and cheat so careful consideration was given to\nincentivize honest oracle behavior."),(0,r.kt)("p",null,"Oracles are required to stake the set amount of capital specified by the Queue\u2019s\nDAO, which acts as an insurance policy to entice oracle operators to report\nhonest results. Each oracle queue can have different staking requirements to\ninfluence its security. If the staking requirement is set too low it could\nattract dishonest oracles, but if set too high oracles may find a better use of\ntheir capital elsewhere."),(0,r.kt)("p",null,"An oracle\u2019s reward for a given round is determined by how many oracles respond\nand the oracles response compared to the accepted, median result. Oracles are\nrewarded each time they submit a result and then reevaluated when an accepted\nresult has been accepted."),(0,r.kt)("p",null,"When a result has been accepted, the oracle rewards are redistributed to the\noracles that responded within the acceptable range. The median result filters\nthe outliers and means an attacker needs to control the majority of the assigned\noracles in order to skew a result. This is why increasing the oracle stake\nrequirements increases the security of the network because the attacker will\nneed more up-front capital to fund the attack. Oracle\u2019s get assigned to data\nfeeds in a round robin fashion with feeds scheduled at varying intervals and\noracle amounts so even if an attacker controls 10% of the oracles, there is no\nguarantee their oracles will get assigned to the same feed."),(0,r.kt)("h3",{id:"slashing"},"Slashing"),(0,r.kt)("p",null,"After the on-chain contract has accepted a result, it rewards the oracles who\nresponded within the acceptable range, which is set when the queue is\ninitialized. Any oracle who responded outside the acceptable range will be\nslashed and lose a portion of their staked capital. The slashing amount can be\nchanged by the DAO to further incentivize honest oracle behavior."),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"Switchboard was designed to let the community dictate the protocol parameters at\nthe protocol and oracle queue level to meet any developers use case. Stay tuned\nfor more information on the initial DAO implementation."))}u.isMDXComponent=!0}}]);