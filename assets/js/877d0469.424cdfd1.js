"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[25310],{93451:(e,t,r)=>{r.d(t,{Z:()=>i});var a=r(229),n=r(65137),o=r(43939),s=r(49231);const i=e=>{const{colorMode:t}=(0,n.I)();let r=(0,o.Z)("dark"===t&&e.darkImg?e.darkImg:e.img),i="inherit";e.lightBg&&"dark"!==t&&(i=e.lightBg),e.darkBg&&"dark"===t&&(i=e.darkBg);let c={};return e.sx&&(c={backgroundColor:i,m:"auto",display:"flex",...c,...e.sx}),s.createElement(a.Z,{component:"img",sx:c,src:r})}},79193:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>w,contentTitle:()=>k,default:()=>y,frontMatter:()=>p,metadata:()=>g,toc:()=>h});var a=r(48041),n=(r(49231),r(54852)),o=r(93451),s=r(68868);r(15733);const i={toc:[]},c="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},i,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Switchboard is a multi-chain oracle, currently deployed on Aptos, CoreDAO, NEAR,\nSolana, Starknet, and Sui. Each is a native implementation with subtle\ndifferences but the overall architecture remains the same. The top-level program\nstate account controls the token mint used for oracle rewards and data feed\nupdate costs for each queue."),(0,n.kt)("p",null,"Switchboard was architected to be permissionless and allow users to create and\nmanage their own Switchboard network. Each chain can support many oracle queues,\nwhich can have varrying levels of security and trust assumptions."))}u.isMDXComponent=!0;const d={toc:[]},l="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(l,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"An oracle queue is an independent realm of oracles, responsible for allocating\noracle resources for update requests from data feeds, randomness, or buffer\nrelayers. Oracle queue's act as an aggregator for on-chain consumers looking to\npublish data on-chain by specifying an upfront reward a requester is required to\npay when a new update is requested by an oracle. Oracles act as an off-chain\ncompute resource that can be utilized by on-chain programs needing a\ndecentralized way to source data."))}m.isMDXComponent=!0;const p={sidebar_position:1,title:"Overview",slug:"/network"},k=void 0,g={unversionedId:"network/overview",id:"network/overview",title:"Overview",description:"Program State",source:"@site/docs/network/overview.mdx",sourceDirName:"network",slug:"/network",permalink:"/network",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview",slug:"/network"},sidebar:"learn",next:{title:"Oracle Queue",permalink:"/queue"}},w={},h=[{value:"Program State",id:"program-state",level:2},{value:"Oracle Queues",id:"oracle-queues",level:2}],f={toc:h},v="wrapper";function y(e){let{components:t,...r}=e;return(0,n.kt)(v,(0,a.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"program-state"},"Program State"),(0,n.kt)(s.ZP,{container:!0,spacing:3,justifyContent:"center",alignItems:"center",mdxType:"Grid"},(0,n.kt)(s.ZP,{item:!0,md:4,sm:12,order:{xs:2,sm:1},mdxType:"Grid"},(0,n.kt)(u,{mdxType:"ProgramOverview"})),(0,n.kt)(s.ZP,{item:!0,md:8,sx:12,order:{xs:1,sm:2},mdxType:"Grid"},(0,n.kt)(o.Z,{img:"/img/L0_Architecture.png",sx:{display:"flex"},mdxType:"MarkdownImage"}))),(0,n.kt)("h2",{id:"oracle-queues"},"Oracle Queues"),(0,n.kt)(m,{mdxType:"QueueOverview"}),(0,n.kt)(o.Z,{img:"/img/L1_Queue_Functional.png",sx:{display:"flex"},mdxType:"MarkdownImage"}))}y.isMDXComponent=!0}}]);