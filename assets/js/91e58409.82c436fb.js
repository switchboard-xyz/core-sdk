"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1962],{55266:e=>{e.exports=JSON.parse('[{"id":"aptos-account-airdrop","permalink":"/cli/aptos/account/airdrop","topic":"aptos","command":"sbv2 aptos account airdrop","topics":["aptos","account","airdrop"],"markdown":"USAGE\\n  $ sbv2 aptos account airdrop --address <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--json] [-n <value>]\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -n, --amount=<value>  [default: 1000000] number of airdrops to request, 10_000 coins each\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --address=<value>     (required) HexString address of account to fund\\n  --networkId=<option>  [default: testnet] Aptos network to connect to\\n                        <options: devnet|testnet|mainnet>\\n  --programId=<value>   Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  request an airdrop\\n","usage":"sbv2 aptos account airdrop --address <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--json] [-n <value>]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-n, --amount=<value>","description":"[default: 1000000] number of airdrops to request, 10_000 coins each"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--address=<value>","description":"(required) HexString address of account to fund"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"request an airdrop"},{"id":"aptos-aggregator-add_job","permalink":"/cli/aptos/aggregator/add_job","topic":"aptos","command":"sbv2 aptos aggregator add job","topics":["aptos","aggregator","add","job"],"markdown":"USAGE\\n  $ sbv2 aptos aggregator add job AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> | --jobKey <value>]\\n    [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\\n\\nARGUMENTS\\n  AGGREGATORHEXSTRING  HexString address of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --jobDefinition=<value>  filesystem path of job json definition file\\n  --jobKey=<value>         public key of an existing job account to add to an aggregator\\n  --jobWeight=<value>      [default: 1] job weight\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the job account\\n  --name=<value>           name of the job account\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n\\nDESCRIPTION\\n  add a job to an aggregator\\n\\nALIASES\\n  $ sbv2 aptos aggregator job add\\n","usage":"sbv2 aptos aggregator add job AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> | --jobKey <value>]\\n    [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]","args":[{"arg":"AGGREGATORHEXSTRING","description":"HexString address of the aggregator"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--jobDefinition=<value>","description":"filesystem path of job json definition file"},{"flag":"--jobKey=<value>","description":"public key of an existing job account to add to an aggregator"},{"flag":"--jobWeight=<value>","description":"[default: 1] job weight"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the job account"},{"flag":"--name=<value>","description":"name of the job account"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"}],"description":"add a job to an aggregator","aliases":["sbv2 aptos aggregator job add"]},{"id":"aptos-aggregator-create","permalink":"/cli/aptos/aggregator/create","topic":"aptos","command":"sbv2 aptos aggregator create","topics":["aptos","aggregator","create"],"markdown":"USAGE\\n  $ sbv2 aptos aggregator create QUEUEHEXSTRING --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n\\nFLAGS\\n  -a, --authority=<value>      alternate named account that will be the authority for the oracle\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --batchSize=<value>          number of oracles requested for each open round call\\n  --crankAddress=<value>       optional, address of the crank to add the aggregator to\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --keypair=<value>            (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>           metadata of the aggregator for easier identification\\n  --minJobs=<value>            number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --networkId=<option>         [default: testnet] Aptos network to connect to\\n                               <options: devnet|testnet|mainnet>\\n  --new                        create account at new AptosAccount with authority set to --account\\n  --profileName=<value>        [default: default] If --keypair is pointing to a yaml file, provide an optional profile\\n                               to load. If none provided, default will be used\\n  --programId=<value>          Switchboard programId on the selected Aptos network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aptos aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 aptos create aggregator\\n","usage":"sbv2 aptos aggregator create QUEUEHEXSTRING --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the aggregator for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aptos aggregator for a given queue","aliases":["sbv2 aptos create aggregator"]},{"id":"aptos-aggregator-job_add","permalink":"/cli/aptos/aggregator/job_add","topic":"aptos","command":"sbv2 aptos aggregator job add","topics":["aptos","aggregator","job","add"],"markdown":"USAGE\\n  $ sbv2 aptos aggregator job add AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> | --jobKey <value>]\\n    [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\\n\\nARGUMENTS\\n  AGGREGATORHEXSTRING  HexString address of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --jobDefinition=<value>  filesystem path of job json definition file\\n  --jobKey=<value>         public key of an existing job account to add to an aggregator\\n  --jobWeight=<value>      [default: 1] job weight\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the job account\\n  --name=<value>           name of the job account\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n\\nDESCRIPTION\\n  add a job to an aggregator\\n\\nALIASES\\n  $ sbv2 aptos aggregator job add\\n","usage":"sbv2 aptos aggregator job add AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-a <value>] [--name <value> | --jobKey <value>]\\n    [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]","args":[{"arg":"AGGREGATORHEXSTRING","description":"HexString address of the aggregator"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--jobDefinition=<value>","description":"filesystem path of job json definition file"},{"flag":"--jobKey=<value>","description":"public key of an existing job account to add to an aggregator"},{"flag":"--jobWeight=<value>","description":"[default: 1] job weight"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the job account"},{"flag":"--name=<value>","description":"name of the job account"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"}],"description":"add a job to an aggregator","aliases":["sbv2 aptos aggregator job add"]},{"id":"aptos-aggregator-update","permalink":"/cli/aptos/aggregator/update","topic":"aptos","command":"sbv2 aptos aggregator update","topics":["aptos","aggregator","update"],"markdown":"USAGE\\n  $ sbv2 aptos aggregator update AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>]\\n\\nARGUMENTS\\n  AGGREGATORHEXSTRING  HexString address of the aggregator\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nDESCRIPTION\\n  request a new value on-chain for an aggregator\\n\\nALIASES\\n  $ sbv2 aptos update aggregator\\n","usage":"sbv2 aptos aggregator update AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>]","args":[{"arg":"AGGREGATORHEXSTRING","description":"HexString address of the aggregator"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"}],"description":"request a new value on-chain for an aggregator","aliases":["sbv2 aptos update aggregator"]},{"id":"aptos-crank-create","permalink":"/cli/aptos/crank/create","topic":"aptos","command":"sbv2 aptos crank create","topics":["aptos","crank","create"],"markdown":"USAGE\\n  $ sbv2 aptos crank create QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [--name <value>] [--metadata <value>] [--maxRows\\n    <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString of the oracle queue to create a crank for\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --maxRows=<value>      [default: 100] maximum number of rows on the crank\\n  --metadata=<value>     metadata of the queue for easier identification\\n  --name=<value>         name of the queue for easier identification\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --new                  create account at new AptosAccount with authority set to --account\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new crank\\n\\nALIASES\\n  $ sbv2 aptos create crank\\n","usage":"sbv2 aptos crank create QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [--name <value>] [--metadata <value>] [--maxRows\\n    <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString of the oracle queue to create a crank for"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--maxRows=<value>","description":"[default: 100] maximum number of rows on the crank"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new crank","aliases":["sbv2 aptos create crank"]},{"id":"aptos-crank-list","permalink":"/cli/aptos/crank/list","topic":"aptos","command":"sbv2 aptos crank list","topics":["aptos","crank","list"],"markdown":"USAGE\\n  $ sbv2 aptos crank list CRANKHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>] [-u\\n    <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --networkId=<option>  [default: testnet] Aptos network to connect to\\n                        <options: devnet|testnet|mainnet>\\n  --programId=<value>   Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  sort the crank\\n\\nALIASES\\n  $ sbv2 aptos list crank\\n","usage":"sbv2 aptos crank list CRANKHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>] [-u\\n    <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"sort the crank","aliases":["sbv2 aptos list crank"]},{"id":"aptos-crank-pop","permalink":"/cli/aptos/crank/pop","topic":"aptos","command":"sbv2 aptos crank pop","topics":["aptos","crank","pop"],"markdown":"USAGE\\n  $ sbv2 aptos crank pop CRANKHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  pop the crank\\n\\nALIASES\\n  $ sbv2 aptos pop crank\\n","usage":"sbv2 aptos crank pop CRANKHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"pop the crank","aliases":["sbv2 aptos pop crank"]},{"id":"aptos-crank-push","permalink":"/cli/aptos/crank/push","topic":"aptos","command":"sbv2 aptos crank push","topics":["aptos","crank","push"],"markdown":"USAGE\\n  $ sbv2 aptos crank push CRANKHEXSTRING --keypair <value> -a <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -a, --aggregatorHexString=<value>  (required) HexString address of the aggregator\\n  -h, --help                         Show CLI help.\\n  -s, --silent                       suppress cli prompts\\n  -u, --rpcUrl=<value>               alternate RPC url\\n  -v, --verbose                      log everything\\n  --keypair=<value>                  (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>               [default: testnet] Aptos network to connect to\\n                                     <options: devnet|testnet|mainnet>\\n  --profileName=<value>              [default: default] If --keypair is pointing to a yaml file, provide an optional\\n                                     profile to load. If none provided, default will be used\\n  --programId=<value>                Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  push an aggregator onto the crank\\n\\nALIASES\\n  $ sbv2 aptos push crank\\n","usage":"sbv2 aptos crank push CRANKHEXSTRING --keypair <value> -a <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -a, --aggregatorHexString=<value>","description":"(required) HexString address of the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"push an aggregator onto the crank","aliases":["sbv2 aptos push crank"]},{"id":"aptos-create-aggregator","permalink":"/cli/aptos/create/aggregator","topic":"aptos","command":"sbv2 aptos create aggregator","topics":["aptos","create","aggregator"],"markdown":"USAGE\\n  $ sbv2 aptos create aggregator QUEUEHEXSTRING --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n\\nFLAGS\\n  -a, --authority=<value>      alternate named account that will be the authority for the oracle\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --batchSize=<value>          number of oracles requested for each open round call\\n  --crankAddress=<value>       optional, address of the crank to add the aggregator to\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --keypair=<value>            (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>           metadata of the aggregator for easier identification\\n  --minJobs=<value>            number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --networkId=<option>         [default: testnet] Aptos network to connect to\\n                               <options: devnet|testnet|mainnet>\\n  --new                        create account at new AptosAccount with authority set to --account\\n  --profileName=<value>        [default: default] If --keypair is pointing to a yaml file, provide an optional profile\\n                               to load. If none provided, default will be used\\n  --programId=<value>          Switchboard programId on the selected Aptos network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aptos aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 aptos create aggregator\\n","usage":"sbv2 aptos create aggregator QUEUEHEXSTRING --keypair <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the aggregator for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aptos aggregator for a given queue","aliases":["sbv2 aptos create aggregator"]},{"id":"aptos-create-crank","permalink":"/cli/aptos/create/crank","topic":"aptos","command":"sbv2 aptos create crank","topics":["aptos","create","crank"],"markdown":"USAGE\\n  $ sbv2 aptos create crank QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [--name <value>] [--metadata <value>] [--maxRows\\n    <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString of the oracle queue to create a crank for\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --maxRows=<value>      [default: 100] maximum number of rows on the crank\\n  --metadata=<value>     metadata of the queue for easier identification\\n  --name=<value>         name of the queue for easier identification\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --new                  create account at new AptosAccount with authority set to --account\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new crank\\n\\nALIASES\\n  $ sbv2 aptos create crank\\n","usage":"sbv2 aptos create crank QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [--name <value>] [--metadata <value>] [--maxRows\\n    <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString of the oracle queue to create a crank for"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--maxRows=<value>","description":"[default: 100] maximum number of rows on the crank"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new crank","aliases":["sbv2 aptos create crank"]},{"id":"aptos-create-job","permalink":"/cli/aptos/create/job","topic":"aptos","command":"sbv2 aptos create job","topics":["aptos","create","job"],"markdown":"USAGE\\n  $ sbv2 aptos create job QUEUEHEXSTRING JOBDEFINITION --keypair <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name\\n    <value>] [--metadata <value>] [--new] [--weight <value>]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n  JOBDEFINITION   filesystem path to job definition\\n\\nFLAGS\\n  -a, --authority=<value>  alternate named account that will be the authority for the job account\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the job for easier identification\\n  --name=<value>           name of the job for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n  --weight=<value>         [default: 1] job weight to assign\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new job\\n\\nALIASES\\n  $ sbv2 aptos create job\\n","usage":"sbv2 aptos create job QUEUEHEXSTRING JOBDEFINITION --keypair <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name\\n    <value>] [--metadata <value>] [--new] [--weight <value>]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"},{"arg":"","description":"JOBDEFINITION"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the job account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the job for easier identification"},{"flag":"--name=<value>","description":"name of the job for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--weight=<value>","description":"[default: 1] job weight to assign GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new job","aliases":["sbv2 aptos create job"]},{"id":"aptos-create-oracle","permalink":"/cli/aptos/create/oracle","topic":"aptos","command":"sbv2 aptos create oracle","topics":["aptos","create","oracle"],"markdown":"USAGE\\n  $ sbv2 aptos create oracle QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n\\nFLAGS\\n  -a, --authority=<value>  alternate named account that will be the authority for the oracle\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the oracle for easier identification\\n  --name=<value>           name of the oracle for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a oracle for a given queue\\n\\nALIASES\\n  $ sbv2 aptos create oracle\\n","usage":"sbv2 aptos create oracle QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the oracle for easier identification"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a oracle for a given queue","aliases":["sbv2 aptos create oracle"]},{"id":"aptos-create-queue","permalink":"/cli/aptos/create/queue","topic":"aptos","command":"sbv2 aptos create queue","topics":["aptos","create","queue"],"markdown":"USAGE\\n  $ sbv2 aptos create queue --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--minStake\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate account HexString that will be the authority for the queue\\n  -h, --help               Show CLI help.\\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --enableBufferRelayers   enable oracles to fulfill buffer relayer requests\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --lockLeaseFunding       lock lease funding\\n  --metadata=<value>       metadata of the queue for easier identification\\n  --minStake=<value>       minimum stake required by an oracle to join the queue\\n  --name=<value>           name of the queue for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\\n  --slashingEnabled        permit slashing malicous oracles\\n  --unpermissionedFeeds    permit unpermissioned feeds\\n  --unpermissionedVrf      permit unpermissioned VRF accounts\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 aptos create queue\\n","usage":"sbv2 aptos create queue --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--minStake\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account HexString that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--enableBufferRelayers","description":"enable oracles to fulfill buffer relayer requests"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--lockLeaseFunding","description":"lock lease funding"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--minStake=<value>","description":"minimum stake required by an oracle to join the queue"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--slashingEnabled","description":"permit slashing malicous oracles"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds"},{"flag":"--unpermissionedVrf","description":"permit unpermissioned VRF accounts GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 aptos create queue"]},{"id":"aptos-job-create","permalink":"/cli/aptos/job/create","topic":"aptos","command":"sbv2 aptos job create","topics":["aptos","job","create"],"markdown":"USAGE\\n  $ sbv2 aptos job create QUEUEHEXSTRING JOBDEFINITION --keypair <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name\\n    <value>] [--metadata <value>] [--new] [--weight <value>]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n  JOBDEFINITION   filesystem path to job definition\\n\\nFLAGS\\n  -a, --authority=<value>  alternate named account that will be the authority for the job account\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the job for easier identification\\n  --name=<value>           name of the job for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n  --weight=<value>         [default: 1] job weight to assign\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new job\\n\\nALIASES\\n  $ sbv2 aptos create job\\n","usage":"sbv2 aptos job create QUEUEHEXSTRING JOBDEFINITION --keypair <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name\\n    <value>] [--metadata <value>] [--new] [--weight <value>]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"},{"arg":"","description":"JOBDEFINITION"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the job account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the job for easier identification"},{"flag":"--name=<value>","description":"name of the job for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--weight=<value>","description":"[default: 1] job weight to assign GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new job","aliases":["sbv2 aptos create job"]},{"id":"aptos-list-crank","permalink":"/cli/aptos/list/crank","topic":"aptos","command":"sbv2 aptos list crank","topics":["aptos","list","crank"],"markdown":"USAGE\\n  $ sbv2 aptos list crank CRANKHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>] [-u\\n    <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --networkId=<option>  [default: testnet] Aptos network to connect to\\n                        <options: devnet|testnet|mainnet>\\n  --programId=<value>   Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  sort the crank\\n\\nALIASES\\n  $ sbv2 aptos list crank\\n","usage":"sbv2 aptos list crank CRANKHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>] [-u\\n    <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"sort the crank","aliases":["sbv2 aptos list crank"]},{"id":"aptos-oracle-create","permalink":"/cli/aptos/oracle/create","topic":"aptos","command":"sbv2 aptos oracle create","topics":["aptos","oracle","create"],"markdown":"USAGE\\n  $ sbv2 aptos oracle create QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--new]\\n\\nARGUMENTS\\n  QUEUEHEXSTRING  HexString address of the queue\\n\\nFLAGS\\n  -a, --authority=<value>  alternate named account that will be the authority for the oracle\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --metadata=<value>       metadata of the oracle for easier identification\\n  --name=<value>           name of the oracle for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a oracle for a given queue\\n\\nALIASES\\n  $ sbv2 aptos create oracle\\n","usage":"sbv2 aptos oracle create QUEUEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--new]","args":[{"arg":"QUEUEHEXSTRING","description":"HexString address of the queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--metadata=<value>","description":"metadata of the oracle for easier identification"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a oracle for a given queue","aliases":["sbv2 aptos create oracle"]},{"id":"aptos-oracle-metrics","permalink":"/cli/aptos/oracle/metrics","topic":"aptos","command":"sbv2 aptos oracle metrics","topics":["aptos","oracle","metrics"],"markdown":"USAGE\\n  $ sbv2 aptos oracle metrics ORACLEHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--json]\\n\\nARGUMENTS\\n  ORACLEHEXSTRING  HexString address of the oracle\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --networkId=<option>  [default: testnet] Aptos network to connect to\\n                        <options: devnet|testnet|mainnet>\\n  --programId=<value>   Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  list oracle metrics\\n","usage":"sbv2 aptos oracle metrics ORACLEHEXSTRING [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--json]","args":[{"arg":"ORACLEHEXSTRING","description":"HexString address of the oracle"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"list oracle metrics"},{"id":"aptos-oracle-up","permalink":"/cli/aptos/oracle/up","topic":"aptos","command":"sbv2 aptos oracle up","topics":["aptos","oracle","up"],"markdown":"USAGE\\n  $ sbv2 aptos oracle up ORACLEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-d <value>] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>]\\n\\nARGUMENTS\\n  ORACLEHEXSTRING  HexString address of the oracle\\n\\nFLAGS\\n  -d, --switchboardDir=<value>  directory with switchboard.env to load a switchboard environment\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress docker logging\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --keypair=<value>             (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>          [default: testnet] Aptos network to connect to\\n                                <options: devnet|testnet|mainnet>\\n  --nodeImage=<value>           [default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up\\n  --profileName=<value>         [default: default] If --keypair is pointing to a yaml file, provide an optional profile\\n                                to load. If none provided, default will be used\\n  --programId=<value>           Switchboard programId on the selected Aptos network\\n  --releaseChannel=<option>     [default: testnet] the oracle release channel\\n                                <options: testnet|mainnet>\\n\\nDESCRIPTION\\n  start an aptos docker oracle\\n","usage":"sbv2 aptos oracle up ORACLEHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [-d <value>] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>]","args":[{"arg":"ORACLEHEXSTRING","description":"HexString address of the oracle"}],"flags":[{"flag":" -d, --switchboardDir=<value>","description":"directory with switchboard.env to load a switchboard environment"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress docker logging"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--nodeImage=<value>","description":"[default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--releaseChannel=<option>","description":"[default: testnet] the oracle release channel <options: testnet|mainnet>"}],"description":"start an aptos docker oracle"},{"id":"aptos-permission-create","permalink":"/cli/aptos/permission/create","topic":"aptos","command":"sbv2 aptos permission create","topics":["aptos","permission","create"],"markdown":"USAGE\\n  $ sbv2 aptos permission create GRANTER --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--profileName <value>] [--json] [--aggregator <value> | --oracle <value>] [--enable]\\n\\nARGUMENTS\\n  GRANTER  HexString of the oracle queue to create a permission for\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --aggregator=<value>   HexString of  the aggregator address to create a permission for\\n  --enable               whether to enable the permissions after creation\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --oracle=<value>       HexString of  the aggregator address to create a permission for\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new permission\\n","usage":"sbv2 aptos permission create GRANTER --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--profileName <value>] [--json] [--aggregator <value> | --oracle <value>] [--enable]","args":[{"arg":"GRANTER","description":"HexString of the oracle queue to create a permission for"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--aggregator=<value>","description":"HexString of the aggregator address to create a permission for"},{"flag":"--enable","description":"whether to enable the permissions after creation"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--oracle=<value>","description":"HexString of the aggregator address to create a permission for"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new permission"},{"id":"aptos-permission-set","permalink":"/cli/aptos/permission/set","topic":"aptos","command":"sbv2 aptos permission set","topics":["aptos","permission","set"],"markdown":"USAGE\\n  $ sbv2 aptos permission set GRANTER --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--profileName <value>] [--json] [--aggregator <value> | --oracle <value>] [--enable]\\n\\nARGUMENTS\\n  GRANTER  HexString of the oracle queue to create a permission for\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --aggregator=<value>   HexString of  the aggregator address to create a permission for\\n  --enable               whether to enable the permissions after creation\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --oracle=<value>       HexString of  the aggregator address to create a permission for\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new permission\\n","usage":"sbv2 aptos permission set GRANTER --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--profileName <value>] [--json] [--aggregator <value> | --oracle <value>] [--enable]","args":[{"arg":"GRANTER","description":"HexString of the oracle queue to create a permission for"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--aggregator=<value>","description":"HexString of the aggregator address to create a permission for"},{"flag":"--enable","description":"whether to enable the permissions after creation"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--oracle=<value>","description":"HexString of the aggregator address to create a permission for"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new permission"},{"id":"aptos-pop-crank","permalink":"/cli/aptos/pop/crank","topic":"aptos","command":"sbv2 aptos pop crank","topics":["aptos","pop","crank"],"markdown":"USAGE\\n  $ sbv2 aptos pop crank CRANKHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  pop the crank\\n\\nALIASES\\n  $ sbv2 aptos pop crank\\n","usage":"sbv2 aptos pop crank CRANKHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"pop the crank","aliases":["sbv2 aptos pop crank"]},{"id":"aptos-print","permalink":"/cli/aptos/print","topic":"aptos","command":"sbv2 aptos print","topics":["aptos","print"],"markdown":"USAGE\\n  $ sbv2 aptos print ACCOUNTTYPE ADDRESS [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--json]\\n\\nARGUMENTS\\n  ACCOUNTTYPE  (queue|aggregator|crank|oracle|permission|lease|job|state) account type to print\\n  ADDRESS      HexString address of the account to print\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --networkId=<option>  [default: testnet] Aptos network to connect to\\n                        <options: devnet|testnet|mainnet>\\n  --programId=<value>   Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an aptos account\\n\\nALIASES\\n  $ sbv2 aptos print\\n","usage":"sbv2 aptos print ACCOUNTTYPE ADDRESS [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId\\n    <value>] [-u <value>] [--json]","args":[{"arg":"ACCOUNTTYPE","description":"(queue|aggregator|crank|oracle|permission|lease|job|state) account type to print"},{"arg":"","description":"ADDRESS"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an aptos account","aliases":["sbv2 aptos print"]},{"id":"aptos-push-crank","permalink":"/cli/aptos/push/crank","topic":"aptos","command":"sbv2 aptos push crank","topics":["aptos","push","crank"],"markdown":"USAGE\\n  $ sbv2 aptos push crank CRANKHEXSTRING --keypair <value> -a <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json]\\n\\nARGUMENTS\\n  CRANKHEXSTRING  HexString address of the crank\\n\\nFLAGS\\n  -a, --aggregatorHexString=<value>  (required) HexString address of the aggregator\\n  -h, --help                         Show CLI help.\\n  -s, --silent                       suppress cli prompts\\n  -u, --rpcUrl=<value>               alternate RPC url\\n  -v, --verbose                      log everything\\n  --keypair=<value>                  (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>               [default: testnet] Aptos network to connect to\\n                                     <options: devnet|testnet|mainnet>\\n  --profileName=<value>              [default: default] If --keypair is pointing to a yaml file, provide an optional\\n                                     profile to load. If none provided, default will be used\\n  --programId=<value>                Switchboard programId on the selected Aptos network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  push an aggregator onto the crank\\n\\nALIASES\\n  $ sbv2 aptos push crank\\n","usage":"sbv2 aptos push crank CRANKHEXSTRING --keypair <value> -a <value> [-h] [-v] [-s] [--networkId\\n    devnet|testnet|mainnet] [--programId <value>] [-u <value>] [--profileName <value>] [--json]","args":[{"arg":"CRANKHEXSTRING","description":"HexString address of the crank"}],"flags":[{"flag":" -a, --aggregatorHexString=<value>","description":"(required) HexString address of the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"push an aggregator onto the crank","aliases":["sbv2 aptos push crank"]},{"id":"aptos-queue-create","permalink":"/cli/aptos/queue/create","topic":"aptos","command":"sbv2 aptos queue create","topics":["aptos","queue","create"],"markdown":"USAGE\\n  $ sbv2 aptos queue create --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--minStake\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate account HexString that will be the authority for the queue\\n  -h, --help               Show CLI help.\\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --enableBufferRelayers   enable oracles to fulfill buffer relayer requests\\n  --keypair=<value>        (required) Path to AptosAccount keypair or config.yaml file\\n  --lockLeaseFunding       lock lease funding\\n  --metadata=<value>       metadata of the queue for easier identification\\n  --minStake=<value>       minimum stake required by an oracle to join the queue\\n  --name=<value>           name of the queue for easier identification\\n  --networkId=<option>     [default: testnet] Aptos network to connect to\\n                           <options: devnet|testnet|mainnet>\\n  --new                    create account at new AptosAccount with authority set to --account\\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\\n  --profileName=<value>    [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                           load. If none provided, default will be used\\n  --programId=<value>      Switchboard programId on the selected Aptos network\\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\\n  --slashingEnabled        permit slashing malicous oracles\\n  --unpermissionedFeeds    permit unpermissioned feeds\\n  --unpermissionedVrf      permit unpermissioned VRF accounts\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 aptos create queue\\n","usage":"sbv2 aptos queue create --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet] [--programId <value>]\\n    [-u <value>] [--profileName <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--minStake\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers] [--lockLeaseFunding] [--new]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account HexString that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--enableBufferRelayers","description":"enable oracles to fulfill buffer relayer requests"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--lockLeaseFunding","description":"lock lease funding"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--minStake=<value>","description":"minimum stake required by an oracle to join the queue"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--new","description":"create account at new AptosAccount with authority set to --account"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--slashingEnabled","description":"permit slashing malicous oracles"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds"},{"flag":"--unpermissionedVrf","description":"permit unpermissioned VRF accounts GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 aptos create queue"]},{"id":"aptos-update-aggregator","permalink":"/cli/aptos/update/aggregator","topic":"aptos","command":"sbv2 aptos update aggregator","topics":["aptos","update","aggregator"],"markdown":"USAGE\\n  $ sbv2 aptos update aggregator AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>]\\n\\nARGUMENTS\\n  AGGREGATORHEXSTRING  HexString address of the aggregator\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --keypair=<value>      (required) Path to AptosAccount keypair or config.yaml file\\n  --networkId=<option>   [default: testnet] Aptos network to connect to\\n                         <options: devnet|testnet|mainnet>\\n  --profileName=<value>  [default: default] If --keypair is pointing to a yaml file, provide an optional profile to\\n                         load. If none provided, default will be used\\n  --programId=<value>    Switchboard programId on the selected Aptos network\\n\\nDESCRIPTION\\n  request a new value on-chain for an aggregator\\n\\nALIASES\\n  $ sbv2 aptos update aggregator\\n","usage":"sbv2 aptos update aggregator AGGREGATORHEXSTRING --keypair <value> [-h] [-v] [-s] [--networkId devnet|testnet|mainnet]\\n    [--programId <value>] [-u <value>] [--profileName <value>]","args":[{"arg":"AGGREGATORHEXSTRING","description":"HexString address of the aggregator"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--keypair=<value>","description":"(required) Path to AptosAccount keypair or config.yaml file"},{"flag":"--networkId=<option>","description":"[default: testnet] Aptos network to connect to <options: devnet|testnet|mainnet>"},{"flag":"--profileName=<value>","description":"[default: default] If --keypair is pointing to a yaml file, provide an optional profile to load. If none provided, default will be used"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Aptos network"}],"description":"request a new value on-chain for an aggregator","aliases":["sbv2 aptos update aggregator"]},{"id":"config-print","permalink":"/cli/config/print","topic":"config","command":"sbv2 config print","topics":["config","print"],"markdown":"USAGE\\n  $ sbv2 config print [-h] [-v] [-s] [--json]\\n\\nFLAGS\\n  -h, --help     Show CLI help.\\n  -s, --silent   suppress cli prompts\\n  -v, --verbose  log everything\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print cli config\\n\\nEXAMPLES\\n  $ sbv2 config:print\\n","usage":"sbv2 config print [-h] [-v] [-s] [--json]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-v, --verbose","description":"log everything GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print cli config","examples":["sbv2 config:print"]},{"id":"config-set","permalink":"/cli/config/set","topic":"config","command":"sbv2 config set","topics":["config","set"],"markdown":"USAGE\\n  $ sbv2 config set CHAIN NETWORK PARAMETER [VALUE] [-h] [-v] [-s] [-r]\\n\\nARGUMENTS\\n  CHAIN      chain to set a config parameter\\n  NETWORK    network of chain to set parameter\\n  PARAMETER  (rpc|default-account|account) parameter to set\\n  VALUE      value of the param to set\\n\\nFLAGS\\n  -h, --help     Show CLI help.\\n  -r, --reset    remove value or set to default rpc\\n  -s, --silent   suppress cli prompts\\n  -v, --verbose  log everything\\n\\nDESCRIPTION\\n  set a configuration option\\n","usage":"sbv2 config set CHAIN NETWORK PARAMETER [VALUE] [-h] [-v] [-s] [-r]","args":[{"arg":"CHAIN","description":"chain to set a config parameter"},{"arg":"","description":"NETWORK"},{"arg":"","description":"PARAMETER"},{"arg":"","description":"VALUE"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-r, --reset","description":"remove value or set to default rpc"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-v, --verbose","description":"log everything"}],"description":"set a configuration option"},{"id":"evm-aggregator-create","permalink":"/cli/evm/aggregator/create","topic":"evm","command":"sbv2 evm aggregator create","topics":["evm","aggregator","create"],"markdown":"USAGE\\n  $ sbv2 evm aggregator create QUEUEADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--enableHistory]\\n    [--queueAuthority <value> --enable] [--fundAmount <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the oracle queue\\n\\nFLAGS\\n  -a, --authority=<value>      alternate account that will be the authority for the aggregator\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --account=<value>            (required) Path to file containing the private key for the payer account\\n  --arbitrum                   use the arbitrum chain\\n  --batchSize=<value>          [default: 1] number of oracles requested for each open round call\\n  --chain=<option>             the evm chain to interact with\\n                               <options: coredao|arbitrum>\\n  --coredao                    use the coredao chain\\n  --enable                     enable the oracles heartbeat permissions\\n  --enableHistory              enable history for the feed\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --fundAmount=<value>         [default: 0.0] fund the aggregator escrow with the native token, used to reward oracles\\n                               for publishing updates\\n  --mainnet                    use the mainnet network\\n  --minJobs=<value>            [default: 1] number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         [default: 1] number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --network=<option>           the EVM network to connect to\\n                               <options: mainnet|testnet>\\n  --programId=<value>          alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>     override the default signer when setting oracle permissions\\n  --testnet                    use the testnet network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 evm create aggregator\\n\\nEXAMPLES\\n  $ sbv2 evm aggregator create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my feed\' --batchSize 1 --updateInterval 90 --fundAmount 0.25 --job my_job.json\\n","usage":"sbv2 evm aggregator create QUEUEADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--enableHistory]\\n    [--queueAuthority <value> --enable] [--fundAmount <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the oracle queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--batchSize=<value>","description":"[default: 1] number of oracles requested for each open round call"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enable","description":"enable the oracles heartbeat permissions"},{"flag":"--enableHistory","description":"enable history for the feed"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--fundAmount=<value>","description":"[default: 0.0] fund the aggregator escrow with the native token, used to reward oracles for publishing updates"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--minJobs=<value>","description":"[default: 1] number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"[default: 1] number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"override the default signer when setting oracle permissions"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aggregator for a given queue","aliases":["sbv2 evm create aggregator"],"examples":["sbv2 evm aggregator create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my feed\' --batchSize 1 --updateInterval 90 --fundAmount 0.25 --job my_job.json"]},{"id":"evm-aggregator-print","permalink":"/cli/evm/aggregator/print","topic":"evm","command":"sbv2 evm aggregator print","topics":["evm","aggregator","print"],"markdown":"USAGE\\n  $ sbv2 evm aggregator print AGGREGATORADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--jobs] [--results]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator account\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --arbitrum            use the arbitrum chain\\n  --chain=<option>      the evm chain to interact with\\n                        <options: coredao|arbitrum>\\n  --coredao             use the coredao chain\\n  --jobs                print the job definitions for the aggregator\\n  --mainnet             use the mainnet network\\n  --network=<option>    the EVM network to connect to\\n                        <options: mainnet|testnet>\\n  --programId=<value>   alternative Switchboard program ID to interact with\\n  --results             print the current results for the aggregator\\n  --testnet             use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an aggregator\\n\\nEXAMPLES\\n  $ sbv2 evm aggregator print 0x4Aa86c11Ad9493c84fd6C6469F6FA494272AdB4a --arbitrum --mainnet\\n\\n  $ sbv2 evm aggregator print 0x7892F7326291F3Bc17680956B476701DF76d52Da --coredao --testnet --jobs\\n","usage":"sbv2 evm aggregator print AGGREGATORADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--jobs] [--results]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--jobs","description":"print the job definitions for the aggregator"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--results","description":"print the current results for the aggregator"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an aggregator","examples":["sbv2 evm aggregator print 0x4Aa86c11Ad9493c84fd6C6469F6FA494272AdB4a --arbitrum --mainnet","","sbv2 evm aggregator print 0x7892F7326291F3Bc17680956B476701DF76d52Da --coredao --testnet --jobs"]},{"id":"evm-aggregator-set","permalink":"/cli/evm/aggregator/set","topic":"evm","command":"sbv2 evm aggregator set","topics":["evm","aggregator","set"],"markdown":"USAGE\\n  $ sbv2 evm aggregator set AGGREGATORADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--removeJob <value>]\\n    [--enableHistory]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>      alternate account that will be the authority for the aggregator\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --account=<value>            (required) Path to file containing the private key for the payer account\\n  --arbitrum                   use the arbitrum chain\\n  --batchSize=<value>          [default: 1] number of oracles requested for each open round call\\n  --chain=<option>             the evm chain to interact with\\n                               <options: coredao|arbitrum>\\n  --coredao                    use the coredao chain\\n  --enableHistory              enable history for the feed\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --mainnet                    use the mainnet network\\n  --minJobs=<value>            [default: 1] number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         [default: 1] number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --network=<option>           the EVM network to connect to\\n                               <options: mainnet|testnet>\\n  --programId=<value>          alternative Switchboard program ID to interact with\\n  --removeJob=<value>...       job definitions to remove from the hash\\n  --testnet                    use the testnet network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set an aggregators config\\n\\nALIASES\\n  $ sbv2 evm set aggregator\\n\\nEXAMPLES\\n  $  sbv2 evm aggregator set --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my updated feed\' --batchSize 2 --job ./my_new_job.json\\n","usage":"sbv2 evm aggregator set AGGREGATORADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--removeJob <value>]\\n    [--enableHistory]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--batchSize=<value>","description":"[default: 1] number of oracles requested for each open round call"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enableHistory","description":"enable history for the feed"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--minJobs=<value>","description":"[default: 1] number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"[default: 1] number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--removeJob=<value>...","description":"job definitions to remove from the hash"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set an aggregators config","aliases":["sbv2 evm set aggregator"],"examples":[" sbv2 evm aggregator set --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my updated feed\' --batchSize 2 --job ./my_new_job.json"]},{"id":"evm-create-aggregator","permalink":"/cli/evm/create/aggregator","topic":"evm","command":"sbv2 evm create aggregator","topics":["evm","create","aggregator"],"markdown":"USAGE\\n  $ sbv2 evm create aggregator QUEUEADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--enableHistory]\\n    [--queueAuthority <value> --enable] [--fundAmount <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the oracle queue\\n\\nFLAGS\\n  -a, --authority=<value>      alternate account that will be the authority for the aggregator\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --account=<value>            (required) Path to file containing the private key for the payer account\\n  --arbitrum                   use the arbitrum chain\\n  --batchSize=<value>          [default: 1] number of oracles requested for each open round call\\n  --chain=<option>             the evm chain to interact with\\n                               <options: coredao|arbitrum>\\n  --coredao                    use the coredao chain\\n  --enable                     enable the oracles heartbeat permissions\\n  --enableHistory              enable history for the feed\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --fundAmount=<value>         [default: 0.0] fund the aggregator escrow with the native token, used to reward oracles\\n                               for publishing updates\\n  --mainnet                    use the mainnet network\\n  --minJobs=<value>            [default: 1] number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         [default: 1] number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --network=<option>           the EVM network to connect to\\n                               <options: mainnet|testnet>\\n  --programId=<value>          alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>     override the default signer when setting oracle permissions\\n  --testnet                    use the testnet network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 evm create aggregator\\n\\nEXAMPLES\\n  $ sbv2 evm aggregator create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my feed\' --batchSize 1 --updateInterval 90 --fundAmount 0.25 --job my_job.json\\n","usage":"sbv2 evm create aggregator QUEUEADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--enableHistory]\\n    [--queueAuthority <value> --enable] [--fundAmount <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the oracle queue"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--batchSize=<value>","description":"[default: 1] number of oracles requested for each open round call"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enable","description":"enable the oracles heartbeat permissions"},{"flag":"--enableHistory","description":"enable history for the feed"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--fundAmount=<value>","description":"[default: 0.0] fund the aggregator escrow with the native token, used to reward oracles for publishing updates"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--minJobs=<value>","description":"[default: 1] number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"[default: 1] number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"override the default signer when setting oracle permissions"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aggregator for a given queue","aliases":["sbv2 evm create aggregator"],"examples":["sbv2 evm aggregator create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my feed\' --batchSize 1 --updateInterval 90 --fundAmount 0.25 --job my_job.json"]},{"id":"evm-create-jobs","permalink":"/cli/evm/create/jobs","topic":"evm","command":"sbv2 evm create jobs","topics":["evm","create","jobs"],"markdown":"USAGE\\n  $ sbv2 evm create jobs [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--hash <value>] [-j <value>]\\n    [--removeJob <value>]\\n\\nFLAGS\\n  -h, --help              Show CLI help.\\n  -j, --job=<value>...    filesystem path to job definition file\\n  -s, --silent            suppress cli prompts\\n  -u, --rpcUrl=<value>    alternate RPC url\\n  -v, --verbose           log everything\\n  --arbitrum              use the arbitrum chain\\n  --chain=<option>        the evm chain to interact with\\n                          <options: coredao|arbitrum>\\n  --coredao               use the coredao chain\\n  --hash=<value>          existing ipfs hash to modify\\n  --mainnet               use the mainnet network\\n  --network=<option>      the EVM network to connect to\\n                          <options: mainnet|testnet>\\n  --programId=<value>     alternative Switchboard program ID to interact with\\n  --removeJob=<value>...  job definitions to remove from the hash\\n  --testnet               use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create the hash for a set of jobs\\n\\nALIASES\\n  $ sbv2 evm create jobs\\n\\nEXAMPLES\\n  $ sbv2 evm job create --arbitrum --testnet --job my_job.json\\n\\n  $ sbv2 evm job create --arbitrum --testnet --hash bafkreihvxeb7rwyrilzmouid2onuwajkkng4ykdwrr6vaxjgg3zv3cghdy --removeJob my_job.json\\n","usage":"sbv2 evm create jobs [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--hash <value>] [-j <value>]\\n    [--removeJob <value>]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--hash=<value>","description":"existing ipfs hash to modify"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--removeJob=<value>...","description":"job definitions to remove from the hash"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create the hash for a set of jobs","aliases":["sbv2 evm create jobs"],"examples":["sbv2 evm job create --arbitrum --testnet --job my_job.json","","sbv2 evm job create --arbitrum --testnet --hash bafkreihvxeb7rwyrilzmouid2onuwajkkng4ykdwrr6vaxjgg3zv3cghdy --removeJob my_job.json"]},{"id":"evm-create-oracle","permalink":"/cli/evm/create/oracle","topic":"evm","command":"sbv2 evm create oracle","topics":["evm","create","oracle"],"markdown":"USAGE\\n  $ sbv2 evm create oracle QUEUEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>] [--name <value>] [--queueAuthority <value> --enable]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the oracle queue to create a new oracle for\\n\\nFLAGS\\n  -a, --authority=<value>   alternate account that will be the authority for the oracle\\n  -h, --help                Show CLI help.\\n  -s, --silent              suppress cli prompts\\n  -u, --rpcUrl=<value>      alternate RPC url\\n  -v, --verbose             log everything\\n  --account=<value>         (required) Path to file containing the private key for the payer account\\n  --arbitrum                use the arbitrum chain\\n  --chain=<option>          the evm chain to interact with\\n                            <options: coredao|arbitrum>\\n  --coredao                 use the coredao chain\\n  --enable                  enable the oracles heartbeat permissions\\n  --mainnet                 use the mainnet network\\n  --name=<value>            name of the oracle for easier identification\\n  --network=<option>        the EVM network to connect to\\n                            <options: mainnet|testnet>\\n  --programId=<value>       alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>  override the default signer when setting oracle permissions\\n  --testnet                 use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle\\n\\nALIASES\\n  $ sbv2 evm create oracle\\n\\nEXAMPLES\\n  $ sbv2 evm oracle create 0xB1c6E716ACae35200Dc8278A63a424f58417954c --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my oracle\' --enable\\n","usage":"sbv2 evm create oracle QUEUEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>] [--name <value>] [--queueAuthority <value> --enable]","args":[{"arg":"QUEUEADDRESS","description":"address of the oracle queue to create a new oracle for"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enable","description":"enable the oracles heartbeat permissions"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"override the default signer when setting oracle permissions"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle","aliases":["sbv2 evm create oracle"],"examples":["sbv2 evm oracle create 0xB1c6E716ACae35200Dc8278A63a424f58417954c --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my oracle\' --enable"]},{"id":"evm-create-queue","permalink":"/cli/evm/create/queue","topic":"evm","command":"sbv2 evm create queue","topics":["evm","create","queue"],"markdown":"USAGE\\n  $ sbv2 evm create queue --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a <value>] [--name\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--unpermissionedFeeds]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate account that will be the authority for the queue\\n  -h, --help               Show CLI help.\\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --account=<value>        (required) Path to file containing the private key for the payer account\\n  --arbitrum               use the arbitrum chain\\n  --chain=<option>         the evm chain to interact with\\n                           <options: coredao|arbitrum>\\n  --coredao                use the coredao chain\\n  --mainnet                use the mainnet network\\n  --name=<value>           name of the queue for easier identification\\n  --network=<option>       the EVM network to connect to\\n                           <options: mainnet|testnet>\\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\\n  --testnet                use the testnet network\\n  --unpermissionedFeeds    permit unpermissioned feeds\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 evm create queue\\n\\nEXAMPLES\\n  $ sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my queue\' --oracleTimeout 3600 --queueSize 8\\n\\n  $ sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --unpermissionedFeeds\\n","usage":"sbv2 evm create queue --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a <value>] [--name\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--unpermissionedFeeds]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 evm create queue"],"examples":["sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my queue\' --oracleTimeout 3600 --queueSize 8","","sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --unpermissionedFeeds"]},{"id":"evm-job-create","permalink":"/cli/evm/job/create","topic":"evm","command":"sbv2 evm job create","topics":["evm","job","create"],"markdown":"USAGE\\n  $ sbv2 evm job create [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--hash <value>] [-j <value>]\\n    [--removeJob <value>]\\n\\nFLAGS\\n  -h, --help              Show CLI help.\\n  -j, --job=<value>...    filesystem path to job definition file\\n  -s, --silent            suppress cli prompts\\n  -u, --rpcUrl=<value>    alternate RPC url\\n  -v, --verbose           log everything\\n  --arbitrum              use the arbitrum chain\\n  --chain=<option>        the evm chain to interact with\\n                          <options: coredao|arbitrum>\\n  --coredao               use the coredao chain\\n  --hash=<value>          existing ipfs hash to modify\\n  --mainnet               use the mainnet network\\n  --network=<option>      the EVM network to connect to\\n                          <options: mainnet|testnet>\\n  --programId=<value>     alternative Switchboard program ID to interact with\\n  --removeJob=<value>...  job definitions to remove from the hash\\n  --testnet               use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create the hash for a set of jobs\\n\\nALIASES\\n  $ sbv2 evm create jobs\\n\\nEXAMPLES\\n  $ sbv2 evm job create --arbitrum --testnet --job my_job.json\\n\\n  $ sbv2 evm job create --arbitrum --testnet --hash bafkreihvxeb7rwyrilzmouid2onuwajkkng4ykdwrr6vaxjgg3zv3cghdy --removeJob my_job.json\\n","usage":"sbv2 evm job create [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--hash <value>] [-j <value>]\\n    [--removeJob <value>]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--hash=<value>","description":"existing ipfs hash to modify"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--removeJob=<value>...","description":"job definitions to remove from the hash"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create the hash for a set of jobs","aliases":["sbv2 evm create jobs"],"examples":["sbv2 evm job create --arbitrum --testnet --job my_job.json","","sbv2 evm job create --arbitrum --testnet --hash bafkreihvxeb7rwyrilzmouid2onuwajkkng4ykdwrr6vaxjgg3zv3cghdy --removeJob my_job.json"]},{"id":"evm-job-print","permalink":"/cli/evm/job/print","topic":"evm","command":"sbv2 evm job print","topics":["evm","job","print"],"markdown":"USAGE\\n  $ sbv2 evm job print JOBHASH [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json]\\n\\nARGUMENTS\\n  JOBHASH  IPFS hash of the job definitions\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --arbitrum            use the arbitrum chain\\n  --chain=<option>      the evm chain to interact with\\n                        <options: coredao|arbitrum>\\n  --coredao             use the coredao chain\\n  --mainnet             use the mainnet network\\n  --network=<option>    the EVM network to connect to\\n                        <options: mainnet|testnet>\\n  --programId=<value>   alternative Switchboard program ID to interact with\\n  --testnet             use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an IPFS job hash\\n\\nEXAMPLES\\n  $ sbv2 evm job print bafkreih4ots3go2ytcvp74cvshnmlikw2mtm47pugpnlzuf36vr6emoov4 --arbitrum --testnet\\n","usage":"sbv2 evm job print JOBHASH [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json]","args":[{"arg":"JOBHASH","description":"IPFS hash of the job definitions"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an IPFS job hash","examples":["sbv2 evm job print bafkreih4ots3go2ytcvp74cvshnmlikw2mtm47pugpnlzuf36vr6emoov4 --arbitrum --testnet"]},{"id":"evm-oracle-create","permalink":"/cli/evm/oracle/create","topic":"evm","command":"sbv2 evm oracle create","topics":["evm","oracle","create"],"markdown":"USAGE\\n  $ sbv2 evm oracle create QUEUEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>] [--name <value>] [--queueAuthority <value> --enable]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the oracle queue to create a new oracle for\\n\\nFLAGS\\n  -a, --authority=<value>   alternate account that will be the authority for the oracle\\n  -h, --help                Show CLI help.\\n  -s, --silent              suppress cli prompts\\n  -u, --rpcUrl=<value>      alternate RPC url\\n  -v, --verbose             log everything\\n  --account=<value>         (required) Path to file containing the private key for the payer account\\n  --arbitrum                use the arbitrum chain\\n  --chain=<option>          the evm chain to interact with\\n                            <options: coredao|arbitrum>\\n  --coredao                 use the coredao chain\\n  --enable                  enable the oracles heartbeat permissions\\n  --mainnet                 use the mainnet network\\n  --name=<value>            name of the oracle for easier identification\\n  --network=<option>        the EVM network to connect to\\n                            <options: mainnet|testnet>\\n  --programId=<value>       alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>  override the default signer when setting oracle permissions\\n  --testnet                 use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle\\n\\nALIASES\\n  $ sbv2 evm create oracle\\n\\nEXAMPLES\\n  $ sbv2 evm oracle create 0xB1c6E716ACae35200Dc8278A63a424f58417954c --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my oracle\' --enable\\n","usage":"sbv2 evm oracle create QUEUEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>] [--name <value>] [--queueAuthority <value> --enable]","args":[{"arg":"QUEUEADDRESS","description":"address of the oracle queue to create a new oracle for"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enable","description":"enable the oracles heartbeat permissions"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"override the default signer when setting oracle permissions"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle","aliases":["sbv2 evm create oracle"],"examples":["sbv2 evm oracle create 0xB1c6E716ACae35200Dc8278A63a424f58417954c --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my oracle\' --enable"]},{"id":"evm-oracle-heartbeat","permalink":"/cli/evm/oracle/heartbeat","topic":"evm","command":"sbv2 evm oracle heartbeat","topics":["evm","oracle","heartbeat"],"markdown":"USAGE\\n  $ sbv2 evm oracle heartbeat ORACLEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle\\n\\nFLAGS\\n  -a, --authority=<value>  alternate account that is the authority for the oracle\\n  -h, --help               Show CLI help.\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --account=<value>        (required) Path to file containing the private key for the payer account\\n  --arbitrum               use the arbitrum chain\\n  --chain=<option>         the evm chain to interact with\\n                           <options: coredao|arbitrum>\\n  --coredao                use the coredao chain\\n  --mainnet                use the mainnet network\\n  --network=<option>       the EVM network to connect to\\n                           <options: mainnet|testnet>\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --testnet                use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  heartbeat on-chain and signal readiness\\n\\nEXAMPLES\\n  $ sbv2 evm oracle heartbeat 0x5eeFE1CA9D1093a59aC9278cC6D296A4eeDd6385 --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt\\n","usage":"sbv2 evm oracle heartbeat ORACLEADDRESS --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao |\\n    --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a\\n    <value>]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that is the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"heartbeat on-chain and signal readiness","examples":["sbv2 evm oracle heartbeat 0x5eeFE1CA9D1093a59aC9278cC6D296A4eeDd6385 --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt"]},{"id":"evm-oracle-print","permalink":"/cli/evm/oracle/print","topic":"evm","command":"sbv2 evm oracle print","topics":["evm","oracle","print"],"markdown":"USAGE\\n  $ sbv2 evm oracle print ORACLEADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle account\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --arbitrum            use the arbitrum chain\\n  --chain=<option>      the evm chain to interact with\\n                        <options: coredao|arbitrum>\\n  --coredao             use the coredao chain\\n  --mainnet             use the mainnet network\\n  --network=<option>    the EVM network to connect to\\n                        <options: mainnet|testnet>\\n  --programId=<value>   alternative Switchboard program ID to interact with\\n  --testnet             use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an oracle\\n\\nEXAMPLES\\n  $ sbv2 evm oracle print 0x5eeFE1CA9D1093a59aC9278cC6D296A4eeDd6385 --arbitrum --testnet\\n","usage":"sbv2 evm oracle print ORACLEADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an oracle","examples":["sbv2 evm oracle print 0x5eeFE1CA9D1093a59aC9278cC6D296A4eeDd6385 --arbitrum --testnet"]},{"id":"evm-queue-create","permalink":"/cli/evm/queue/create","topic":"evm","command":"sbv2 evm queue create","topics":["evm","queue","create"],"markdown":"USAGE\\n  $ sbv2 evm queue create --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a <value>] [--name\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--unpermissionedFeeds]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate account that will be the authority for the queue\\n  -h, --help               Show CLI help.\\n  -r, --reward=<value>     oracle rewards for successfully responding to an update request\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --account=<value>        (required) Path to file containing the private key for the payer account\\n  --arbitrum               use the arbitrum chain\\n  --chain=<option>         the evm chain to interact with\\n                           <options: coredao|arbitrum>\\n  --coredao                use the coredao chain\\n  --mainnet                use the mainnet network\\n  --name=<value>           name of the queue for easier identification\\n  --network=<option>       the EVM network to connect to\\n                           <options: mainnet|testnet>\\n  --oracleTimeout=<value>  [default: 180] number of oracles to add to the queue\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queueSize=<value>      [default: 100] maximum number of oracles the queue can support\\n  --testnet                use the testnet network\\n  --unpermissionedFeeds    permit unpermissioned feeds\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 evm create queue\\n\\nEXAMPLES\\n  $ sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my queue\' --oracleTimeout 3600 --queueSize 8\\n\\n  $ sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --unpermissionedFeeds\\n","usage":"sbv2 evm queue create --account <value> [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum]\\n    [--network mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [-a <value>] [--name\\n    <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--unpermissionedFeeds]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 evm create queue"],"examples":["sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --name \'my queue\' --oracleTimeout 3600 --queueSize 8","","sbv2 evm queue create --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt --unpermissionedFeeds"]},{"id":"evm-queue-print","permalink":"/cli/evm/queue/print","topic":"evm","command":"sbv2 evm queue print","topics":["evm","queue","print"],"markdown":"USAGE\\n  $ sbv2 evm queue print QUEUEADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--oracles]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue account\\n\\nFLAGS\\n  -h, --help            Show CLI help.\\n  -s, --silent          suppress cli prompts\\n  -u, --rpcUrl=<value>  alternate RPC url\\n  -v, --verbose         log everything\\n  --arbitrum            use the arbitrum chain\\n  --chain=<option>      the evm chain to interact with\\n                        <options: coredao|arbitrum>\\n  --coredao             use the coredao chain\\n  --mainnet             use the mainnet network\\n  --network=<option>    the EVM network to connect to\\n                        <options: mainnet|testnet>\\n  --oracles             print the current set of heartbeating oracles\\n  --programId=<value>   alternative Switchboard program ID to interact with\\n  --testnet             use the testnet network\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a queue\\n\\nEXAMPLES\\n  $ sbv2 evm queue print --arbitrum --mainnet 0x74f44B7e43319931ff9ae8CFCDCba09dc7F89f95\\n\\n  $ sbv2 evm queue print --arbitrum --testnet 0xB1c6E716ACae35200Dc8278A63a424f58417954c --oracles\\n","usage":"sbv2 evm queue print QUEUEADDRESS [-h] [-v] [-s] [--chain coredao|arbitrum | --coredao | --arbitrum] [--network\\n    mainnet|testnet | --mainnet | --testnet] [-u <value>] [--programId <value>] [--json] [--oracles]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--oracles","description":"print the current set of heartbeating oracles"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--testnet","description":"use the testnet network GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a queue","examples":["sbv2 evm queue print --arbitrum --mainnet 0x74f44B7e43319931ff9ae8CFCDCba09dc7F89f95","","sbv2 evm queue print --arbitrum --testnet 0xB1c6E716ACae35200Dc8278A63a424f58417954c --oracles"]},{"id":"evm-set-aggregator","permalink":"/cli/evm/set/aggregator","topic":"evm","command":"sbv2 evm set aggregator","topics":["evm","set","aggregator"],"markdown":"USAGE\\n  $ sbv2 evm set aggregator AGGREGATORADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--removeJob <value>]\\n    [--enableHistory]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>      alternate account that will be the authority for the aggregator\\n  -h, --help                   Show CLI help.\\n  -j, --job=<value>...         filesystem path to job definition file\\n  -s, --silent                 suppress cli prompts\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --account=<value>            (required) Path to file containing the private key for the payer account\\n  --arbitrum                   use the arbitrum chain\\n  --batchSize=<value>          [default: 1] number of oracles requested for each open round call\\n  --chain=<option>             the evm chain to interact with\\n                               <options: coredao|arbitrum>\\n  --coredao                    use the coredao chain\\n  --enableHistory              enable history for the feed\\n  --forceReportPeriod=<value>  Number of seconds for which, even if the variance threshold is not passed, accept new\\n                               responses from oracles.\\n  --mainnet                    use the mainnet network\\n  --minJobs=<value>            [default: 1] number of jobs that must respond before an oracle responds\\n  --minOracles=<value>         [default: 1] number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>               name of the aggregator for easier identification\\n  --network=<option>           the EVM network to connect to\\n                               <options: mainnet|testnet>\\n  --programId=<value>          alternative Switchboard program ID to interact with\\n  --removeJob=<value>...       job definitions to remove from the hash\\n  --testnet                    use the testnet network\\n  --updateInterval=<value>     (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>  [default: 0] percentage change between a previous accepted result and the next round\\n                               before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                               volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set an aggregators config\\n\\nALIASES\\n  $ sbv2 evm set aggregator\\n\\nEXAMPLES\\n  $  sbv2 evm aggregator set --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my updated feed\' --batchSize 2 --job ./my_new_job.json\\n","usage":"sbv2 evm set aggregator AGGREGATORADDRESS --account <value> --updateInterval <value> [-h] [-v] [-s] [--chain\\n    coredao|arbitrum | --coredao | --arbitrum] [--network mainnet|testnet | --mainnet | --testnet] [-u <value>]\\n    [--programId <value>] [--json] [-a <value>] [--name <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [-j <value>] [--removeJob <value>]\\n    [--enableHistory]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate account that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--account=<value>","description":"(required) Path to file containing the private key for the payer account"},{"flag":"--arbitrum","description":"use the arbitrum chain"},{"flag":"--batchSize=<value>","description":"[default: 1] number of oracles requested for each open round call"},{"flag":"--chain=<option>","description":"the evm chain to interact with <options: coredao|arbitrum>"},{"flag":"--coredao","description":"use the coredao chain"},{"flag":"--enableHistory","description":"enable history for the feed"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--mainnet","description":"use the mainnet network"},{"flag":"--minJobs=<value>","description":"[default: 1] number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"[default: 1] number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator for easier identification"},{"flag":"--network=<option>","description":"the EVM network to connect to <options: mainnet|testnet>"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--removeJob=<value>...","description":"job definitions to remove from the hash"},{"flag":"--testnet","description":"use the testnet network"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set an aggregators config","aliases":["sbv2 evm set aggregator"],"examples":[" sbv2 evm aggregator set --arbitrum --testnet --account ~/.config/arbitrum/testnet.txt 0xB1c6E716ACae35200Dc8278A63a424f58417954c --name \'my updated feed\' --batchSize 2 --job ./my_new_job.json"]},{"id":"near-aggregator-add_history","permalink":"/cli/near/aggregator/add_history","topic":"near","command":"sbv2 near aggregator add history","topics":["near","aggregator","add","history"],"markdown":"USAGE\\n  $ sbv2 near aggregator add history AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--numRows\\n    <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --numRows=<value>             [default: 1000] number of rows to add to the aggregator\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  add rows to a history vector\\n\\nALIASES\\n  $ sbv2 near aggregator history add\\n","usage":"sbv2 near aggregator add history AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--numRows\\n    <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--numRows=<value>","description":"[default: 1000] number of rows to add to the aggregator"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"add rows to a history vector","aliases":["sbv2 near aggregator history add"]},{"id":"near-aggregator-add_job","permalink":"/cli/near/aggregator/add_job","topic":"near","command":"sbv2 near aggregator add job","topics":["near","aggregator","add","job"],"markdown":"USAGE\\n  $ sbv2 near aggregator add job AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --jobDefinition=<value>       filesystem path of job json definition file\\n  --jobKey=<value>              public key of an existing job account to add to an aggregator\\n  --jobWeight=<value>           [default: 1] job weight\\n  --metadata=<value>            metadata of the job account\\n  --name=<value>                name of the job account\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  add a job to an aggregator\\n\\nALIASES\\n  $ sbv2 near aggregator job add\\n","usage":"sbv2 near aggregator add job AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--jobDefinition=<value>","description":"filesystem path of job json definition file"},{"flag":"--jobKey=<value>","description":"public key of an existing job account to add to an aggregator"},{"flag":"--jobWeight=<value>","description":"[default: 1] job weight"},{"flag":"--metadata=<value>","description":"metadata of the job account"},{"flag":"--name=<value>","description":"name of the job account"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"add a job to an aggregator","aliases":["sbv2 near aggregator job add"]},{"id":"near-aggregator-create","permalink":"/cli/near/aggregator/create","topic":"near","command":"sbv2 near aggregator create","topics":["near","aggregator","create"],"markdown":"USAGE\\n  $ sbv2 near aggregator create QUEUEADDRESS --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>] [--enable]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --batchSize=<value>           number of oracles requested for each open round call\\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\\n  --enable                      if required and queue authority is provided, enable permissions\\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\\n                                responses from oracles.\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --rewardEscrow=<value>        where to send rewards. defaults to user\'s escrow account\\n  --updateInterval=<value>      (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                                volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a near aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 near create aggregator\\n","usage":"sbv2 near aggregator create QUEUEADDRESS --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>] [--enable]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--enable","description":"if required and queue authority is provided, enable permissions"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--rewardEscrow=<value>","description":"where to send rewards. defaults to user\'s escrow account"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a near aggregator for a given queue","aliases":["sbv2 near create aggregator"]},{"id":"near-aggregator-escrow","permalink":"/cli/near/aggregator/escrow","topic":"near","command":"sbv2 near aggregator escrow","topics":["near","aggregator","escrow"],"markdown":"USAGE\\n  $ sbv2 near aggregator escrow AGGREGATORADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nDESCRIPTION\\n  view an aggregators escrow state\\n","usage":"sbv2 near aggregator escrow AGGREGATORADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"}],"description":"view an aggregators escrow state"},{"id":"near-aggregator-fetch","permalink":"/cli/near/aggregator/fetch","topic":"near","command":"sbv2 near aggregator fetch","topics":["near","aggregator","fetch"],"markdown":"USAGE\\n  $ sbv2 near aggregator fetch --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountId=<value>           (required) optional, authority to fetch aggregators for\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  fetch all aggregators for a given near account\\n\\nALIASES\\n  $ sbv2 near fetch aggregators\\n","usage":"sbv2 near aggregator fetch --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountId=<value>","description":"(required) optional, authority to fetch aggregators for"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"fetch all aggregators for a given near account","aliases":["sbv2 near fetch aggregators"]},{"id":"near-aggregator-fund","permalink":"/cli/near/aggregator/fund","topic":"near","command":"sbv2 near aggregator fund","topics":["near","aggregator","fund"],"markdown":"USAGE\\n  $ sbv2 near aggregator fund AGGREGATORADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --amount=<value>          (required) amount to deposit into the aggregator\'s lease\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nALIASES\\n  $ sbv2 near fund aggregator\\n","usage":"sbv2 near aggregator fund AGGREGATORADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --amount=<value>          (required) amount to deposit into the aggregator\'s lease\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nALIASES\\n  $ sbv2 near fund aggregator"},{"id":"near-aggregator-history_add","permalink":"/cli/near/aggregator/history_add","topic":"near","command":"sbv2 near aggregator history add","topics":["near","aggregator","history","add"],"markdown":"USAGE\\n  $ sbv2 near aggregator history add AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--numRows\\n    <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --numRows=<value>             [default: 1000] number of rows to add to the aggregator\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  add rows to a history vector\\n\\nALIASES\\n  $ sbv2 near aggregator history add\\n","usage":"sbv2 near aggregator history add AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--numRows\\n    <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--numRows=<value>","description":"[default: 1000] number of rows to add to the aggregator"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"add rows to a history vector","aliases":["sbv2 near aggregator history add"]},{"id":"near-aggregator-job_add","permalink":"/cli/near/aggregator/job_add","topic":"near","command":"sbv2 near aggregator job add","topics":["near","aggregator","job","add"],"markdown":"USAGE\\n  $ sbv2 near aggregator job add AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --jobDefinition=<value>       filesystem path of job json definition file\\n  --jobKey=<value>              public key of an existing job account to add to an aggregator\\n  --jobWeight=<value>           [default: 1] job weight\\n  --metadata=<value>            metadata of the job account\\n  --name=<value>                name of the job account\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  add a job to an aggregator\\n\\nALIASES\\n  $ sbv2 near aggregator job add\\n","usage":"sbv2 near aggregator job add AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--name <value> | --jobKey <value>] [--metadata <value> | ] [--jobDefinition <value> | ] [--jobWeight <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--jobDefinition=<value>","description":"filesystem path of job json definition file"},{"flag":"--jobKey=<value>","description":"public key of an existing job account to add to an aggregator"},{"flag":"--jobWeight=<value>","description":"[default: 1] job weight"},{"flag":"--metadata=<value>","description":"metadata of the job account"},{"flag":"--name=<value>","description":"name of the job account"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"add a job to an aggregator","aliases":["sbv2 near aggregator job add"]},{"id":"near-aggregator-job_remove","permalink":"/cli/near/aggregator/job_remove","topic":"near","command":"sbv2 near aggregator job remove","topics":["near","aggregator","job","remove"],"markdown":"USAGE\\n  $ sbv2 near aggregator job remove AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [-j <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\\n  -h, --help                    Show CLI help.\\n  -j, --jobAddress=<value>...   public key of an existing job account to remove from an aggregator\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  remove a job to an aggregator\\n\\nALIASES\\n  $ sbv2 near aggregator job remove\\n","usage":"sbv2 near aggregator job remove AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [-j <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --jobAddress=<value>...","description":"public key of an existing job account to remove from an aggregator"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"remove a job to an aggregator","aliases":["sbv2 near aggregator job remove"]},{"id":"near-aggregator-permission_create","permalink":"/cli/near/aggregator/permission_create","topic":"near","command":"sbv2 near aggregator permission create","topics":["near","aggregator","permission","create"],"markdown":"USAGE\\n  $ sbv2 near aggregator permission create AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a permission account for a near aggregator\\n\\nALIASES\\n  $ sbv2 near create aggregator permission\\n","usage":"sbv2 near aggregator permission create AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a permission account for a near aggregator","aliases":["sbv2 near create aggregator permission"]},{"id":"near-aggregator-remove_job","permalink":"/cli/near/aggregator/remove_job","topic":"near","command":"sbv2 near aggregator remove job","topics":["near","aggregator","remove","job"],"markdown":"USAGE\\n  $ sbv2 near aggregator remove job AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [-j <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate keypair that is the authority for the aggregator\\n  -h, --help                    Show CLI help.\\n  -j, --jobAddress=<value>...   public key of an existing job account to remove from an aggregator\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  remove a job to an aggregator\\n\\nALIASES\\n  $ sbv2 near aggregator job remove\\n","usage":"sbv2 near aggregator remove job AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [-j <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --jobAddress=<value>...","description":"public key of an existing job account to remove from an aggregator"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"remove a job to an aggregator","aliases":["sbv2 near aggregator job remove"]},{"id":"near-aggregator-set","permalink":"/cli/near/aggregator/set","topic":"near","command":"sbv2 near aggregator set","topics":["near","aggregator","set"],"markdown":"USAGE\\n  $ sbv2 near aggregator set AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--queueAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod\\n    <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --batchSize=<value>           number of oracles requested for each open round call\\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\\n                                responses from oracles.\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --queueAddress=<value>        optional, address of the new queue to add the aggregator to\\n  --updateInterval=<value>      set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>   percentage change between a previous accepted result and the next round before an oracle\\n                                reports a value on-chain. Used to conserve lease cost during low volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set a near aggregator\'s config\\n\\nALIASES\\n  $ sbv2 near set aggregator\\n","usage":"sbv2 near aggregator set AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--queueAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod\\n    <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--queueAddress=<value>","description":"optional, address of the new queue to add the aggregator to"},{"flag":"--updateInterval=<value>","description":"set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set a near aggregator\'s config","aliases":["sbv2 near set aggregator"]},{"id":"near-aggregator-update","permalink":"/cli/near/aggregator/update","topic":"near","command":"sbv2 near aggregator update","topics":["near","aggregator","update"],"markdown":"USAGE\\n  $ sbv2 near aggregator update AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  request a new value on-chain for an aggregator\\n\\nALIASES\\n  $ sbv2 near update aggregator\\n","usage":"sbv2 near aggregator update AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"request a new value on-chain for an aggregator","aliases":["sbv2 near update aggregator"]},{"id":"near-crank-create","permalink":"/cli/near/crank/create","topic":"near","command":"sbv2 near crank create","topics":["near","crank","create"],"markdown":"USAGE\\n  $ sbv2 near crank create QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name <value>] [--metadata <value>]\\n    [--maxRows <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --maxRows=<value>             [default: 100] maximum number of rows on the crank\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new crank\\n\\nALIASES\\n  $ sbv2 near create crank\\n","usage":"sbv2 near crank create QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name <value>] [--metadata <value>]\\n    [--maxRows <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--maxRows=<value>","description":"[default: 100] maximum number of rows on the crank"},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new crank","aliases":["sbv2 near create crank"]},{"id":"near-crank-list","permalink":"/cli/near/crank/list","topic":"near","command":"sbv2 near crank list","topics":["near","crank","list"],"markdown":"USAGE\\n  $ sbv2 near crank list CRANKADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>]\\n\\nARGUMENTS\\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nDESCRIPTION\\n  pop the crank\\n\\nALIASES\\n  $ sbv2 near pop crank\\n","usage":"sbv2 near crank list CRANKADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>]","args":[{"arg":"CRANKADDRESS","description":"address of the crank in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"}],"description":"pop the crank","aliases":["sbv2 near pop crank"]},{"id":"near-crank-pop","permalink":"/cli/near/crank/pop","topic":"near","command":"sbv2 near crank pop","topics":["near","crank","pop"],"markdown":"USAGE\\n  $ sbv2 near crank pop CRANKADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  pop the crank\\n\\nALIASES\\n  $ sbv2 near pop crank\\n","usage":"sbv2 near crank pop CRANKADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"CRANKADDRESS","description":"address of the crank in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"pop the crank","aliases":["sbv2 near pop crank"]},{"id":"near-crank-push","permalink":"/cli/near/crank/push","topic":"near","command":"sbv2 near crank push","topics":["near","crank","push"],"markdown":"USAGE\\n  $ sbv2 near crank push CRANKADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --aggregatorAddress=<value>  (required) address of the aggregator in Uint8 or Base58 encoding\\n  -h, --help                       Show CLI help.\\n  -s, --silent                     suppress cli prompts\\n  -u, --rpcUrl=<value>             alternate RPC url\\n  -v, --verbose                    log everything\\n  --accountName=<value>            (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>     [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                   Defaults to ~/.near-credentials\\n  --networkId=<option>             [default: testnet] Near network ID to connect to\\n                                   <options: testnet|mainnet|localnet>\\n  --programId=<value>              Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  push an aggregator onto the crank\\n\\nALIASES\\n  $ sbv2 near push crank\\n","usage":"sbv2 near crank push CRANKADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"CRANKADDRESS","description":"address of the crank in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --aggregatorAddress=<value>","description":"(required) address of the aggregator in Uint8 or Base58 encoding"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"push an aggregator onto the crank","aliases":["sbv2 near push crank"]},{"id":"near-create-aggregator","permalink":"/cli/near/create/aggregator","topic":"near","command":"sbv2 near create aggregator","topics":["near","create","aggregator"],"markdown":"USAGE\\n  $ sbv2 near create aggregator QUEUEADDRESS --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>] [--enable]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --batchSize=<value>           number of oracles requested for each open round call\\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\\n  --enable                      if required and queue authority is provided, enable permissions\\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\\n                                responses from oracles.\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --rewardEscrow=<value>        where to send rewards. defaults to user\'s escrow account\\n  --updateInterval=<value>      (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>   [default: 0] percentage change between a previous accepted result and the next round\\n                                before an oracle reports a value on-chain. Used to conserve lease cost during low\\n                                volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a near aggregator for a given queue\\n\\nALIASES\\n  $ sbv2 near create aggregator\\n","usage":"sbv2 near create aggregator QUEUEADDRESS --accountName <value> --updateInterval <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod <value>] [--batchSize <value>]\\n    [--minJobs <value>] [--minOracles <value>] [--varianceThreshold <value>] [--rewardEscrow <value>] [--enable]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--enable","description":"if required and queue authority is provided, enable permissions"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--rewardEscrow=<value>","description":"where to send rewards. defaults to user\'s escrow account"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a near aggregator for a given queue","aliases":["sbv2 near create aggregator"]},{"id":"near-create-aggregator_permission","permalink":"/cli/near/create/aggregator_permission","topic":"near","command":"sbv2 near create aggregator permission","topics":["near","create","aggregator","permission"],"markdown":"USAGE\\n  $ sbv2 near create aggregator permission AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a permission account for a near aggregator\\n\\nALIASES\\n  $ sbv2 near create aggregator permission\\n","usage":"sbv2 near create aggregator permission AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a permission account for a near aggregator","aliases":["sbv2 near create aggregator permission"]},{"id":"near-create-crank","permalink":"/cli/near/create/crank","topic":"near","command":"sbv2 near create crank","topics":["near","create","crank"],"markdown":"USAGE\\n  $ sbv2 near create crank QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name <value>] [--metadata <value>]\\n    [--maxRows <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --maxRows=<value>             [default: 100] maximum number of rows on the crank\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new crank\\n\\nALIASES\\n  $ sbv2 near create crank\\n","usage":"sbv2 near create crank QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--name <value>] [--metadata <value>]\\n    [--maxRows <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--maxRows=<value>","description":"[default: 100] maximum number of rows on the crank"},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new crank","aliases":["sbv2 near create crank"]},{"id":"near-create-escrow","permalink":"/cli/near/create/escrow","topic":"near","command":"sbv2 near create escrow","topics":["near","create","escrow"],"markdown":"USAGE\\n  $ sbv2 near create escrow --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --mint=<value>                [default: wrap.test] token mint to create escrow account for\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an escrow token account\\n\\nALIASES\\n  $ sbv2 near create escrow\\n","usage":"sbv2 near create escrow --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]","flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--mint=<value>","description":"[default: wrap.test] token mint to create escrow account for"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an escrow token account","aliases":["sbv2 near create escrow"]},{"id":"near-create-job","permalink":"/cli/near/create/job","topic":"near","command":"sbv2 near create job","topics":["near","create","job"],"markdown":"USAGE\\n  $ sbv2 near create job JOBDEFINITION --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]\\n\\nARGUMENTS\\n  JOBDEFINITION  filesystem path to job definition\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the job account\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --metadata=<value>            metadata of the job for easier identification\\n  --name=<value>                name of the job for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a job on near\\n\\nALIASES\\n  $ sbv2 near create job\\n","usage":"sbv2 near create job JOBDEFINITION --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]","args":[{"arg":"JOBDEFINITION","description":"filesystem path to job definition"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the job account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--metadata=<value>","description":"metadata of the job for easier identification"},{"flag":"--name=<value>","description":"name of the job for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a job on near","aliases":["sbv2 near create job"]},{"id":"near-create-oracle","permalink":"/cli/near/create/oracle","topic":"near","command":"sbv2 near create oracle","topics":["near","create","oracle"],"markdown":"USAGE\\n  $ sbv2 near create oracle QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --metadata=<value>            metadata of the oracle for easier identification\\n  --name=<value>                name of the oracle for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a near oracle for a given queue\\n\\nALIASES\\n  $ sbv2 near create oracle\\n","usage":"sbv2 near create oracle QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--metadata=<value>","description":"metadata of the oracle for easier identification"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a near oracle for a given queue","aliases":["sbv2 near create oracle"]},{"id":"near-create-oracle_permission","permalink":"/cli/near/create/oracle_permission","topic":"near","command":"sbv2 near create oracle permission","topics":["near","create","oracle","permission"],"markdown":"USAGE\\n  $ sbv2 near create oracle permission --accountName <value> --granter <value> --grantee <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--enable]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate account that is the granters authority\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --enable                      enable permissions\\n  --grantee=<value>             (required) account that will be granted permissions, typically an Oracle or Aggregator\\n  --granter=<value>             (required) account that will grant permissions, typically the OracleQueue\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a permission account\\n\\nALIASES\\n  $ sbv2 near create oracle permission\\n","usage":"sbv2 near create oracle permission --accountName <value> --granter <value> --grantee <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--enable]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account that is the granters authority"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--enable","description":"enable permissions"},{"flag":"--grantee=<value>","description":"(required) account that will be granted permissions, typically an Oracle or Aggregator"},{"flag":"--granter=<value>","description":"(required) account that will grant permissions, typically the OracleQueue"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a permission account","aliases":["sbv2 near create oracle permission"]},{"id":"near-create-queue","permalink":"/cli/near/create/queue","topic":"near","command":"sbv2 near create queue","topics":["near","create","queue"],"markdown":"USAGE\\n  $ sbv2 near create queue --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>]\\n    [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the queue\\n  -h, --help                    Show CLI help.\\n  -r, --reward=<value>          [default: 0] oracle rewards for successfully responding to an update request\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --enableBufferRelayers        enable oracles to fulfill buffer relayer requests\\n  --metadata=<value>            metadata of the queue for easier identification\\n  --minStake=<value>            [default: 0] minimum stake required by an oracle to join the queue\\n  --name=<value>                name of the queue for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --oracleTimeout=<value>       [default: 180] number of oracles to add to the queue\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --queueSize=<value>           [default: 100] maximum number of oracles the queue can support\\n  --slashingEnabled             permit slashing malicous oracles\\n  --unpermissionedFeeds         permit unpermissioned feeds\\n  --unpermissionedVrf           permit unpermissioned VRF accounts\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 near create queue\\n","usage":"sbv2 near create queue --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>]\\n    [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]","flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"[default: 0] oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--enableBufferRelayers","description":"enable oracles to fulfill buffer relayer requests"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--minStake=<value>","description":"[default: 0] minimum stake required by an oracle to join the queue"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--slashingEnabled","description":"permit slashing malicous oracles"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds"},{"flag":"--unpermissionedVrf","description":"permit unpermissioned VRF accounts GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 near create queue"]},{"id":"near-escrow-create","permalink":"/cli/near/escrow/create","topic":"near","command":"sbv2 near escrow create","topics":["near","escrow","create"],"markdown":"USAGE\\n  $ sbv2 near escrow create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --mint=<value>                [default: wrap.test] token mint to create escrow account for\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an escrow token account\\n\\nALIASES\\n  $ sbv2 near create escrow\\n","usage":"sbv2 near escrow create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--mint <value>]","flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--mint=<value>","description":"[default: wrap.test] token mint to create escrow account for"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an escrow token account","aliases":["sbv2 near create escrow"]},{"id":"near-escrow-print","permalink":"/cli/near/escrow/print","topic":"near","command":"sbv2 near escrow print","topics":["near","escrow","print"],"markdown":"USAGE\\n  $ sbv2 near escrow print --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an escrow token account\\n\\nALIASES\\n  $ sbv2 near print escrow\\n","usage":"sbv2 near escrow print --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an escrow token account","aliases":["sbv2 near print escrow"]},{"id":"near-fetch-aggregators","permalink":"/cli/near/fetch/aggregators","topic":"near","command":"sbv2 near fetch aggregators","topics":["near","fetch","aggregators"],"markdown":"USAGE\\n  $ sbv2 near fetch aggregators --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountId=<value>           (required) optional, authority to fetch aggregators for\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  fetch all aggregators for a given near account\\n\\nALIASES\\n  $ sbv2 near fetch aggregators\\n","usage":"sbv2 near fetch aggregators --accountId <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountId=<value>","description":"(required) optional, authority to fetch aggregators for"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"fetch all aggregators for a given near account","aliases":["sbv2 near fetch aggregators"]},{"id":"near-fund-aggregator","permalink":"/cli/near/fund/aggregator","topic":"near","command":"sbv2 near fund aggregator","topics":["near","fund","aggregator"],"markdown":"USAGE\\n  $ sbv2 near fund aggregator AGGREGATORADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --amount=<value>          (required) amount to deposit into the aggregator\'s lease\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nALIASES\\n  $ sbv2 near fund aggregator\\n","usage":"sbv2 near fund aggregator AGGREGATORADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --amount=<value>          (required) amount to deposit into the aggregator\'s lease\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nALIASES\\n  $ sbv2 near fund aggregator"},{"id":"near-job-create","permalink":"/cli/near/job/create","topic":"near","command":"sbv2 near job create","topics":["near","job","create"],"markdown":"USAGE\\n  $ sbv2 near job create JOBDEFINITION --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]\\n\\nARGUMENTS\\n  JOBDEFINITION  filesystem path to job definition\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the job account\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --metadata=<value>            metadata of the job for easier identification\\n  --name=<value>                name of the job for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a job on near\\n\\nALIASES\\n  $ sbv2 near create job\\n","usage":"sbv2 near job create JOBDEFINITION --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]","args":[{"arg":"JOBDEFINITION","description":"filesystem path to job definition"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the job account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--metadata=<value>","description":"metadata of the job for easier identification"},{"flag":"--name=<value>","description":"name of the job for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a job on near","aliases":["sbv2 near create job"]},{"id":"near-list-queue","permalink":"/cli/near/list/queue","topic":"near","command":"sbv2 near list queue","topics":["near","list","queue"],"markdown":"USAGE\\n  $ sbv2 near list queue QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  list aggregators for a given queue\\n\\nALIASES\\n  $ sbv2 near list queue\\n","usage":"sbv2 near list queue QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"list aggregators for a given queue","aliases":["sbv2 near list queue"]},{"id":"near-oracle-create","permalink":"/cli/near/oracle/create","topic":"near","command":"sbv2 near oracle create","topics":["near","oracle","create"],"markdown":"USAGE\\n  $ sbv2 near oracle create QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --metadata=<value>            metadata of the oracle for easier identification\\n  --name=<value>                name of the oracle for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a near oracle for a given queue\\n\\nALIASES\\n  $ sbv2 near create oracle\\n","usage":"sbv2 near oracle create QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--metadata=<value>","description":"metadata of the oracle for easier identification"},{"flag":"--name=<value>","description":"name of the oracle for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a near oracle for a given queue","aliases":["sbv2 near create oracle"]},{"id":"near-oracle-escrow","permalink":"/cli/near/oracle/escrow","topic":"near","command":"sbv2 near oracle escrow","topics":["near","oracle","escrow"],"markdown":"USAGE\\n  $ sbv2 near oracle escrow ORACLEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>]\\n    [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  view an aggregators escrow state\\n","usage":"sbv2 near oracle escrow ORACLEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>]\\n    [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"view an aggregators escrow state"},{"id":"near-oracle-stake","permalink":"/cli/near/oracle/stake","topic":"near","command":"sbv2 near oracle stake","topics":["near","oracle","stake"],"markdown":"USAGE\\n  $ sbv2 near oracle stake ORACLEADDRESS --accountName <value> --amount <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --amount=<value>              (required) amount of Near to deposit into oracle staking wallet\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  deposit funds to an oracle\'s staking wallet\\n","usage":"sbv2 near oracle stake ORACLEADDRESS --accountName <value> --amount <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--amount=<value>","description":"(required) amount of Near to deposit into oracle staking wallet"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"deposit funds to an oracle\'s staking wallet"},{"id":"near-oracle-unstake","permalink":"/cli/near/oracle/unstake","topic":"near","command":"sbv2 near oracle unstake","topics":["near","oracle","unstake"],"markdown":"USAGE\\n  $ sbv2 near oracle unstake ORACLEADDRESS --accountName <value> --amount <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --amount=<value>              (required) amount of Near to unstake from oracle staking wallet\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  deposit funds to an oracle\'s staking wallet\\n","usage":"sbv2 near oracle unstake ORACLEADDRESS --accountName <value> --amount <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--amount=<value>","description":"(required) amount of Near to unstake from oracle staking wallet"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"deposit funds to an oracle\'s staking wallet"},{"id":"near-oracle-up","permalink":"/cli/near/oracle/up","topic":"near","command":"sbv2 near oracle up","topics":["near","oracle","up"],"markdown":"USAGE\\n  $ sbv2 near oracle up ORACLEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-d <value>] [--releaseChannel\\n    testnet|mainnet | --nodeImage <value>]\\n\\nARGUMENTS\\n  ORACLEADDRESS  address of the oracle in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -d, --switchboardDir=<value>  directory with switchboard.env to load a switchboard environment\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress docker logging\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --nodeImage=<value>           [default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --releaseChannel=<option>     [default: testnet] the oracle release channel\\n                                <options: testnet|mainnet>\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  start a near docker oracle\\n","usage":"sbv2 near oracle up ORACLEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-d <value>] [--releaseChannel\\n    testnet|mainnet | --nodeImage <value>]","args":[{"arg":"ORACLEADDRESS","description":"address of the oracle in Uint8 or Base58 encoding"}],"flags":[{"flag":" -d, --switchboardDir=<value>","description":"directory with switchboard.env to load a switchboard environment"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress docker logging"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--nodeImage=<value>","description":"[default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--releaseChannel=<option>","description":"[default: testnet] the oracle release channel <options: testnet|mainnet> GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"start a near docker oracle"},{"id":"near-permission-create","permalink":"/cli/near/permission/create","topic":"near","command":"sbv2 near permission create","topics":["near","permission","create"],"markdown":"USAGE\\n  $ sbv2 near permission create --accountName <value> --granter <value> --grantee <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--enable]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate account that is the granters authority\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --enable                      enable permissions\\n  --grantee=<value>             (required) account that will be granted permissions, typically an Oracle or Aggregator\\n  --granter=<value>             (required) account that will grant permissions, typically the OracleQueue\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a permission account\\n\\nALIASES\\n  $ sbv2 near create oracle permission\\n","usage":"sbv2 near permission create --accountName <value> --granter <value> --grantee <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--enable]","flags":[{"flag":" -a, --authority=<value>","description":"alternate account that is the granters authority"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--enable","description":"enable permissions"},{"flag":"--grantee=<value>","description":"(required) account that will be granted permissions, typically an Oracle or Aggregator"},{"flag":"--granter=<value>","description":"(required) account that will grant permissions, typically the OracleQueue"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a permission account","aliases":["sbv2 near create oracle permission"]},{"id":"near-pop-crank","permalink":"/cli/near/pop/crank","topic":"near","command":"sbv2 near pop crank","topics":["near","pop","crank"],"markdown":"USAGE\\n  $ sbv2 near pop crank CRANKADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>]\\n\\nARGUMENTS\\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nDESCRIPTION\\n  pop the crank\\n\\nALIASES\\n  $ sbv2 near pop crank\\n","usage":"sbv2 near pop crank CRANKADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>]","args":[{"arg":"CRANKADDRESS","description":"address of the crank in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"}],"description":"pop the crank","aliases":["sbv2 near pop crank"]},{"id":"near-print","permalink":"/cli/near/print","topic":"near","command":"sbv2 near print","topics":["near","print"],"markdown":"USAGE\\n  $ sbv2 near print ACCOUNTTYPE ADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--all]\\n\\nARGUMENTS\\n  ACCOUNTTYPE  (queue|aggregator|crank|oracle|permission|lease|job) account type to print\\n  ADDRESS      address of the account to print in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --all                         print all account attributes including jobs, permissions, and leases\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a near switchboard account\\n\\nALIASES\\n  $ sbv2 near print\\n","usage":"sbv2 near print ACCOUNTTYPE ADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [--all]","args":[{"arg":"ACCOUNTTYPE","description":"(queue|aggregator|crank|oracle|permission|lease|job) account type to print"},{"arg":"","description":"ADDRESS"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--all","description":"print all account attributes including jobs, permissions, and leases"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a near switchboard account","aliases":["sbv2 near print"]},{"id":"near-print-escrow","permalink":"/cli/near/print/escrow","topic":"near","command":"sbv2 near print escrow","topics":["near","print","escrow"],"markdown":"USAGE\\n  $ sbv2 near print escrow --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an escrow token account\\n\\nALIASES\\n  $ sbv2 near print escrow\\n","usage":"sbv2 near print escrow --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an escrow token account","aliases":["sbv2 near print escrow"]},{"id":"near-push-crank","permalink":"/cli/near/push/crank","topic":"near","command":"sbv2 near push crank","topics":["near","push","crank"],"markdown":"USAGE\\n  $ sbv2 near push crank CRANKADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  CRANKADDRESS  address of the crank in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --aggregatorAddress=<value>  (required) address of the aggregator in Uint8 or Base58 encoding\\n  -h, --help                       Show CLI help.\\n  -s, --silent                     suppress cli prompts\\n  -u, --rpcUrl=<value>             alternate RPC url\\n  -v, --verbose                    log everything\\n  --accountName=<value>            (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>     [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                   Defaults to ~/.near-credentials\\n  --networkId=<option>             [default: testnet] Near network ID to connect to\\n                                   <options: testnet|mainnet|localnet>\\n  --programId=<value>              Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  push an aggregator onto the crank\\n\\nALIASES\\n  $ sbv2 near push crank\\n","usage":"sbv2 near push crank CRANKADDRESS --accountName <value> -a <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"CRANKADDRESS","description":"address of the crank in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --aggregatorAddress=<value>","description":"(required) address of the aggregator in Uint8 or Base58 encoding"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"push an aggregator onto the crank","aliases":["sbv2 near push crank"]},{"id":"near-queue-aggregators","permalink":"/cli/near/queue/aggregators","topic":"near","command":"sbv2 near queue aggregators","topics":["near","queue","aggregators"],"markdown":"USAGE\\n  $ sbv2 near queue aggregators QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  fetch all aggregators for a given queue account\\n\\nALIASES\\n  $ sbv2 near queue feeds\\n","usage":"sbv2 near queue aggregators QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"fetch all aggregators for a given queue account","aliases":["sbv2 near queue feeds"]},{"id":"near-queue-create","permalink":"/cli/near/queue/create","topic":"near","command":"sbv2 near queue create","topics":["near","queue","create"],"markdown":"USAGE\\n  $ sbv2 near queue create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>]\\n    [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the queue\\n  -h, --help                    Show CLI help.\\n  -r, --reward=<value>          [default: 0] oracle rewards for successfully responding to an update request\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --enableBufferRelayers        enable oracles to fulfill buffer relayer requests\\n  --metadata=<value>            metadata of the queue for easier identification\\n  --minStake=<value>            [default: 0] minimum stake required by an oracle to join the queue\\n  --name=<value>                name of the queue for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --oracleTimeout=<value>       [default: 180] number of oracles to add to the queue\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --queueSize=<value>           [default: 100] maximum number of oracles the queue can support\\n  --slashingEnabled             permit slashing malicous oracles\\n  --unpermissionedFeeds         permit unpermissioned feeds\\n  --unpermissionedVrf           permit unpermissioned VRF accounts\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 near create queue\\n","usage":"sbv2 near queue create --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId\\n    <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata <value>]\\n    [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--queueSize <value>] [--slashingEnabled]\\n    [--unpermissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers]","flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"[default: 0] oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--enableBufferRelayers","description":"enable oracles to fulfill buffer relayer requests"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--minStake=<value>","description":"[default: 0] minimum stake required by an oracle to join the queue"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] number of oracles to add to the queue"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--queueSize=<value>","description":"[default: 100] maximum number of oracles the queue can support"},{"flag":"--slashingEnabled","description":"permit slashing malicous oracles"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds"},{"flag":"--unpermissionedVrf","description":"permit unpermissioned VRF accounts GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 near create queue"]},{"id":"near-queue-feeds","permalink":"/cli/near/queue/feeds","topic":"near","command":"sbv2 near queue feeds","topics":["near","queue","feeds"],"markdown":"USAGE\\n  $ sbv2 near queue feeds QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  fetch all aggregators for a given queue account\\n\\nALIASES\\n  $ sbv2 near queue feeds\\n","usage":"sbv2 near queue feeds QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"fetch all aggregators for a given queue account","aliases":["sbv2 near queue feeds"]},{"id":"near-queue-list","permalink":"/cli/near/queue/list","topic":"near","command":"sbv2 near queue list","topics":["near","queue","list"],"markdown":"USAGE\\n  $ sbv2 near queue list QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  list aggregators for a given queue\\n\\nALIASES\\n  $ sbv2 near list queue\\n","usage":"sbv2 near queue list QUEUEADDRESS [-h] [-v] [-s] [--networkId testnet|mainnet|localnet] [--programId <value>] [-u\\n    <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"list aggregators for a given queue","aliases":["sbv2 near list queue"]},{"id":"near-queue-set","permalink":"/cli/near/queue/set","topic":"near","command":"sbv2 near queue set","topics":["near","queue","set"],"markdown":"USAGE\\n  $ sbv2 near queue set QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers]\\n\\nARGUMENTS\\n  QUEUEADDRESS  address of the queue in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the queue\\n  -h, --help                    Show CLI help.\\n  -r, --reward=<value>          oracle rewards for successfully responding to an update request\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --enableBufferRelayers        enable oracles to fulfill buffer relayer requests\\n  --metadata=<value>            metadata of the queue for easier identification\\n  --minStake=<value>            minimum stake required by an oracle to join the queue\\n  --name=<value>                name of the queue for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --oracleTimeout=<value>       number of oracles to add to the queue\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --slashingEnabled             permit slashing malicous oracles\\n  --unpermissionedFeeds         permit unpermissioned feeds\\n  --unpermissionedVrf           permit unpermissioned VRF accounts\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle queue\\n\\nALIASES\\n  $ sbv2 near create queue\\n","usage":"sbv2 near queue set QUEUEADDRESS --accountName <value> [-h] [-v] [-s] [--networkId testnet|mainnet|localnet]\\n    [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>] [--name <value>] [--metadata\\n    <value>] [--minStake <value>] [-r <value>] [--oracleTimeout <value>] [--slashingEnabled] [--unpermissionedFeeds]\\n    [--unpermissionedVrf] [--enableBufferRelayers]","args":[{"arg":"QUEUEADDRESS","description":"address of the queue in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the queue"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-r, --reward=<value>","description":"oracle rewards for successfully responding to an update request"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--enableBufferRelayers","description":"enable oracles to fulfill buffer relayer requests"},{"flag":"--metadata=<value>","description":"metadata of the queue for easier identification"},{"flag":"--minStake=<value>","description":"minimum stake required by an oracle to join the queue"},{"flag":"--name=<value>","description":"name of the queue for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--oracleTimeout=<value>","description":"number of oracles to add to the queue"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--slashingEnabled","description":"permit slashing malicous oracles"},{"flag":"--unpermissionedFeeds","description":"permit unpermissioned feeds"},{"flag":"--unpermissionedVrf","description":"permit unpermissioned VRF accounts GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle queue","aliases":["sbv2 near create queue"]},{"id":"near-set-aggregator","permalink":"/cli/near/set/aggregator","topic":"near","command":"sbv2 near set aggregator","topics":["near","set","aggregator"],"markdown":"USAGE\\n  $ sbv2 near set aggregator AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--queueAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod\\n    <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -a, --authority=<value>       alternate named account that will be the authority for the oracle\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --batchSize=<value>           number of oracles requested for each open round call\\n  --crankAddress=<value>        optional, address of the crank to add the aggregator to\\n  --forceReportPeriod=<value>   Number of seconds for which, even if the variance threshold is not passed, accept new\\n                                responses from oracles.\\n  --metadata=<value>            metadata of the crank for easier identification\\n  --minJobs=<value>             number of jobs that must respond before an oracle responds\\n  --minOracles=<value>          number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>                name of the crank for easier identification\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n  --queueAddress=<value>        optional, address of the new queue to add the aggregator to\\n  --updateInterval=<value>      set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>   percentage change between a previous accepted result and the next round before an oracle\\n                                reports a value on-chain. Used to conserve lease cost during low volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set a near aggregator\'s config\\n\\nALIASES\\n  $ sbv2 near set aggregator\\n","usage":"sbv2 near set aggregator AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json] [-a <value>]\\n    [--crankAddress <value>] [--queueAddress <value>] [--name <value>] [--metadata <value>] [--forceReportPeriod\\n    <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate named account that will be the authority for the oracle"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--crankAddress=<value>","description":"optional, address of the crank to add the aggregator to"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the crank for easier identification"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId"},{"flag":"--queueAddress=<value>","description":"optional, address of the new queue to add the aggregator to"},{"flag":"--updateInterval=<value>","description":"set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set a near aggregator\'s config","aliases":["sbv2 near set aggregator"]},{"id":"near-update-aggregator","permalink":"/cli/near/update/aggregator","topic":"near","command":"sbv2 near update aggregator","topics":["near","update","aggregator"],"markdown":"USAGE\\n  $ sbv2 near update aggregator AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]\\n\\nARGUMENTS\\n  AGGREGATORADDRESS  address of the aggregator in Uint8 or Base58 encoding\\n\\nFLAGS\\n  -h, --help                    Show CLI help.\\n  -s, --silent                  suppress cli prompts\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --accountName=<value>         (required) Named account to load from your nearCredentialsDir\\n  --nearCredentialsDir=<value>  [default: /Users/gally/.near-credentials] Alternative directory for near credentials.\\n                                Defaults to ~/.near-credentials\\n  --networkId=<option>          [default: testnet] Near network ID to connect to\\n                                <options: testnet|mainnet|localnet>\\n  --programId=<value>           Switchboard programId on the selected Near networkId\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  request a new value on-chain for an aggregator\\n\\nALIASES\\n  $ sbv2 near update aggregator\\n","usage":"sbv2 near update aggregator AGGREGATORADDRESS --accountName <value> [-h] [-v] [-s] [--networkId\\n    testnet|mainnet|localnet] [--programId <value>] [-u <value>] [--nearCredentialsDir <value>] [--json]","args":[{"arg":"AGGREGATORADDRESS","description":"address of the aggregator in Uint8 or Base58 encoding"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--accountName=<value>","description":"(required) Named account to load from your nearCredentialsDir"},{"flag":"--nearCredentialsDir=<value>","description":"[default: /Users/gally/.near-credentials] Alternative directory for near credentials. Defaults to ~/.near-credentials"},{"flag":"--networkId=<option>","description":"[default: testnet] Near network ID to connect to <options: testnet|mainnet|localnet>"},{"flag":"--programId=<value>","description":"Switchboard programId on the selected Near networkId GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"request a new value on-chain for an aggregator","aliases":["sbv2 near update aggregator"]},{"id":"solana-aggregator-add_history","permalink":"/cli/solana/aggregator/add_history","topic":"solana","command":"sbv2 solana aggregator add history","topics":["solana","aggregator","add","history"],"markdown":"USAGE\\n  $ sbv2 solana aggregator add history AGGREGATORKEY --historyLimit <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--force] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --force                  overwrite an existing history buffer if one already exists\\n  --historyLimit=<value>   (required) the number of samples to store before overwriting old samples\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  add a history buffer to an aggregator\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:add:history\\n","usage":"sbv2 solana aggregator add history AGGREGATORKEY --historyLimit <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--force] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--force","description":"overwrite an existing history buffer if one already exists"},{"flag":"--historyLimit=<value>","description":"(required) the number of samples to store before overwriting old samples"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"add a history buffer to an aggregator","examples":["sbv2 solana:aggregator:add:history"]},{"id":"solana-aggregator-add_job","permalink":"/cli/solana/aggregator/add_job","topic":"solana","command":"sbv2 solana aggregator add job","topics":["solana","aggregator","add","job"],"markdown":"USAGE\\n  $ sbv2 solana aggregator add job AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--jobDefinition <value>] [--jobKey\\n    <value>] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>     alternate keypair that is the authority for the aggregator\\n  -h, --help                  Show CLI help.\\n  -k, --keypair=<value>       keypair that will pay for onchain transactions. defaults to new account authority if no\\n                              alternate authority provided\\n  -s, --silent                suppress cli prompts\\n  -u, --rpcUrl=<value>        alternate RPC url\\n  -v, --verbose               log everything\\n  --cluster=<option>          the solana cluster to connect to\\n                              <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>       [default: confirmed] transaction commitment level to use\\n                              <options: confirmed|finalized|processed>\\n  --jobDefinition=<value>...  filesystem path of job json definition file\\n  --jobKey=<value>...         public key of an existing job account to add to an aggregator\\n  --ledger                    enable ledger support\\n  --ledgerPath=<value>        HID path to the ledger\\n  --mainnetBeta               WARNING: use mainnet-beta solana cluster\\n  --programId=<value>         alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  add jobs to an aggregator\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator add job\\n","usage":"sbv2 solana aggregator add job AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--jobDefinition <value>] [--jobKey\\n    <value>] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--jobDefinition=<value>...","description":"filesystem path of job json definition file"},{"flag":"--jobKey=<value>...","description":"public key of an existing job account to add to an aggregator"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"add jobs to an aggregator","examples":["sbv2 solana aggregator add job"]},{"id":"solana-aggregator-authority","permalink":"/cli/solana/aggregator/authority","topic":"solana","command":"sbv2 solana aggregator authority","topics":["solana","aggregator","authority"],"markdown":"USAGE\\n  $ sbv2 solana aggregator authority AGGREGATORKEY --newAuthority <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator and required to make config\\n                           changes\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --newAuthority=<value>   (required)\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n","usage":"sbv2 solana aggregator authority AGGREGATORKEY --newAuthority <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator and required to make config\\n                           changes\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --newAuthority=<value>   (required)\\n  --programId=<value>      alternative Switchboard program ID to interact with"},{"id":"solana-aggregator-close","permalink":"/cli/solana/aggregator/close","topic":"solana","command":"sbv2 solana aggregator close","topics":["solana","aggregator","close"],"markdown":"USAGE\\n  $ sbv2 solana aggregator close AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator and required to make config\\n                           changes\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  close an aggregator and associated PDA accounts on devnet\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator close J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator close AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator and required to make config changes"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"close an aggregator and associated PDA accounts on devnet","examples":["sbv2 solana aggregator close J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-create","permalink":"/cli/solana/aggregator/create","topic":"solana","command":"sbv2 solana aggregator create","topics":["solana","aggregator","create"],"markdown":"USAGE\\n  $ sbv2 solana aggregator create QUEUEKEY --updateInterval <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>]\\n    [--aggregatorKeypair <value>] [--name <value>] [--metadata <value>] [--batchSize <value>] [--minJobs <value>]\\n    [--minOracles <value>] [--forceReportPeriod <value>] [--varianceThreshold <value>] [--historyLimit <value>]\\n    [--crankKey <value> | --disableCrank] [--queueAuthority <value>] [--enable] [--leaseAmount <value>] [-j <value>]\\n    [--jobKey <value>] [--slidingWindow] [--basePriorityFee <value>] [--priorityFeeBump <value>]\\n    [--priorityFeeBumpPeriod <value>] [--maxPriorityFeeMultiplier <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the oracle queue to create an aggregator on\\n\\nFLAGS\\n  -a, --authority=<value>             alternate keypair that is the authority for the aggregator\\n  -h, --help                          Show CLI help.\\n  -j, --job=<value>...                filesystem path to job definition file\\n  -k, --keypair=<value>               keypair that will pay for onchain transactions. defaults to new account authority\\n                                      if no alternate authority provided\\n  -s, --silent                        suppress cli prompts\\n  -u, --rpcUrl=<value>                alternate RPC url\\n  -v, --verbose                       log everything\\n  --aggregatorKeypair=<value>         keypair to use for aggregator account. This will be the account\'s publicKey\\n  --basePriorityFee=<value>\\n  --batchSize=<value>                 [default: 1] number of oracles requested for each open round call\\n  --cluster=<option>                  the solana cluster to connect to\\n                                      <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>               [default: confirmed] transaction commitment level to use\\n                                      <options: confirmed|finalized|processed>\\n  --crankKey=<value>                  public key of the crank to join\\n  --disableCrank                      whether the newly created feed can be pushed onto a crank. irreversible\\n  --enable                            set permissions to PERMIT_ORACLE_QUEUE_USAGE\\n  --forceReportPeriod=<value>         Number of seconds for which, even if the variance threshold is not passed, accept\\n                                      new responses from oracles.\\n  --historyLimit=<value>              number of historical samples to store\\n  --jobKey=<value>...                 public key of existing job account\\n  --leaseAmount=<value>               [default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5\\n                                      wSOL\\n  --ledger                            enable ledger support\\n  --ledgerPath=<value>                HID path to the ledger\\n  --mainnetBeta                       WARNING: use mainnet-beta solana cluster\\n  --maxPriorityFeeMultiplier=<value>\\n  --metadata=<value>                  metadata of the aggregator\\n  --minJobs=<value>                   [default: 1] number of jobs that must respond before an oracle responds\\n  --minOracles=<value>                [default: 1] number of oracles that must respond before a value is accepted\\n                                      on-chain\\n  --name=<value>                      name of the aggregator\\n  --priorityFeeBump=<value>\\n  --priorityFeeBumpPeriod=<value>\\n  --programId=<value>                 alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>            alternative keypair to use for queue authority\\n  --slidingWindow                     enable sliding window resolution mode\\n  --updateInterval=<value>            (required) set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>         [default: 0] percentage change between a previous accepted result and the next\\n                                      round before an oracle reports a value on-chain. Used to conserve lease cost\\n                                      during low volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aggregator account\\n","usage":"sbv2 solana aggregator create QUEUEKEY --updateInterval <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>]\\n    [--aggregatorKeypair <value>] [--name <value>] [--metadata <value>] [--batchSize <value>] [--minJobs <value>]\\n    [--minOracles <value>] [--forceReportPeriod <value>] [--varianceThreshold <value>] [--historyLimit <value>]\\n    [--crankKey <value> | --disableCrank] [--queueAuthority <value>] [--enable] [--leaseAmount <value>] [-j <value>]\\n    [--jobKey <value>] [--slidingWindow] [--basePriorityFee <value>] [--priorityFeeBump <value>]\\n    [--priorityFeeBumpPeriod <value>] [--maxPriorityFeeMultiplier <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the oracle queue to create an aggregator on"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-j, --job=<value>...","description":"filesystem path to job definition file"},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--aggregatorKeypair=<value>","description":"keypair to use for aggregator account. This will be the account\'s publicKey"},{"flag":"--basePriorityFee=<value>","description":""},{"flag":"--batchSize=<value>","description":"[default: 1] number of oracles requested for each open round call"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--crankKey=<value>","description":"public key of the crank to join"},{"flag":"--disableCrank","description":"whether the newly created feed can be pushed onto a crank. irreversible"},{"flag":"--enable","description":"set permissions to PERMIT_ORACLE_QUEUE_USAGE"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--historyLimit=<value>","description":"number of historical samples to store"},{"flag":"--jobKey=<value>...","description":"public key of existing job account"},{"flag":"--leaseAmount=<value>","description":"[default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5 wSOL"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--maxPriorityFeeMultiplier=<value>","description":""},{"flag":"--metadata=<value>","description":"metadata of the aggregator"},{"flag":"--minJobs=<value>","description":"[default: 1] number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"[default: 1] number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator"},{"flag":"--priorityFeeBump=<value>","description":""},{"flag":"--priorityFeeBumpPeriod=<value>","description":""},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"alternative keypair to use for queue authority"},{"flag":"--slidingWindow","description":"enable sliding window resolution mode"},{"flag":"--updateInterval=<value>","description":"(required) set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"[default: 0] percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aggregator account"},{"id":"solana-aggregator-create_json","permalink":"/cli/solana/aggregator/create_json","topic":"solana","command":"sbv2 solana aggregator create json","topics":["solana","aggregator","create","json"],"markdown":"USAGE\\n  $ sbv2 solana aggregator create json DEFINITIONFILE [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-q <value>] [-a <value>]\\n    [--leaseAmount <value>]\\n\\nARGUMENTS\\n  DEFINITIONFILE  filesystem path of queue definition json file\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that will be the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -q, --queueKey=<value>   public key of the oracle queue to create aggregator for\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --leaseAmount=<value>    [default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5 wSOL\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aggregator from a json file\\n\\nALIASES\\n  $ sbv2 solana json create aggregator\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator create json examples/aggregator.json --keypair ../payer-keypair.json --queueKey GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --outputFile aggregator.schema.json\\n","usage":"sbv2 solana aggregator create json DEFINITIONFILE [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-q <value>] [-a <value>]\\n    [--leaseAmount <value>]","args":[{"arg":"DEFINITIONFILE","description":"filesystem path of queue definition json file"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-q, --queueKey=<value>","description":"public key of the oracle queue to create aggregator for"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--leaseAmount=<value>","description":"[default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5 wSOL"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aggregator from a json file","aliases":["sbv2 solana json create aggregator"],"examples":["sbv2 solana aggregator create json examples/aggregator.json --keypair ../payer-keypair.json --queueKey GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --outputFile aggregator.schema.json"]},{"id":"solana-aggregator-deposit","permalink":"/cli/solana/aggregator/deposit","topic":"solana","command":"sbv2 solana aggregator deposit","topics":["solana","aggregator","deposit"],"markdown":"USAGE\\n  $ sbv2 solana aggregator deposit AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --amount=<value>       (required) amount to deposit into the lease escrow\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  fund and re-enable an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator fund\\n  $ sbv2 solana aggregator deposit\\n  $ sbv2 solana aggregator extend\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator deposit AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) amount to deposit into the lease escrow"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"fund and re-enable an aggregator lease","aliases":["sbv2 solana aggregator fund","sbv2 solana aggregator deposit","sbv2 solana aggregator extend"],"examples":["sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-extend","permalink":"/cli/solana/aggregator/extend","topic":"solana","command":"sbv2 solana aggregator extend","topics":["solana","aggregator","extend"],"markdown":"USAGE\\n  $ sbv2 solana aggregator extend AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --amount=<value>       (required) amount to deposit into the lease escrow\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  fund and re-enable an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator fund\\n  $ sbv2 solana aggregator deposit\\n  $ sbv2 solana aggregator extend\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator extend AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) amount to deposit into the lease escrow"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"fund and re-enable an aggregator lease","aliases":["sbv2 solana aggregator fund","sbv2 solana aggregator deposit","sbv2 solana aggregator extend"],"examples":["sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-fund","permalink":"/cli/solana/aggregator/fund","topic":"solana","command":"sbv2 solana aggregator fund","topics":["solana","aggregator","fund"],"markdown":"USAGE\\n  $ sbv2 solana aggregator fund AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --amount=<value>       (required) amount to deposit into the lease escrow\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  fund and re-enable an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator fund\\n  $ sbv2 solana aggregator deposit\\n  $ sbv2 solana aggregator extend\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator fund AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) amount to deposit into the lease escrow"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"fund and re-enable an aggregator lease","aliases":["sbv2 solana aggregator fund","sbv2 solana aggregator deposit","sbv2 solana aggregator extend"],"examples":["sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-history","permalink":"/cli/solana/aggregator/history","topic":"solana","command":"sbv2 solana aggregator history","topics":["solana","aggregator","history"],"markdown":"USAGE\\n  $ sbv2 solana aggregator history AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--metrics]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --metrics              print metrics on an aggregators history like average update interval\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an aggregator\'s history\'\\n","usage":"sbv2 solana aggregator history AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--metrics]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metrics","description":"print metrics on an aggregators history like average update interval"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an aggregator\'s history\'"},{"id":"solana-aggregator-lease_set","permalink":"/cli/solana/aggregator/lease_set","topic":"solana","command":"sbv2 solana aggregator lease set","topics":["solana","aggregator","lease","set"],"markdown":"USAGE\\n  $ sbv2 solana aggregator lease set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n    [--newAuthority <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair delegated as the authority for managing the lease account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --newAuthority=<value>   new lease withdraw authority. if not set, defaults to the aggregator authority\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queuePubkey=<value>    override the aggregators current queue. useful for withdrawing from a lease after moving to a\\n                           new queue\\n\\nDESCRIPTION\\n  set a lease\'s withdraw authority\\n\\nALIASES\\n  $ sbv2 solana aggregator lease set\\n\\nEXAMPLES\\n  $ sbv2 solana:lease:set GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator lease set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n    [--newAuthority <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair delegated as the authority for managing the lease account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--newAuthority=<value>","description":"new lease withdraw authority. if not set, defaults to the aggregator authority"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queuePubkey=<value>","description":"override the aggregators current queue. useful for withdrawing from a lease after moving to a new queue"}],"description":"set a lease\'s withdraw authority","aliases":["sbv2 solana aggregator lease set"],"examples":["sbv2 solana:lease:set GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-list","permalink":"/cli/solana/aggregator/list","topic":"solana","command":"sbv2 solana aggregator list","topics":["solana","aggregator","list"],"markdown":"USAGE\\n  $ sbv2 solana aggregator list AUTHORITYKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet]\\n    [-u <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  AUTHORITYKEY  public key of the aggregator authority\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  get a list of aggregators from a provided authority pubkey\\n","usage":"sbv2 solana aggregator list AUTHORITYKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet]\\n    [-u <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"AUTHORITYKEY","description":"public key of the aggregator authority"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"get a list of aggregators from a provided authority pubkey"},{"id":"solana-aggregator-lock","permalink":"/cli/solana/aggregator/lock","topic":"solana","command":"sbv2 solana aggregator lock","topics":["solana","aggregator","lock"],"markdown":"USAGE\\n  $ sbv2 solana aggregator lock AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  lock an aggregator\'s configuration and prevent further changes\\n","usage":"sbv2 solana aggregator lock AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"lock an aggregator\'s configuration and prevent further changes"},{"id":"solana-aggregator-metrics","permalink":"/cli/solana/aggregator/metrics","topic":"solana","command":"sbv2 solana aggregator metrics","topics":["solana","aggregator","metrics"],"markdown":"USAGE\\n  $ sbv2 solana aggregator metrics AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--period <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --period=<value>...    the period to collect metrics for. Ex. 3600 will collect update metrics for the last 1hr\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an aggregator\'s metrics\'\\n","usage":"sbv2 solana aggregator metrics AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--period <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--period=<value>...","description":"the period to collect metrics for. Ex. 3600 will collect update metrics for the last 1hr"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an aggregator\'s metrics\'"},{"id":"solana-aggregator-mode","permalink":"/cli/solana/aggregator/mode","topic":"solana","command":"sbv2 solana aggregator mode","topics":["solana","aggregator","mode"],"markdown":"USAGE\\n  $ sbv2 solana aggregator mode AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>] [--slidingWindow |\\n    --roundResolution]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator and required to make config\\n                           changes\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --roundResolution        enable sliding window mode\\n  --slidingWindow          enable sliding window mode\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set an aggregators resolution mode config\\n","usage":"sbv2 solana aggregator mode AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>] [--slidingWindow |\\n    --roundResolution]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator and required to make config changes"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--roundResolution","description":"enable sliding window mode"},{"flag":"--slidingWindow","description":"enable sliding window mode GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set an aggregators resolution mode config"},{"id":"solana-aggregator-open","permalink":"/cli/solana/aggregator/open","topic":"solana","command":"sbv2 solana aggregator open","topics":["solana","aggregator","open"],"markdown":"USAGE\\n  $ sbv2 solana aggregator open-round AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new aggregator result from a set of oracles\\n\\nALIASES\\n  $ sbv2 solana aggregator open-round\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator open-round AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new aggregator result from a set of oracles","aliases":["sbv2 solana aggregator open-round"],"examples":["sbv2 solana aggregator update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-permission_create","permalink":"/cli/solana/aggregator/permission_create","topic":"solana","command":"sbv2 solana aggregator permission create","topics":["solana","aggregator","permission","create"],"markdown":"USAGE\\n  $ sbv2 solana aggregator permission create AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  create a permission account for an aggregator\\n","usage":"sbv2 solana aggregator permission create AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"create a permission account for an aggregator"},{"id":"solana-aggregator-print","permalink":"/cli/solana/aggregator/print","topic":"solana","command":"sbv2 solana aggregator print","topics":["solana","aggregator","print"],"markdown":"USAGE\\n  $ sbv2 solana aggregator print AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--queuePubkey <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n  --queuePubkey=<value>  override the aggregators current queue. useful for viewing permission lease accounts if an\\n                         aggregator has moved queues\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an aggregator and it\'s associated accounts\\n","usage":"sbv2 solana aggregator print AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--queuePubkey <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queuePubkey=<value>","description":"override the aggregators current queue. useful for viewing permission lease accounts if an aggregator has moved queues GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an aggregator and it\'s associated accounts"},{"id":"solana-aggregator-remove_job","permalink":"/cli/solana/aggregator/remove_job","topic":"solana","command":"sbv2 solana aggregator remove job","topics":["solana","aggregator","remove","job"],"markdown":"USAGE\\n  $ sbv2 solana aggregator remove job AGGREGATORKEY JOBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n  JOBKEY         public key of an existing job account to remove from an aggregator\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  remove a switchboard job account from an aggregator\\n","usage":"sbv2 solana aggregator remove job AGGREGATORKEY JOBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"},{"arg":"","description":"JOBKEY"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"remove a switchboard job account from an aggregator"},{"id":"solana-aggregator-set","permalink":"/cli/solana/aggregator/set","topic":"solana","command":"sbv2 solana aggregator set","topics":["solana","aggregator","set"],"markdown":"USAGE\\n  $ sbv2 solana aggregator set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>] [--name <value>]\\n    [--metadata <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>] [--forceReportPeriod <value>] [--basePriorityFee <value>] [--priorityFeeBump <value>]\\n    [--priorityFeeBumpPeriod <value>] [--maxPriorityFeeMultiplier <value>] [--enableSlidingWindow]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>             alternate keypair that is the authority for the aggregator and required to make\\n                                      config changes\\n  -h, --help                          Show CLI help.\\n  -k, --keypair=<value>               keypair that will pay for onchain transactions. defaults to new account authority\\n                                      if no alternate authority provided\\n  -s, --silent                        suppress cli prompts\\n  -u, --rpcUrl=<value>                alternate RPC url\\n  -v, --verbose                       log everything\\n  --basePriorityFee=<value>\\n  --batchSize=<value>                 number of oracles requested for each open round call\\n  --cluster=<option>                  the solana cluster to connect to\\n                                      <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>               [default: confirmed] transaction commitment level to use\\n                                      <options: confirmed|finalized|processed>\\n  --enableSlidingWindow               set the aggregator resolution mode\\n  --forceReportPeriod=<value>         Number of seconds for which, even if the variance threshold is not passed, accept\\n                                      new responses from oracles.\\n  --ledger                            enable ledger support\\n  --ledgerPath=<value>                HID path to the ledger\\n  --mainnetBeta                       WARNING: use mainnet-beta solana cluster\\n  --maxPriorityFeeMultiplier=<value>\\n  --metadata=<value>                  metadata of the aggregator\\n  --minJobs=<value>                   number of jobs that must respond before an oracle responds\\n  --minOracles=<value>                number of oracles that must respond before a value is accepted on-chain\\n  --name=<value>                      name of the aggregator\\n  --priorityFeeBump=<value>\\n  --priorityFeeBumpPeriod=<value>\\n  --programId=<value>                 alternative Switchboard program ID to interact with\\n  --updateInterval=<value>            set an aggregator\'s minimum update delay\\n  --varianceThreshold=<value>         percentage change between a previous accepted result and the next round before an\\n                                      oracle reports a value on-chain. Used to conserve lease cost during low volatility\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set an aggregators config\\n","usage":"sbv2 solana aggregator set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-a <value>] [--name <value>]\\n    [--metadata <value>] [--batchSize <value>] [--minJobs <value>] [--minOracles <value>] [--updateInterval <value>]\\n    [--varianceThreshold <value>] [--forceReportPeriod <value>] [--basePriorityFee <value>] [--priorityFeeBump <value>]\\n    [--priorityFeeBumpPeriod <value>] [--maxPriorityFeeMultiplier <value>] [--enableSlidingWindow]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator and required to make config changes"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--basePriorityFee=<value>","description":""},{"flag":"--batchSize=<value>","description":"number of oracles requested for each open round call"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--enableSlidingWindow","description":"set the aggregator resolution mode"},{"flag":"--forceReportPeriod=<value>","description":"Number of seconds for which, even if the variance threshold is not passed, accept new responses from oracles."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--maxPriorityFeeMultiplier=<value>","description":""},{"flag":"--metadata=<value>","description":"metadata of the aggregator"},{"flag":"--minJobs=<value>","description":"number of jobs that must respond before an oracle responds"},{"flag":"--minOracles=<value>","description":"number of oracles that must respond before a value is accepted on-chain"},{"flag":"--name=<value>","description":"name of the aggregator"},{"flag":"--priorityFeeBump=<value>","description":""},{"flag":"--priorityFeeBumpPeriod=<value>","description":""},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--updateInterval=<value>","description":"set an aggregator\'s minimum update delay"},{"flag":"--varianceThreshold=<value>","description":"percentage change between a previous accepted result and the next round before an oracle reports a value on-chain. Used to conserve lease cost during low volatility GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set an aggregators config"},{"id":"solana-aggregator-transfer","permalink":"/cli/solana/aggregator/transfer","topic":"solana","command":"sbv2 solana aggregator transfer","topics":["solana","aggregator","transfer"],"markdown":"USAGE\\n  $ sbv2 solana aggregator transfer AGGREGATORKEY --newQueue <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--newCrank <value>]\\n    [--loadAmount <value>] [--enable] [--queueAuthority <value>] [--force]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>   alternate keypair that is the authority for the aggregator\\n  -h, --help                Show CLI help.\\n  -k, --keypair=<value>     keypair that will pay for onchain transactions. defaults to new account authority if no\\n                            alternate authority provided\\n  -s, --silent              suppress cli prompts\\n  -u, --rpcUrl=<value>      alternate RPC url\\n  -v, --verbose             log everything\\n  --cluster=<option>        the solana cluster to connect to\\n                            <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>     [default: confirmed] transaction commitment level to use\\n                            <options: confirmed|finalized|processed>\\n  --enable                  enable permissions on the new queue\\n  --force                   skip permission checks\\n  --ledger                  enable ledger support\\n  --ledgerPath=<value>      HID path to the ledger\\n  --loadAmount=<value>      [default: 0.0] amount of funds to load into the new lease, in addition to the funds\\n                            remaining in the old lease account\\n  --mainnetBeta             WARNING: use mainnet-beta solana cluster\\n  --newCrank=<value>        publicKey of the crank to transfer to\\n  --newQueue=<value>        (required) publicKey of the new queue to transfer to\\n  --programId=<value>       alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>  alternate keypair that is the authority for the queue. only used if enabling permissions in\\n                            one transaction\\n\\nDESCRIPTION\\n  transfer an aggregator to a new queue\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator transfer GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --mainnetBeta --loadAmount 0.1 --newQueue 3HBb2DQqDfuMdzWxNk1Eo9RTMkFYmuEAd32RiLKn9pAn --newCrank GdNVLWzcE6h9SPuSbmu69YzxAj8enim9t6mjzuqTXgLd --keypair ~/.config/solana/id.json\\n","usage":"sbv2 solana aggregator transfer AGGREGATORKEY --newQueue <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--newCrank <value>]\\n    [--loadAmount <value>] [--enable] [--queueAuthority <value>] [--force]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--enable","description":"enable permissions on the new queue"},{"flag":"--force","description":"skip permission checks"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--loadAmount=<value>","description":"[default: 0.0] amount of funds to load into the new lease, in addition to the funds remaining in the old lease account"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--newCrank=<value>","description":"publicKey of the crank to transfer to"},{"flag":"--newQueue=<value>","description":"(required) publicKey of the new queue to transfer to"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"alternate keypair that is the authority for the queue. only used if enabling permissions in one transaction"}],"description":"transfer an aggregator to a new queue","examples":["sbv2 solana aggregator transfer GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --mainnetBeta --loadAmount 0.1 --newQueue 3HBb2DQqDfuMdzWxNk1Eo9RTMkFYmuEAd32RiLKn9pAn --newCrank GdNVLWzcE6h9SPuSbmu69YzxAj8enim9t6mjzuqTXgLd --keypair ~/.config/solana/id.json"]},{"id":"solana-aggregator-update","permalink":"/cli/solana/aggregator/update","topic":"solana","command":"sbv2 solana aggregator update","topics":["solana","aggregator","update"],"markdown":"USAGE\\n  $ sbv2 solana aggregator update AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new aggregator result from a set of oracles\\n\\nALIASES\\n  $ sbv2 solana aggregator open-round\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator update AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new aggregator result from a set of oracles","aliases":["sbv2 solana aggregator open-round"],"examples":["sbv2 solana aggregator update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json"]},{"id":"solana-aggregator-watch","permalink":"/cli/solana/aggregator/watch","topic":"solana","command":"sbv2 solana aggregator watch","topics":["solana","aggregator","watch"],"markdown":"USAGE\\n  $ sbv2 solana aggregator watch AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-t <value>] [-f <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -f, --outfile=<value>  save results to a file\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -t, --timeout=<value>  time to watch feed for updates\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  watch an aggregator account and stream the results\\n","usage":"sbv2 solana aggregator watch AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-t <value>] [-f <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -f, --outfile=<value>","description":"save results to a file"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-t, --timeout=<value>","description":"time to watch feed for updates"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"watch an aggregator account and stream the results"},{"id":"solana-aggregator-withdraw","permalink":"/cli/solana/aggregator/withdraw","topic":"solana","command":"sbv2 solana aggregator withdraw","topics":["solana","aggregator","withdraw"],"markdown":"USAGE\\n  $ sbv2 solana aggregator withdraw AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  keypair delegated as the authority for managing the lease account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --amount=<value>         (required) token amount to withdraw from lease account\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queuePubkey=<value>    override the aggregators current queue. useful for withdrawing from a lease after moving to a\\n                           new queue\\n\\nDESCRIPTION\\n  withdraw funds from an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator withdraw\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana aggregator withdraw AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"keypair delegated as the authority for managing the lease account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) token amount to withdraw from lease account"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queuePubkey=<value>","description":"override the aggregators current queue. useful for withdrawing from a lease after moving to a new queue"}],"description":"withdraw funds from an aggregator lease","aliases":["sbv2 solana aggregator withdraw"],"examples":["sbv2 solana:aggregator:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-anchor-test","permalink":"/cli/solana/anchor/test","topic":"solana","command":"sbv2 solana anchor test","topics":["solana","anchor","test"],"markdown":"USAGE\\n  $ sbv2 solana anchor test [-h] [-v] [-s] [--mainnetBeta | --cluster localnet|devnet] [-u <value>] [--mainnetRpcUrl\\n    <value>] [--programId <value>] [-d <value>] [--oracleKey <value>] [-k <value>] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>] [-t <value>] [--detach] [--testValidatorArgs <value>]\\n\\nFLAGS\\n  -d, --switchboardDir=<value>  directory with switchboard.env to load a switchboard environment\\n  -h, --help                    Show CLI help.\\n  -k, --keypair=<value>         keypair that will pay for onchain transactions. defaults to new account authority if no\\n                                alternate authority provided\\n  -s, --silent                  suppress docker logging\\n  -t, --timeout=<value>         [default: 120] number of seconds before ending the docker process\\n  -u, --rpcUrl=<value>          alternate RPC url\\n  -v, --verbose                 log everything\\n  --cluster=<option>            [default: localnet] cluster\\n                                <options: localnet|devnet>\\n  --detach                      keep the localnet rpc running\\n  --mainnetBeta                 WARNING: use mainnet-beta solana cluster\\n  --mainnetRpcUrl=<value>       [default: https://api.mainnet-beta.solana.com/] Solana mainnet RPC URL to use for the\\n                                oracle task runner\\n  --nodeImage=<value>           [default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up\\n  --oracleKey=<value>           public key of the oracle to start-up\\n  --programId=<value>           alternative Switchboard program ID to interact with\\n  --releaseChannel=<option>     [default: testnet] the oracle release channel\\n                                <options: testnet|mainnet>\\n  --testValidatorArgs=<value>   additional args passed to the local solana validator\\n\\nDESCRIPTION\\n  run anchor test and a switchboard oracle in parallel\\n\\nALIASES\\n  $ sbv2 anchor test\\n","usage":"sbv2 solana anchor test [-h] [-v] [-s] [--mainnetBeta | --cluster localnet|devnet] [-u <value>] [--mainnetRpcUrl\\n    <value>] [--programId <value>] [-d <value>] [--oracleKey <value>] [-k <value>] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>] [-t <value>] [--detach] [--testValidatorArgs <value>]","flags":[{"flag":" -d, --switchboardDir=<value>","description":"directory with switchboard.env to load a switchboard environment"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress docker logging"},{"flag":"-t, --timeout=<value>","description":"[default: 120] number of seconds before ending the docker process"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"[default: localnet] cluster <options: localnet|devnet>"},{"flag":"--detach","description":"keep the localnet rpc running"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--mainnetRpcUrl=<value>","description":"[default: https://api.mainnet-beta.solana.com/] Solana mainnet RPC URL to use for the oracle task runner"},{"flag":"--nodeImage=<value>","description":"[default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up"},{"flag":"--oracleKey=<value>","description":"public key of the oracle to start-up"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--releaseChannel=<option>","description":"[default: testnet] the oracle release channel <options: testnet|mainnet>"},{"flag":"--testValidatorArgs=<value>","description":"additional args passed to the local solana validator"}],"description":"run anchor test and a switchboard oracle in parallel","aliases":["sbv2 anchor test"]},{"id":"solana-buffer-create","permalink":"/cli/solana/buffer/create","topic":"solana","command":"sbv2 solana buffer create","topics":["solana","buffer","create"],"markdown":"USAGE\\n  $ sbv2 solana buffer create QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [--bufferKeypair <value>] [-a <value>] [-n <value>] [--minUpdateDelaySeconds <value>]\\n    [--jobDefinition <value> | --jobKey <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the oracle queue account\\n\\nFLAGS\\n  -a, --authority=<value>          alternate keypair that will be the buffer relayer authority\\n  -h, --help                       Show CLI help.\\n  -k, --keypair=<value>            keypair that will pay for onchain transactions. defaults to new account authority if\\n                                   no alternate authority provided\\n  -n, --name=<value>               name of the buffer account\\n  -s, --silent                     suppress cli prompts\\n  -u, --rpcUrl=<value>             alternate RPC url\\n  -v, --verbose                    log everything\\n  --bufferKeypair=<value>          keypair to use for the buffer relayer account. This will be the account\'s publicKey\\n  --cluster=<option>               the solana cluster to connect to\\n                                   <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>            [default: confirmed] transaction commitment level to use\\n                                   <options: confirmed|finalized|processed>\\n  --jobDefinition=<value>          filesystem path to job definition\\n  --jobKey=<value>                 public key of existing job account\\n  --ledger                         enable ledger support\\n  --ledgerPath=<value>             HID path to the ledger\\n  --mainnetBeta                    WARNING: use mainnet-beta solana cluster\\n  --minUpdateDelaySeconds=<value>  [default: 30] minimum number of seconds between update calls\\n  --programId=<value>              alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a buffer relayer account\\n","usage":"sbv2 solana buffer create QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [--bufferKeypair <value>] [-a <value>] [-n <value>] [--minUpdateDelaySeconds <value>]\\n    [--jobDefinition <value> | --jobKey <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the oracle queue account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that will be the buffer relayer authority"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-n, --name=<value>","description":"name of the buffer account"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--bufferKeypair=<value>","description":"keypair to use for the buffer relayer account. This will be the account\'s publicKey"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--jobDefinition=<value>","description":"filesystem path to job definition"},{"flag":"--jobKey=<value>","description":"public key of existing job account"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--minUpdateDelaySeconds=<value>","description":"[default: 30] minimum number of seconds between update calls"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a buffer relayer account"},{"id":"solana-buffer-open","permalink":"/cli/solana/buffer/open","topic":"solana","command":"sbv2 solana buffer open","topics":["solana","buffer","open"],"markdown":"USAGE\\n  $ sbv2 solana buffer open-round BUFFERRELAYERKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  BUFFERRELAYERKEY  public key of the buffer relayer account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new buffer relayer result\\n\\nALIASES\\n  $ sbv2 solana buffer open-round\\n\\nEXAMPLES\\n  $ sbv2 solana buffer update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\\n","usage":"sbv2 solana buffer open-round BUFFERRELAYERKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"BUFFERRELAYERKEY","description":"public key of the buffer relayer account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new buffer relayer result","aliases":["sbv2 solana buffer open-round"],"examples":["sbv2 solana buffer update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json"]},{"id":"solana-buffer-update","permalink":"/cli/solana/buffer/update","topic":"solana","command":"sbv2 solana buffer update","topics":["solana","buffer","update"],"markdown":"USAGE\\n  $ sbv2 solana buffer update BUFFERRELAYERKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  BUFFERRELAYERKEY  public key of the buffer relayer account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new buffer relayer result\\n\\nALIASES\\n  $ sbv2 solana buffer open-round\\n\\nEXAMPLES\\n  $ sbv2 solana buffer update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json\\n","usage":"sbv2 solana buffer update BUFFERRELAYERKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"BUFFERRELAYERKEY","description":"public key of the buffer relayer account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new buffer relayer result","aliases":["sbv2 solana buffer open-round"],"examples":["sbv2 solana buffer update J7j9xX8JP2B2ErvUzuqGAKBGeggsxPyFXj5MqZcYDxfa --keypair ../payer-keypair.json"]},{"id":"solana-crank-create","permalink":"/cli/solana/crank/create","topic":"solana","command":"sbv2 solana crank create","topics":["solana","crank","create"],"markdown":"USAGE\\n  $ sbv2 solana crank create QUEUEKEY -s <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-n <value>] [--metadata\\n    <value>] [--crankKeypair <value>] [--dataBufferKeypair <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the oracle queue to create a crank on\\n\\nFLAGS\\n  -h, --help                   Show CLI help.\\n  -k, --keypair=<value>        keypair that will pay for onchain transactions. defaults to new account authority if no\\n                               alternate authority provided\\n  -n, --name=<value>           name of the crank for easier identification\\n  -s, --silent                 suppress cli prompts\\n  -s, --size=<value>           (required) maximum number of rows a crank can support\\n  -u, --rpcUrl=<value>         alternate RPC url\\n  -v, --verbose                log everything\\n  --cluster=<option>           the solana cluster to connect to\\n                               <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>        [default: confirmed] transaction commitment level to use\\n                               <options: confirmed|finalized|processed>\\n  --crankKeypair=<value>       keypair to use for the crank account. This will be the account\'s publicKey\\n  --dataBufferKeypair=<value>  keypair to use for the crank data buffer account.\\n  --ledger                     enable ledger support\\n  --ledgerPath=<value>         HID path to the ledger\\n  --mainnetBeta                WARNING: use mainnet-beta solana cluster\\n  --metadata=<value>           metadata of the crank for easier identification\\n  --programId=<value>          alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new crank account\\n","usage":"sbv2 solana crank create QUEUEKEY -s <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-n <value>] [--metadata\\n    <value>] [--crankKeypair <value>] [--dataBufferKeypair <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the oracle queue to create a crank on"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-n, --name=<value>","description":"name of the crank for easier identification"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-s, --size=<value>","description":"(required) maximum number of rows a crank can support"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--crankKeypair=<value>","description":"keypair to use for the crank account. This will be the account\'s publicKey"},{"flag":"--dataBufferKeypair=<value>","description":"keypair to use for the crank data buffer account."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metadata=<value>","description":"metadata of the crank for easier identification"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new crank account"},{"id":"solana-crank-events","permalink":"/cli/solana/crank/events","topic":"solana","command":"sbv2 solana crank events","topics":["solana","crank","events"],"markdown":"USAGE\\n  $ sbv2 solana crank events AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-t <value>] [-f <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -f, --outfile=<value>  save results to a file\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -t, --timeout=<value>  time to watch feed for updates\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  watch an aggregator account and stream the on-chain events\\n","usage":"sbv2 solana crank events AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-t <value>] [-f <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -f, --outfile=<value>","description":"save results to a file"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-t, --timeout=<value>","description":"time to watch feed for updates"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"watch an aggregator account and stream the on-chain events"},{"id":"solana-crank-pop","permalink":"/cli/solana/crank/pop","topic":"solana","command":"sbv2 solana crank pop","topics":["solana","crank","pop"],"markdown":"USAGE\\n  $ sbv2 solana crank pop CRANKKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger]\\n\\nARGUMENTS\\n  CRANKKEY  public key of the crank account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  pop the crank\\n","usage":"sbv2 solana crank pop CRANKKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger]","args":[{"arg":"CRANKKEY","description":"public key of the crank account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"pop the crank"},{"id":"solana-crank-print","permalink":"/cli/solana/crank/print","topic":"solana","command":"sbv2 solana crank print","topics":["solana","crank","print"],"markdown":"USAGE\\n  $ sbv2 solana crank print CRANKKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json] [--rows]\\n\\nARGUMENTS\\n  CRANKKEY  public key of the crank account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n  --rows                 print the crank rows in order\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a crank\\n","usage":"sbv2 solana crank print CRANKKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json] [--rows]","args":[{"arg":"CRANKKEY","description":"public key of the crank account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--rows","description":"print the crank rows in order GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a crank"},{"id":"solana-crank-push","permalink":"/cli/solana/crank/push","topic":"solana","command":"sbv2 solana crank push","topics":["solana","crank","push"],"markdown":"USAGE\\n  $ sbv2 solana crank push AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--crankKey <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --crankKey=<value>     push onto a new crank, if provided\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  push the crank\\n","usage":"sbv2 solana crank push AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--crankKey <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--crankKey=<value>","description":"push onto a new crank, if provided"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"push the crank"},{"id":"solana-crank-reset","permalink":"/cli/solana/crank/reset","topic":"solana","command":"sbv2 solana crank reset","topics":["solana","crank","reset"],"markdown":"USAGE\\n  $ sbv2 solana crank reset AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the aggregator and required to make config\\n                           changes\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  reset an aggregators crank\\n","usage":"sbv2 solana crank reset AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the aggregator and required to make config changes"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"reset an aggregators crank"},{"id":"solana-function-create","permalink":"/cli/solana/function/create","topic":"solana","command":"sbv2 solana function create","topics":["solana","function","create"],"markdown":"USAGE\\n  $ sbv2 solana function create QUEUEKEY --container <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-n <value>] [--metadata\\n    <value>] [-a <value>] [--fundAmount <value>] [--schedule <value>] [--containerRegistry <value>] [--version <value>]\\n    [--mrEnclave <value>] [--requestsDisabled <value>] [--requestsFee <value>] [--requestsRequireAuthorization <value>]\\n    [--enable] [--queueAuthority <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the attestation queue account\\n\\nFLAGS\\n  -a, --authority=<value>                 keypair or public key to delegate authority to for managing the function\\n                                          account\\n  -h, --help                              Show CLI help.\\n  -k, --keypair=<value>                   keypair that will pay for onchain transactions. defaults to new account\\n                                          authority if no alternate authority provided\\n  -n, --name=<value>                      name of the function for easier identification\\n  -s, --silent                            suppress cli prompts\\n  -u, --rpcUrl=<value>                    alternate RPC url\\n  -v, --verbose                           log everything\\n  --cluster=<option>                      the solana cluster to connect to\\n                                          <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>                   [default: confirmed] transaction commitment level to use\\n                                          <options: confirmed|finalized|processed>\\n  --container=<value>                     (required) the location of the container (Ex.\\n                                          switchboardlabs/basic-oracle-function)\\n  --containerRegistry=<value>             [default: docker] the registry to pull the container from (Ex. Docker or IPFS)\\n  --enable                                enable oracle heartbeat permissions\\n  --fundAmount=<value>                    [default: 0.0] token amount to load into the function\'s escrow wallet.\\n  --ledger                                enable ledger support\\n  --ledgerPath=<value>                    HID path to the ledger\\n  --mainnetBeta                           WARNING: use mainnet-beta solana cluster\\n  --metadata=<value>                      metadata of the function for easier identification\\n  --mrEnclave=<value>                     the MrEnclave value to set for the function - if not provided, will be set\\n                                          automatically after its first run\\n  --programId=<value>                     alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>                alternative keypair to use for queue authority\\n  --requestsDisabled=<value>              whether custom requests can be created for this function\\n  --requestsFee=<value>                   [default: 0.0] the costs each request must pay the function authority for each\\n                                          sub-request (Ex. 0.00002)\\n  --requestsRequireAuthorization=<value>  whether custom requests require the function authority to authorize\\n  --schedule=<value>                      the cron schedule to execute the function periodically (Ex. \'15 * * * * *\'\\n                                          will execute the function every 15 seconds)\\n  --version=<value>                       [default: latest] the version of the container to pull from the registry (Ex.\\n                                          \'latest\' or \'mainnet\')\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new function account for a given queue\\n\\nEXAMPLES\\n  $ sbv2 solana function create F8ce7MsckeZAbAGmxjJNetxYXQa9mKr9nnrC3qKubyYy --name function-1 --fundAmount 1.25 --container switchboardlabs/basic-oracle-function --version solana\\n","usage":"sbv2 solana function create QUEUEKEY --container <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-n <value>] [--metadata\\n    <value>] [-a <value>] [--fundAmount <value>] [--schedule <value>] [--containerRegistry <value>] [--version <value>]\\n    [--mrEnclave <value>] [--requestsDisabled <value>] [--requestsFee <value>] [--requestsRequireAuthorization <value>]\\n    [--enable] [--queueAuthority <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the attestation queue account"}],"flags":[{"flag":" -a, --authority=<value>","description":"keypair or public key to delegate authority to for managing the function account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-n, --name=<value>","description":"name of the function for easier identification"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--container=<value>","description":"(required) the location of the container (Ex. switchboardlabs/basic-oracle-function)"},{"flag":"--containerRegistry=<value>","description":"[default: docker] the registry to pull the container from (Ex. Docker or IPFS)"},{"flag":"--enable","description":"enable oracle heartbeat permissions"},{"flag":"--fundAmount=<value>","description":"[default: 0.0] token amount to load into the function\'s escrow wallet."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metadata=<value>","description":"metadata of the function for easier identification"},{"flag":"--mrEnclave=<value>","description":"the MrEnclave value to set for the function - if not provided, will be set automatically after its first run"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"alternative keypair to use for queue authority"},{"flag":"--requestsDisabled=<value>","description":"whether custom requests can be created for this function"},{"flag":"--requestsFee=<value>","description":"[default: 0.0] the costs each request must pay the function authority for each sub-request (Ex. 0.00002)"},{"flag":"--requestsRequireAuthorization=<value>","description":"whether custom requests require the function authority to authorize"},{"flag":"--schedule=<value>","description":"the cron schedule to execute the function periodically (Ex. \'15 * * * * *\' will execute the function every 15 seconds)"},{"flag":"--version=<value>","description":"[default: latest] the version of the container to pull from the registry (Ex. \'latest\' or \'mainnet\') GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new function account for a given queue","examples":["sbv2 solana function create F8ce7MsckeZAbAGmxjJNetxYXQa9mKr9nnrC3qKubyYy --name function-1 --fundAmount 1.25 --container switchboardlabs/basic-oracle-function --version solana"]},{"id":"solana-job-create","permalink":"/cli/solana/job/create","topic":"solana","command":"sbv2 solana job create","topics":["solana","job","create"],"markdown":"USAGE\\n  $ sbv2 solana job create --jobDefinition <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--jobKeypair <value>] [-a\\n    <value>] [-n <value>]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that will be the buffer relayer authority\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -n, --name=<value>       name of the buffer account\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --jobDefinition=<value>  (required) filesystem path to job definition\\n  --jobKeypair=<value>     keypair to use for the job account. This will be the account\'s publicKey\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a job account\\n","usage":"sbv2 solana job create --jobDefinition <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--jobKeypair <value>] [-a\\n    <value>] [-n <value>]","flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that will be the buffer relayer authority"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-n, --name=<value>","description":"name of the buffer account"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--jobDefinition=<value>","description":"(required) filesystem path to job definition"},{"flag":"--jobKeypair=<value>","description":"keypair to use for the job account. This will be the account\'s publicKey"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a job account"},{"id":"solana-job-print","permalink":"/cli/solana/job/print","topic":"solana","command":"sbv2 solana job print","topics":["solana","job","print"],"markdown":"USAGE\\n  $ sbv2 solana job print JOBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  JOBKEY  public key of the job account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an job and it\'s associated accounts\\n","usage":"sbv2 solana job print JOBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"JOBKEY","description":"public key of the job account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an job and it\'s associated accounts"},{"id":"solana-json-create_aggregator","permalink":"/cli/solana/json/create_aggregator","topic":"solana","command":"sbv2 solana json create aggregator","topics":["solana","json","create","aggregator"],"markdown":"USAGE\\n  $ sbv2 solana json create aggregator DEFINITIONFILE [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-q <value>] [-a <value>]\\n    [--leaseAmount <value>]\\n\\nARGUMENTS\\n  DEFINITIONFILE  filesystem path of queue definition json file\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that will be the authority for the aggregator\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -q, --queueKey=<value>   public key of the oracle queue to create aggregator for\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --leaseAmount=<value>    [default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5 wSOL\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an aggregator from a json file\\n\\nALIASES\\n  $ sbv2 solana json create aggregator\\n\\nEXAMPLES\\n  $ sbv2 solana aggregator create json examples/aggregator.json --keypair ../payer-keypair.json --queueKey GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --outputFile aggregator.schema.json\\n","usage":"sbv2 solana json create aggregator DEFINITIONFILE [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [-q <value>] [-a <value>]\\n    [--leaseAmount <value>]","args":[{"arg":"DEFINITIONFILE","description":"filesystem path of queue definition json file"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that will be the authority for the aggregator"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-q, --queueKey=<value>","description":"public key of the oracle queue to create aggregator for"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--leaseAmount=<value>","description":"[default: 0] amount of funds to deposit into the lease, ex: 1.5 would deposit 1.5 wSOL"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an aggregator from a json file","aliases":["sbv2 solana json create aggregator"],"examples":["sbv2 solana aggregator create json examples/aggregator.json --keypair ../payer-keypair.json --queueKey GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --outputFile aggregator.schema.json"]},{"id":"solana-lease-create","permalink":"/cli/solana/lease/create","topic":"solana","command":"sbv2 solana lease create","topics":["solana","lease","create"],"markdown":"USAGE\\n  $ sbv2 solana lease create AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--amount <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --amount=<value>       token amount to load into the lease escrow. If decimals provided, amount will be normalized to\\n                         raw tokenAmount\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  fund and re-enable an aggregator lease\\n\\nEXAMPLES\\n  $ sbv2 solana lease create GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.5 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana lease create AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--amount <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"token amount to load into the lease escrow. If decimals provided, amount will be normalized to raw tokenAmount"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"fund and re-enable an aggregator lease","examples":["sbv2 solana lease create GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.5 --keypair ../payer-keypair.json"]},{"id":"solana-lease-extend","permalink":"/cli/solana/lease/extend","topic":"solana","command":"sbv2 solana lease extend","topics":["solana","lease","extend"],"markdown":"USAGE\\n  $ sbv2 solana lease extend AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --amount=<value>       (required) amount to deposit into the lease escrow\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  fund and re-enable an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator fund\\n  $ sbv2 solana aggregator deposit\\n  $ sbv2 solana aggregator extend\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana lease extend AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) amount to deposit into the lease escrow"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"fund and re-enable an aggregator lease","aliases":["sbv2 solana aggregator fund","sbv2 solana aggregator deposit","sbv2 solana aggregator extend"],"examples":["sbv2 solana:aggregator:fund GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-lease-print","permalink":"/cli/solana/lease/print","topic":"solana","command":"sbv2 solana lease print","topics":["solana","lease","print"],"markdown":"USAGE\\n  $ sbv2 solana lease print LEASEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  LEASEKEY  public key of the lease account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a lease account\\n","usage":"sbv2 solana lease print LEASEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"LEASEKEY","description":"public key of the lease account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a lease account"},{"id":"solana-lease-set","permalink":"/cli/solana/lease/set","topic":"solana","command":"sbv2 solana lease set","topics":["solana","lease","set"],"markdown":"USAGE\\n  $ sbv2 solana lease set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n    [--newAuthority <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair delegated as the authority for managing the lease account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --newAuthority=<value>   new lease withdraw authority. if not set, defaults to the aggregator authority\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queuePubkey=<value>    override the aggregators current queue. useful for withdrawing from a lease after moving to a\\n                           new queue\\n\\nDESCRIPTION\\n  set a lease\'s withdraw authority\\n\\nALIASES\\n  $ sbv2 solana aggregator lease set\\n\\nEXAMPLES\\n  $ sbv2 solana:lease:set GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --keypair ../payer-keypair.json\\n","usage":"sbv2 solana lease set AGGREGATORKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n    [--newAuthority <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair delegated as the authority for managing the lease account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--newAuthority=<value>","description":"new lease withdraw authority. if not set, defaults to the aggregator authority"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queuePubkey=<value>","description":"override the aggregators current queue. useful for withdrawing from a lease after moving to a new queue"}],"description":"set a lease\'s withdraw authority","aliases":["sbv2 solana aggregator lease set"],"examples":["sbv2 solana:lease:set GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --keypair ../payer-keypair.json"]},{"id":"solana-lease-withdraw","permalink":"/cli/solana/lease/withdraw","topic":"solana","command":"sbv2 solana lease withdraw","topics":["solana","lease","withdraw"],"markdown":"USAGE\\n  $ sbv2 solana lease withdraw AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]\\n\\nARGUMENTS\\n  AGGREGATORKEY  public key of the aggregator account\\n\\nFLAGS\\n  -a, --authority=<value>  keypair delegated as the authority for managing the lease account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --amount=<value>         (required) token amount to withdraw from lease account\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --queuePubkey=<value>    override the aggregators current queue. useful for withdrawing from a lease after moving to a\\n                           new queue\\n\\nDESCRIPTION\\n  withdraw funds from an aggregator lease\\n\\nALIASES\\n  $ sbv2 solana aggregator withdraw\\n\\nEXAMPLES\\n  $ sbv2 solana:aggregator:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\\n","usage":"sbv2 solana lease withdraw AGGREGATORKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>] [--queuePubkey <value>]","args":[{"arg":"AGGREGATORKEY","description":"public key of the aggregator account"}],"flags":[{"flag":" -a, --authority=<value>","description":"keypair delegated as the authority for managing the lease account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) token amount to withdraw from lease account"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queuePubkey=<value>","description":"override the aggregators current queue. useful for withdrawing from a lease after moving to a new queue"}],"description":"withdraw funds from an aggregator lease","aliases":["sbv2 solana aggregator withdraw"],"examples":["sbv2 solana:aggregator:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json"]},{"id":"solana-network-create","permalink":"/cli/solana/network/create","topic":"solana","command":"sbv2 solana network create","topics":["solana","network","create"],"markdown":"USAGE\\n  $ sbv2 solana network create --configFile <value> --schemaFile <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--force]\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --configFile=<value>   (required)\\n  --force\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n  --schemaFile=<value>   (required)\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an oracle queue\\n","usage":"sbv2 solana network create --configFile <value> --schemaFile <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--force]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--configFile=<value>","description":"(required)"},{"flag":"--force","description":""},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--schemaFile=<value>","description":"(required) GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an oracle queue"},{"id":"solana-network-save","permalink":"/cli/solana/network/save","topic":"solana","command":"sbv2 solana network save","topics":["solana","network","save"],"markdown":"USAGE\\n  $ sbv2 solana network save --queueKey <value> --outputFile <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--force]\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --force\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --outputFile=<value>   (required) outputFile to save accounts in JSON format\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n  --queueKey=<value>     (required) queue account to load\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  save an existing switchboard network\\n","usage":"sbv2 solana network save --queueKey <value> --outputFile <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json] [--force]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--force","description":""},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--outputFile=<value>","description":"(required) outputFile to save accounts in JSON format"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueKey=<value>","description":"(required) queue account to load GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"save an existing switchboard network"},{"id":"solana-network-start","permalink":"/cli/solana/network/start","topic":"solana","command":"sbv2 solana network start","topics":["solana","network","start"],"markdown":"USAGE\\n  $ sbv2 solana network start [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u <value>]\\n    [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n    [--json] [--configFile <value>] [--schemaFile <value>] [--nodeImage <value>] [--arm] [-t <value>] [--mainnetRpcUrl\\n    <value>]\\n\\nFLAGS\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress docker logging\\n  -t, --timeout=<value>    [default: 300] number of seconds before ending the docker process\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --arm                    apple silicon needs to use a docker image for linux/arm64\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --configFile=<value>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --mainnetRpcUrl=<value>  [default: https://api.mainnet-beta.solana.com/] Solana mainnet RPC URL to use for the oracle\\n                           task runner\\n  --nodeImage=<value>      [default: dev-v2-RC_02_24_23_18_43] public key of the oracle to start-up\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n  --schemaFile=<value>\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  start a switchboard network from a JSON file\\n","usage":"sbv2 solana network start [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u <value>]\\n    [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n    [--json] [--configFile <value>] [--schemaFile <value>] [--nodeImage <value>] [--arm] [-t <value>] [--mainnetRpcUrl\\n    <value>]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress docker logging"},{"flag":"-t, --timeout=<value>","description":"[default: 300] number of seconds before ending the docker process"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--arm","description":"apple silicon needs to use a docker image for linux/arm64"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--configFile=<value>","description":""},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--mainnetRpcUrl=<value>","description":"[default: https://api.mainnet-beta.solana.com/] Solana mainnet RPC URL to use for the oracle task runner"},{"flag":"--nodeImage=<value>","description":"[default: dev-v2-RC_02_24_23_18_43] public key of the oracle to start-up"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--schemaFile=<value>","description":"GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"start a switchboard network from a JSON file"},{"id":"solana-oracle-create","permalink":"/cli/solana/oracle/create","topic":"solana","command":"sbv2 solana oracle create","topics":["solana","oracle","create"],"markdown":"USAGE\\n  $ sbv2 solana oracle create QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [-n <value>] [--metadata <value>] [-a <value>] [--enable] [--queueAuthority <value>]\\n    [--stakeAmount <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the oracle queue account\\n\\nFLAGS\\n  -a, --authority=<value>   keypair to delegate authority to for managing the oracle account\\n  -h, --help                Show CLI help.\\n  -k, --keypair=<value>     keypair that will pay for onchain transactions. defaults to new account authority if no\\n                            alternate authority provided\\n  -n, --name=<value>        name of the oracle for easier identification\\n  -s, --silent              suppress cli prompts\\n  -u, --rpcUrl=<value>      alternate RPC url\\n  -v, --verbose             log everything\\n  --cluster=<option>        the solana cluster to connect to\\n                            <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>     [default: confirmed] transaction commitment level to use\\n                            <options: confirmed|finalized|processed>\\n  --enable                  enable oracle heartbeat permissions\\n  --ledger                  enable ledger support\\n  --ledgerPath=<value>      HID path to the ledger\\n  --mainnetBeta             WARNING: use mainnet-beta solana cluster\\n  --metadata=<value>        metadata of the oracle for easier identification\\n  --programId=<value>       alternative Switchboard program ID to interact with\\n  --queueAuthority=<value>  alternative keypair to use for queue authority\\n  --stakeAmount=<value>     token amount to load into the oracle\'s staking wallet.\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a new oracle account for a given queue\\n\\nEXAMPLES\\n  $ sbv2 solana:oracle:create F8ce7MsckeZAbAGmxjJNetxYXQa9mKr9nnrC3qKubyYy --name oracle-1 --stakeAmount 1\\n","usage":"sbv2 solana oracle create QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [-n <value>] [--metadata <value>] [-a <value>] [--enable] [--queueAuthority <value>]\\n    [--stakeAmount <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the oracle queue account"}],"flags":[{"flag":" -a, --authority=<value>","description":"keypair to delegate authority to for managing the oracle account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-n, --name=<value>","description":"name of the oracle for easier identification"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--enable","description":"enable oracle heartbeat permissions"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metadata=<value>","description":"metadata of the oracle for easier identification"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueAuthority=<value>","description":"alternative keypair to use for queue authority"},{"flag":"--stakeAmount=<value>","description":"token amount to load into the oracle\'s staking wallet. GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a new oracle account for a given queue","examples":["sbv2 solana:oracle:create F8ce7MsckeZAbAGmxjJNetxYXQa9mKr9nnrC3qKubyYy --name oracle-1 --stakeAmount 1"]},{"id":"solana-oracle-print","permalink":"/cli/solana/oracle/print","topic":"solana","command":"sbv2 solana oracle print","topics":["solana","oracle","print"],"markdown":"USAGE\\n  $ sbv2 solana oracle print ORACLEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet]\\n    [-u <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  ORACLEKEY  public key of the oracle account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print an oracle account\\n","usage":"sbv2 solana oracle print ORACLEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet]\\n    [-u <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"ORACLEKEY","description":"public key of the oracle account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print an oracle account"},{"id":"solana-oracle-up","permalink":"/cli/solana/oracle/up","topic":"solana","command":"sbv2 solana oracle up","topics":["solana","oracle","up"],"markdown":"USAGE\\n  $ sbv2 solana oracle up --oracleKey <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>] [-t <value>]\\n\\nFLAGS\\n  -h, --help                 Show CLI help.\\n  -k, --keypair=<value>      keypair that will pay for onchain transactions. defaults to new account authority if no\\n                             alternate authority provided\\n  -s, --silent               suppress docker logging\\n  -t, --timeout=<value>      [default: 120] number of seconds before ending the docker process\\n  -u, --rpcUrl=<value>       alternate RPC url\\n  -v, --verbose              log everything\\n  --cluster=<option>         the solana cluster to connect to\\n                             <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>      [default: confirmed] transaction commitment level to use\\n                             <options: confirmed|finalized|processed>\\n  --ledger                   enable ledger support\\n  --ledgerPath=<value>       HID path to the ledger\\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\\n  --nodeImage=<value>        [default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up\\n  --oracleKey=<value>        (required) public key of the oracle to start-up\\n  --programId=<value>        alternative Switchboard program ID to interact with\\n  --releaseChannel=<option>  [default: testnet] the oracle release channel\\n                             <options: testnet|mainnet>\\n\\nDESCRIPTION\\n  start a solana docker oracle\\n","usage":"sbv2 solana oracle up --oracleKey <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--releaseChannel testnet|mainnet |\\n    --nodeImage <value>] [-t <value>]","flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress docker logging"},{"flag":"-t, --timeout=<value>","description":"[default: 120] number of seconds before ending the docker process"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--nodeImage=<value>","description":"[default: dev-v2-RC_04_11_23_17_12] public key of the oracle to start-up"},{"flag":"--oracleKey=<value>","description":"(required) public key of the oracle to start-up"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--releaseChannel=<option>","description":"[default: testnet] the oracle release channel <options: testnet|mainnet>"}],"description":"start a solana docker oracle"},{"id":"solana-oracle-withdraw","permalink":"/cli/solana/oracle/withdraw","topic":"solana","command":"sbv2 solana oracle withdraw","topics":["solana","oracle","withdraw"],"markdown":"USAGE\\n  $ sbv2 solana oracle withdraw ORACLEKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  ORACLEKEY  public key of the oracle account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair for the oracle authority\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --amount=<value>         (required) amount to withdraw\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  withdraw from an oracle\'s staking wallet\\n","usage":"sbv2 solana oracle withdraw ORACLEKEY --amount <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"ORACLEKEY","description":"public key of the oracle account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair for the oracle authority"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--amount=<value>","description":"(required) amount to withdraw"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"withdraw from an oracle\'s staking wallet"},{"id":"solana-permission-create","permalink":"/cli/solana/permission/create","topic":"solana","command":"sbv2 solana permission create","topics":["solana","permission","create"],"markdown":"USAGE\\n  $ sbv2 solana permission create --granter <value> --grantee <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--enable] [-a <value>]\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the granter\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --enable                 whether to enable permissions on the resource. --keypair or --authority must be provided\\n  --grantee=<value>        (required) publicKey of the resource that is being granted permissions. This is typically an\\n                           AggregatorAccount, BufferRelayerAccount, OracleAccount, or VrfAccount.\\n  --granter=<value>        (required) publicKey of the resource that is granting permissions. This is typically the\\n                           QueueAccount.\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create a permission account\\n","usage":"sbv2 solana permission create --granter <value> --grantee <value> [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [--json] [--enable] [-a <value>]","flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the granter"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--enable","description":"whether to enable permissions on the resource. --keypair or --authority must be provided"},{"flag":"--grantee=<value>","description":"(required) publicKey of the resource that is being granted permissions. This is typically an AggregatorAccount, BufferRelayerAccount, OracleAccount, or VrfAccount."},{"flag":"--granter=<value>","description":"(required) publicKey of the resource that is granting permissions. This is typically the QueueAccount."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create a permission account"},{"id":"solana-permission-grant","permalink":"/cli/solana/permission/grant","topic":"solana","command":"sbv2 solana permission grant","topics":["solana","permission","grant"],"markdown":"USAGE\\n  $ sbv2 solana permission grant PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  PERMISSIONKEY  public key of the permission account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the permission account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  enable a resources permissions\\n","usage":"sbv2 solana permission grant PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"PERMISSIONKEY","description":"public key of the permission account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the permission account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"enable a resources permissions"},{"id":"solana-permission-print","permalink":"/cli/solana/permission/print","topic":"solana","command":"sbv2 solana permission print","topics":["solana","permission","print"],"markdown":"USAGE\\n  $ sbv2 solana permission print PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  PERMISSIONKEY  public key of the permission account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a permission account\\n","usage":"sbv2 solana permission print PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [--json]","args":[{"arg":"PERMISSIONKEY","description":"public key of the permission account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a permission account"},{"id":"solana-permission-revoke","permalink":"/cli/solana/permission/revoke","topic":"solana","command":"sbv2 solana permission revoke","topics":["solana","permission","revoke"],"markdown":"USAGE\\n  $ sbv2 solana permission revoke PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]\\n\\nARGUMENTS\\n  PERMISSIONKEY  public key of the permission account\\n\\nFLAGS\\n  -a, --authority=<value>  alternate keypair that is the authority for the permission account\\n  -h, --help               Show CLI help.\\n  -k, --keypair=<value>    keypair that will pay for onchain transactions. defaults to new account authority if no\\n                           alternate authority provided\\n  -s, --silent             suppress cli prompts\\n  -u, --rpcUrl=<value>     alternate RPC url\\n  -v, --verbose            log everything\\n  --cluster=<option>       the solana cluster to connect to\\n                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>    [default: confirmed] transaction commitment level to use\\n                           <options: confirmed|finalized|processed>\\n  --ledger                 enable ledger support\\n  --ledgerPath=<value>     HID path to the ledger\\n  --mainnetBeta            WARNING: use mainnet-beta solana cluster\\n  --programId=<value>      alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  disable a resources permissions\\n","usage":"sbv2 solana permission revoke PERMISSIONKEY [-h] [-v] [-s] [--mainnetBeta | --cluster\\n    devnet|mainnet-beta|mainnet|localnet] [-u <value>] [--programId <value>] [--commitment\\n    confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger] [-a <value>]","args":[{"arg":"PERMISSIONKEY","description":"public key of the permission account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the permission account"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"disable a resources permissions"},{"id":"solana-print","permalink":"/cli/solana/print","topic":"solana","command":"sbv2 solana print","topics":["solana","print"],"markdown":"USAGE\\n  $ sbv2 solana print PUBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  PUBKEY  publicKey of the Switchboard account to search for\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a Switchboard account\\n","usage":"sbv2 solana print PUBKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"PUBKEY","description":"publicKey of the Switchboard account to search for"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a Switchboard account"},{"id":"solana-queue-create","permalink":"/cli/solana/queue/create","topic":"solana","command":"sbv2 solana queue create","topics":["solana","queue","create"],"markdown":"USAGE\\n  $ sbv2 solana queue create [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u <value>]\\n    [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n    [--json] [-a <value>] [--queueKeypair <value>] [--dataBufferKeypair <value>] [--size <value>] [--name <value>]\\n    [--metadata <value>] [--reward <value>] [--minStake <value>] [--oracleTimeout <value>] [--slashingEnabled]\\n    [--permissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers] [--feedProbationPeriod <value>]\\n    [--consecutiveFeedFailureLimit <value>] [--consecutiveOracleFailureLimit <value>]\\n\\nFLAGS\\n  -a, --authority=<value>                  alternate keypair that is the authority for the queue and is required to\\n                                           approve permissions\\n  -h, --help                               Show CLI help.\\n  -k, --keypair=<value>                    keypair that will pay for onchain transactions. defaults to new account\\n                                           authority if no alternate authority provided\\n  -s, --silent                             suppress cli prompts\\n  -u, --rpcUrl=<value>                     alternate RPC url\\n  -v, --verbose                            log everything\\n  --cluster=<option>                       the solana cluster to connect to\\n                                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>                    [default: confirmed] transaction commitment level to use\\n                                           <options: confirmed|finalized|processed>\\n  --consecutiveFeedFailureLimit=<value>    [default: 1000] consecutive failure limit for a feed before feed permission\\n                                           is revoked.\\n  --consecutiveOracleFailureLimit=<value>  [default: 1000] consecutive failure limit for an oracle before oracle\\n                                           permission is revoked.\\n  --dataBufferKeypair=<value>              keypair to use for the oracle queue data buffer account.\\n  --enableBufferRelayers                   enabling this setting will allow buffer relayer accounts to call openRound.\\n  --feedProbationPeriod=<value>            [default: 1000] After a feed lease is funded or re-funded, it must\\n                                           consecutively succeed N amount of times or its authorization to use the queue\\n                                           is auto-revoked.\\n  --ledger                                 enable ledger support\\n  --ledgerPath=<value>                     HID path to the ledger\\n  --mainnetBeta                            WARNING: use mainnet-beta solana cluster\\n  --metadata=<value>                       metadata of the aggregator\\n  --minStake=<value>                       [default: 0] the reward payed out to oracles for responding to an update\\n                                           request on-chain, Ex: 2 requires oracles to have 2 wSOL in their staking\\n                                           wallet before heartbeating\\n  --name=<value>                           name of the aggregator\\n  --oracleTimeout=<value>                  [default: 180] time period (in seconds) we should remove an oracle after if\\n                                           no response\\n  --permissionedFeeds                      enabling this setting means data feeds need explicit permission to join the\\n                                           queue.\\n  --programId=<value>                      alternative Switchboard program ID to interact with\\n  --queueKeypair=<value>                   keypair to use for the oracle queue account. This will be the account\'s\\n                                           publicKey\\n  --reward=<value>                         [default: 0] the reward payed out to oracles for responding to an update\\n                                           request on-chain, Ex: A reward of 0.0000075 with a feed with a batchSize of 4\\n                                           would deduct (4 * 0.0000075) wSOL from an aggregators lease each round.\\n  --size=<value>                           [default: 100] set the size of the queue\\n  --slashingEnabled                        whether slashing is enabled on this queue.\\n  --unpermissionedVrf                      enabling this setting means data feeds do not need explicit permission to\\n                                           request VRF proofs and verifications from this queue.\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  create an oracle queue\\n","usage":"sbv2 solana queue create [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u <value>]\\n    [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value> --ledger]\\n    [--json] [-a <value>] [--queueKeypair <value>] [--dataBufferKeypair <value>] [--size <value>] [--name <value>]\\n    [--metadata <value>] [--reward <value>] [--minStake <value>] [--oracleTimeout <value>] [--slashingEnabled]\\n    [--permissionedFeeds] [--unpermissionedVrf] [--enableBufferRelayers] [--feedProbationPeriod <value>]\\n    [--consecutiveFeedFailureLimit <value>] [--consecutiveOracleFailureLimit <value>]","flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the queue and is required to approve permissions"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--consecutiveFeedFailureLimit=<value>","description":"[default: 1000] consecutive failure limit for a feed before feed permission is revoked."},{"flag":"--consecutiveOracleFailureLimit=<value>","description":"[default: 1000] consecutive failure limit for an oracle before oracle permission is revoked."},{"flag":"--dataBufferKeypair=<value>","description":"keypair to use for the oracle queue data buffer account."},{"flag":"--enableBufferRelayers","description":"enabling this setting will allow buffer relayer accounts to call openRound."},{"flag":"--feedProbationPeriod=<value>","description":"[default: 1000] After a feed lease is funded or re-funded, it must consecutively succeed N amount of times or its authorization to use the queue is auto-revoked."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metadata=<value>","description":"metadata of the aggregator"},{"flag":"--minStake=<value>","description":"[default: 0] the reward payed out to oracles for responding to an update request on-chain, Ex: 2 requires oracles to have 2 wSOL in their staking wallet before heartbeating"},{"flag":"--name=<value>","description":"name of the aggregator"},{"flag":"--oracleTimeout=<value>","description":"[default: 180] time period (in seconds) we should remove an oracle after if no response"},{"flag":"--permissionedFeeds","description":"enabling this setting means data feeds need explicit permission to join the queue."},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--queueKeypair=<value>","description":"keypair to use for the oracle queue account. This will be the account\'s publicKey"},{"flag":"--reward=<value>","description":"[default: 0] the reward payed out to oracles for responding to an update request on-chain, Ex: A reward of 0.0000075 with a feed with a batchSize of 4 would deduct (4 * 0.0000075) wSOL from an aggregators lease each round."},{"flag":"--size=<value>","description":"[default: 100] set the size of the queue"},{"flag":"--slashingEnabled","description":"whether slashing is enabled on this queue."},{"flag":"--unpermissionedVrf","description":"enabling this setting means data feeds do not need explicit permission to request VRF proofs and verifications from this queue. GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"create an oracle queue"},{"id":"solana-queue-print","permalink":"/cli/solana/queue/print","topic":"solana","command":"sbv2 solana queue print","topics":["solana","queue","print"],"markdown":"USAGE\\n  $ sbv2 solana queue print QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json] [--oracles]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the queue account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --oracles              print the queue oracles\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a queue account\\n","usage":"sbv2 solana queue print QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json] [--oracles]","args":[{"arg":"QUEUEKEY","description":"public key of the queue account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--oracles","description":"print the queue oracles"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a queue account"},{"id":"solana-queue-set","permalink":"/cli/solana/queue/set","topic":"solana","command":"sbv2 solana queue set","topics":["solana","queue","set"],"markdown":"USAGE\\n  $ sbv2 solana queue set QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--reward <value>] [--minStake <value>]\\n    [--oracleTimeout <value>] [--slashingEnabled] [--unpermissionedFeeds | --permissionedFeeds] [--unpermissionedVrf]\\n    [--enableBufferRelayers] [--consecutiveFeedFailureLimit <value>] [--consecutiveOracleFailureLimit <value>]\\n\\nARGUMENTS\\n  QUEUEKEY  public key of the queue account\\n\\nFLAGS\\n  -a, --authority=<value>                  alternate keypair that is the authority for the queue and is required to\\n                                           approve permissions\\n  -h, --help                               Show CLI help.\\n  -k, --keypair=<value>                    keypair that will pay for onchain transactions. defaults to new account\\n                                           authority if no alternate authority provided\\n  -s, --silent                             suppress cli prompts\\n  -u, --rpcUrl=<value>                     alternate RPC url\\n  -v, --verbose                            log everything\\n  --cluster=<option>                       the solana cluster to connect to\\n                                           <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>                    [default: confirmed] transaction commitment level to use\\n                                           <options: confirmed|finalized|processed>\\n  --consecutiveFeedFailureLimit=<value>    consecutive failure limit for a feed before feed permission is revoked.\\n  --consecutiveOracleFailureLimit=<value>  consecutive failure limit for an oracle before oracle permission is revoked.\\n  --enableBufferRelayers                   enabling this setting will allow buffer relayer accounts to call openRound.\\n  --ledger                                 enable ledger support\\n  --ledgerPath=<value>                     HID path to the ledger\\n  --mainnetBeta                            WARNING: use mainnet-beta solana cluster\\n  --metadata=<value>                       metadata of the aggregator\\n  --minStake=<value>                       the reward payed out to oracles for responding to an update request on-chain,\\n                                           Ex: 2 requires oracles to have 2 wSOL in their staking wallet before\\n                                           heartbeating\\n  --name=<value>                           name of the aggregator\\n  --oracleTimeout=<value>                  time period (in seconds) we should remove an oracle after if no response\\n  --permissionedFeeds                      enabling this setting means data feeds need explicit permission to join the\\n                                           queue.\\n  --programId=<value>                      alternative Switchboard program ID to interact with\\n  --reward=<value>                         the reward payed out to oracles for responding to an update request on-chain,\\n                                           Ex: A reward of 0.0000075 with a feed with a batchSize of 4 would deduct (4 *\\n                                           0.0000075) wSOL from an aggregators lease each round.\\n  --slashingEnabled                        whether slashing is enabled on this queue.\\n  --unpermissionedFeeds                    enabling this setting means data feeds do not need explicit permission to\\n                                           join the queue.\\n  --unpermissionedVrf                      enabling this setting means data feeds do not need explicit permission to\\n                                           request VRF proofs and verifications from this queue.\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  set an oracle queue\'s config\\n","usage":"sbv2 solana queue set QUEUEKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--json] [-a <value>] [--name <value>] [--metadata <value>] [--reward <value>] [--minStake <value>]\\n    [--oracleTimeout <value>] [--slashingEnabled] [--unpermissionedFeeds | --permissionedFeeds] [--unpermissionedVrf]\\n    [--enableBufferRelayers] [--consecutiveFeedFailureLimit <value>] [--consecutiveOracleFailureLimit <value>]","args":[{"arg":"QUEUEKEY","description":"public key of the queue account"}],"flags":[{"flag":" -a, --authority=<value>","description":"alternate keypair that is the authority for the queue and is required to approve permissions"},{"flag":"-h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--consecutiveFeedFailureLimit=<value>","description":"consecutive failure limit for a feed before feed permission is revoked."},{"flag":"--consecutiveOracleFailureLimit=<value>","description":"consecutive failure limit for an oracle before oracle permission is revoked."},{"flag":"--enableBufferRelayers","description":"enabling this setting will allow buffer relayer accounts to call openRound."},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--metadata=<value>","description":"metadata of the aggregator"},{"flag":"--minStake=<value>","description":"the reward payed out to oracles for responding to an update request on-chain, Ex: 2 requires oracles to have 2 wSOL in their staking wallet before heartbeating"},{"flag":"--name=<value>","description":"name of the aggregator"},{"flag":"--oracleTimeout=<value>","description":"time period (in seconds) we should remove an oracle after if no response"},{"flag":"--permissionedFeeds","description":"enabling this setting means data feeds need explicit permission to join the queue."},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"},{"flag":"--reward=<value>","description":"the reward payed out to oracles for responding to an update request on-chain, Ex: A reward of 0.0000075 with a feed with a batchSize of 4 would deduct (4 * 0.0000075) wSOL from an aggregators lease each round."},{"flag":"--slashingEnabled","description":"whether slashing is enabled on this queue."},{"flag":"--unpermissionedFeeds","description":"enabling this setting means data feeds do not need explicit permission to join the queue."},{"flag":"--unpermissionedVrf","description":"enabling this setting means data feeds do not need explicit permission to request VRF proofs and verifications from this queue. GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"set an oracle queue\'s config"},{"id":"solana-vrf-open","permalink":"/cli/solana/vrf/open","topic":"solana","command":"sbv2 solana vrf open","topics":["solana","vrf","open"],"markdown":"USAGE\\n  $ sbv2 solana vrf open-round VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]\\n\\nARGUMENTS\\n  VRFKEY  public key of the VRF account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --authority=<value>    alternative keypair that is the VRF authority\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new vrf result from a set of oracles\\n\\nALIASES\\n  $ sbv2 solana vrf update\\n  $ sbv2 solana vrf open-round\\n\\nEXAMPLES\\n  $ sbv2 solana vrf request\\n","usage":"sbv2 solana vrf open-round VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]","args":[{"arg":"VRFKEY","description":"public key of the VRF account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--authority=<value>","description":"alternative keypair that is the VRF authority"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new vrf result from a set of oracles","aliases":["sbv2 solana vrf update","sbv2 solana vrf open-round"],"examples":["sbv2 solana vrf request"]},{"id":"solana-vrf-print","permalink":"/cli/solana/vrf/print","topic":"solana","command":"sbv2 solana vrf print","topics":["solana","vrf","print"],"markdown":"USAGE\\n  $ sbv2 solana vrf print VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]\\n\\nARGUMENTS\\n  VRFKEY  public key of the VRF account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nGLOBAL FLAGS\\n  --json  Format output as json.\\n\\nDESCRIPTION\\n  print a VRF and it\'s associated accounts\\n","usage":"sbv2 solana vrf print VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [--json]","args":[{"arg":"VRFKEY","description":"public key of the VRF account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with GLOBAL FLAGS"},{"flag":"--json","description":"Format output as json."}],"description":"print a VRF and it\'s associated accounts"},{"id":"solana-vrf-request","permalink":"/cli/solana/vrf/request","topic":"solana","command":"sbv2 solana vrf request","topics":["solana","vrf","request"],"markdown":"USAGE\\n  $ sbv2 solana vrf request VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]\\n\\nARGUMENTS\\n  VRFKEY  public key of the VRF account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --authority=<value>    alternative keypair that is the VRF authority\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new vrf result from a set of oracles\\n\\nALIASES\\n  $ sbv2 solana vrf update\\n  $ sbv2 solana vrf open-round\\n\\nEXAMPLES\\n  $ sbv2 solana vrf request\\n","usage":"sbv2 solana vrf request VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]","args":[{"arg":"VRFKEY","description":"public key of the VRF account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--authority=<value>","description":"alternative keypair that is the VRF authority"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new vrf result from a set of oracles","aliases":["sbv2 solana vrf update","sbv2 solana vrf open-round"],"examples":["sbv2 solana vrf request"]},{"id":"solana-vrf-update","permalink":"/cli/solana/vrf/update","topic":"solana","command":"sbv2 solana vrf update","topics":["solana","vrf","update"],"markdown":"USAGE\\n  $ sbv2 solana vrf update VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]\\n\\nARGUMENTS\\n  VRFKEY  public key of the VRF account\\n\\nFLAGS\\n  -h, --help             Show CLI help.\\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\\n                         alternate authority provided\\n  -s, --silent           suppress cli prompts\\n  -u, --rpcUrl=<value>   alternate RPC url\\n  -v, --verbose          log everything\\n  --authority=<value>    alternative keypair that is the VRF authority\\n  --cluster=<option>     the solana cluster to connect to\\n                         <options: devnet|mainnet-beta|mainnet|localnet>\\n  --commitment=<option>  [default: confirmed] transaction commitment level to use\\n                         <options: confirmed|finalized|processed>\\n  --ledger               enable ledger support\\n  --ledgerPath=<value>   HID path to the ledger\\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\\n  --programId=<value>    alternative Switchboard program ID to interact with\\n\\nDESCRIPTION\\n  request a new vrf result from a set of oracles\\n\\nALIASES\\n  $ sbv2 solana vrf update\\n  $ sbv2 solana vrf open-round\\n\\nEXAMPLES\\n  $ sbv2 solana vrf request\\n","usage":"sbv2 solana vrf update VRFKEY [-h] [-v] [-s] [--mainnetBeta | --cluster devnet|mainnet-beta|mainnet|localnet] [-u\\n    <value>] [--programId <value>] [--commitment confirmed|finalized|processed] [-k <value>] [--ledgerPath <value>\\n    --ledger] [--authority <value>]","args":[{"arg":"VRFKEY","description":"public key of the VRF account"}],"flags":[{"flag":" -h, --help","description":"Show CLI help."},{"flag":"-k, --keypair=<value>","description":"keypair that will pay for onchain transactions. defaults to new account authority if no alternate authority provided"},{"flag":"-s, --silent","description":"suppress cli prompts"},{"flag":"-u, --rpcUrl=<value>","description":"alternate RPC url"},{"flag":"-v, --verbose","description":"log everything"},{"flag":"--authority=<value>","description":"alternative keypair that is the VRF authority"},{"flag":"--cluster=<option>","description":"the solana cluster to connect to <options: devnet|mainnet-beta|mainnet|localnet>"},{"flag":"--commitment=<option>","description":"[default: confirmed] transaction commitment level to use <options: confirmed|finalized|processed>"},{"flag":"--ledger","description":"enable ledger support"},{"flag":"--ledgerPath=<value>","description":"HID path to the ledger"},{"flag":"--mainnetBeta","description":"WARNING: use mainnet-beta solana cluster"},{"flag":"--programId=<value>","description":"alternative Switchboard program ID to interact with"}],"description":"request a new vrf result from a set of oracles","aliases":["sbv2 solana vrf update","sbv2 solana vrf open-round"],"examples":["sbv2 solana vrf request"]}]')}}]);