"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4686],{54852:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var a=r(49231);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(r),f=n,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||o;return r?a.createElement(m,s(s({ref:t},c),{},{components:r})):a.createElement(m,s({ref:t},c))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=r[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},37538:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(95907),n=(r(49231),r(54852));const o={title:"native-feed-parser",slug:"/solana/sdk/rust/native-feed-parser",hide_title:!0,sidebar_class_name:"sidebar__rust",sidebar_position:1},s=void 0,i={unversionedId:"solana/sdk/examples/native-feed-parser",id:"solana/sdk/examples/native-feed-parser",title:"native-feed-parser",description:"Switchboard Logo",source:"@site/docs/solana/sdk/examples/native-feed-parser.mdx",sourceDirName:"solana/sdk/examples",slug:"/solana/sdk/rust/native-feed-parser",permalink:"/solana/sdk/rust/native-feed-parser",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"native-feed-parser",slug:"/solana/sdk/rust/native-feed-parser",hide_title:!0,sidebar_class_name:"sidebar__rust",sidebar_position:1},sidebar:"solanaSidebar",previous:{title:"@switchboard-xyz/solana.js",permalink:"/solana/sdk/javascript/"},next:{title:"anchor-feed-parser",permalink:"/solana/sdk/anchor/anchor-feed-parser"}},l={},p=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("div",{align:"center"},(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/switchboard-xyz/sbv2-core/raw/main/website/static/img/icons/switchboard/avatar.png",alt:"Switchboard Logo"})),(0,n.kt)("h1",{id:"native-feed-parser"},"native-feed-parser"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"An example program written in native Rust demonstrating how to deserialize and\nread a Switchboard data feed on Solana."))),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)("p",null,"Clone the sbv2-solana repository:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/switchboard-xyz/sbv2-solana\ncd sbv2-solana\ncd programs/native-feed-parser\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,"Build the example program"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"cargo build-bpf --manifest-path=Cargo.toml\nsolana program deploy target/deploy/native_feed_parser.so\n")))}u.isMDXComponent=!0}}]);