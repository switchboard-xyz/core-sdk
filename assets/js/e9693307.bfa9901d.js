"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7114],{54852:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>f});var a=r(49231);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(r),m=n,f=p["".concat(s,".").concat(m)]||p[m]||u[m]||o;return r?a.createElement(f,i(i({ref:t},l),{},{components:r})):a.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:n,i[1]=c;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},86597:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var a=r(95634),n=(r(49231),r(54852));const o={title:"\ud83d\udcc8 Read a Data Feed",hide_title:!0,hide_table_of_contents:!0},i="Read a Data Feed On-Chain",c={unversionedId:"evm/guides/read-a-data-feed",id:"evm/guides/read-a-data-feed",title:"\ud83d\udcc8 Read a Data Feed",description:"Hardhat",source:"@site/docs/202-evm/80-guides/101-read-a-data-feed.mdx",sourceDirName:"202-evm/80-guides",slug:"/evm/guides/read-a-data-feed",permalink:"/evm/guides/read-a-data-feed",draft:!1,tags:[],version:"current",sidebarPosition:101,frontMatter:{title:"\ud83d\udcc8 Read a Data Feed",hide_title:!0,hide_table_of_contents:!0},sidebar:"sidebar",previous:{title:"\u27a1\ufe0f Your First Contract",permalink:"/evm/guides/first-contract"},next:{title:"\ud83e\udd16 Randomness Callback Function",permalink:"/evm/guides/randomness-callback-function"}},s={},d=[{value:"Hardhat",id:"hardhat",level:2}],l={toc:d},p="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"read-a-data-feed-on-chain"},"Read a Data Feed On-Chain"),(0,n.kt)("h2",{id:"hardhat"},"Hardhat"),(0,n.kt)("p",null,"This guides assumes you are using Hardhat with the ability to import contracts\nfrom npm packages."),(0,n.kt)("p",null,"You will need to add the ",(0,n.kt)("a",{parentName:"p",href:"/api/evm.js"},"@switchboard-xyz/evm.js")," dependency."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm i -D @switchboard-xyz/evm.js\n")),(0,n.kt)("p",null,"Depending on which chain you are building for, import the\n",(0,n.kt)("inlineCode",{parentName:"p"},"@switchboard-xyz/evm.js")," contracts like below:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},'// Get the Switchboard Library - this is the Core Mainnet Deployment, you can swap this for one of the networks below\nimport {Switchboard} from "@switchboard-xyz/evm.js/contracts/core/Switchboard.sol";\n\n/*\n * NOTE: replace with one of the following imports to use an actual network deployment\n * import {Switchboard} from "@switchboard-xyz/evm.js/contracts/core/testnet/Switchboard.sol";\n * import {Switchboard} from "@switchboard-xyz/evm.js/contracts/core/Switchboard.sol";\n * import {Switchboard} from "@switchboard-xyz/evm.js/contracts/arbitrum/testnet/Switchboard.sol";\n * import {Switchboard} from "@switchboard-xyz/evm.js/contracts/arbitrum/Switchboard.sol";\n * etc...\n */\n')),(0,n.kt)("p",null,"Then inside your contract read the latest result."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-solidity"},"// value fixed at 18 decimals -> Math.floor(decimal * 10**18) = value\n// timestamp in seconds\n(int256 value, uint256 timestamp) = Switchboard.getLatestResult(feedId);\n")))}u.isMDXComponent=!0}}]);