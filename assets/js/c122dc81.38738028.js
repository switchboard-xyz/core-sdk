"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2740],{54852:(t,e,a)=>{a.d(e,{Zo:()=>c,kt:()=>m});var r=a(49231);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function i(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function o(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?i(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function l(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var s=r.createContext({}),p=function(t){var e=r.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):o(o({},e),t)),a},c=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},h="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),h=p(a),u=n,m=h["".concat(s,".").concat(u)]||h[u]||d[u]||i;return a?r.createElement(m,o(o({ref:e},c),{},{components:a})):r.createElement(m,o({ref:e},c))}));function m(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[h]="string"==typeof t?t:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},34825:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(432),n=(a(49231),a(54852));const i={title:"Dialed in with Switchboard: May 23, 2022",description:"",authors:["gallynaut"],tags:[],hide_table_of_contents:!0},o="Dialed in with Switchboard: 5\u201323\u201322",l={permalink:"/blog/2022/05/23/Dialed-in-with-Switchboard",source:"@site/blog/2022/05-23-Dialed-in-with-Switchboard.mdx",title:"Dialed in with Switchboard: May 23, 2022",description:"",date:"2022-05-23T00:00:00.000Z",formattedDate:"May 23, 2022",tags:[],readingTime:2.575,hasTruncateMarker:!1,authors:[{name:"gallynaut",title:"Developer Relations",url:"https://twitter.com/gallynaut",imageURL:"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg",key:"gallynaut"}],frontMatter:{title:"Dialed in with Switchboard: May 23, 2022",description:"",authors:["gallynaut"],tags:[],hide_table_of_contents:!0},prevItem:{title:"Switchboard Publisher",permalink:"/blog/2022/06/22/Switchboard-Publisher"},nextItem:{title:"Dialed in with Switchboard: April 18, 2022",permalink:"/blog/2022/04/18/Dialed-in-with-Switchboard"}},s={authorsImageUrls:[void 0]},p=[{value:"Switchboard V2 SDK is Here!",id:"switchboard-v2-sdk-is-here",level:2},{value:"Setup",id:"setup",level:3},{value:"Quick Links",id:"quick-links",level:3},{value:"Localnet Integration",id:"localnet-integration",level:3},{value:"Uniswap &amp; SushiSwap Task Types",id:"uniswap--sushiswap-task-types",level:2},{value:"xStepPriceTask",id:"xsteppricetask",level:2},{value:"SplTokenParseTask &amp; SplStakePoolTask",id:"spltokenparsetask--splstakepooltask",level:2},{value:"Publisher",id:"publisher",level:2},{value:"Conclusion",id:"conclusion",level:2}],c={toc:p},h="wrapper";function d(t){let{components:e,...a}=t;return(0,n.kt)(h,(0,r.Z)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"switchboard-v2-sdk-is-here"},"Switchboard V2 SDK is Here!"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2"},(0,n.kt)("strong",{parentName:"a"},"github.com/switchboard-xyz/switchboard-v2"))),(0,n.kt)("p",null,"The Switchboard V2 SDK is here and includes the necessary tools to help you\nintegrate Switchboard into your on-or-off chain applications. The SDK includes\nlibraries for Typescript/Javascript, Python, and Rust, as well as example\nprograms demonstrating how to read and interact with Switchboard V2. Below is\nthe current overview of the Github repo structure:"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://cdn-images-1.medium.com/max/2000/0*8ZTLoxVoz8Lgfhdc",alt:"Current Switchboard V2 SDK Layout"}),(0,n.kt)("em",{parentName:"p"},"Current\nSwitchboard V2 SDK Layout")),(0,n.kt)("h3",{id:"setup"},"Setup"),(0,n.kt)("p",null,"Clone the repository"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone [https://github.com/switchboard-xyz/switchboard-v2.git](https://github.com/switchboard-xyz/switchboard-v2.git) && cd switchboard-v2\n")),(0,n.kt)("p",null,"Then, install and link the dependencies"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"yarn install\nyarn workspaces run build\nyarn workspace @switchboard-xyz/switchboardv2-cli link\nanchor build && node ./scripts/setup-example-programs.js\n")),(0,n.kt)("p",null,"Finally, test the example programs"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"anchor test\n")),(0,n.kt)("h3",{id:"quick-links"},"Quick Links"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/ts"},"Typescript Client"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/rs"},"Rust Client"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/py"},"Python Client"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli"},"Command Line Interface"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/programs"},"On-Chain Program Examples"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/packages"},"Off-Chain Client Examples"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/oracles"},"Oracle Deployment Scripts"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/directory"},"Job Directory"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/introduction"},"Documentation Website")))),(0,n.kt)("h3",{id:"localnet-integration"},"Localnet Integration"),(0,n.kt)("p",null,"The SDK supports copying a Switchboard devnet environment to your localnet\nenvironment for integration testing. This is useful if you want to see how your\nprogram will react to Switchboard data feed updates."),(0,n.kt)("p",null,"First, change the cluster to localnet in Anchor.toml."),(0,n.kt)("p",null,"Next, create a Switchboard devnet queue and oracle."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"sbv2 localnet:env --keypair ../payer-keypair.json -o .switchboard\n")),(0,n.kt)("p",null,"This command will output:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"start-local-validator.sh"),": starts a local Solana validator with the\nSwitchboard program, IDL, and our devnet environment pre-loaded")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"start-oracle.sh"),": start a Switchboard oracle and start heartbeating on the\nlocalnet queue")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"docker-compose.yml"),": docker file with the Switchboard oracle environment")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("strong",{parentName:"p"},"switchboard.env"),": contains your Switchboard accounts"))),(0,n.kt)("p",null,"In three separate shells, run the following commands in this order:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},".switchboard/start-local-validator.sh")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},".switchboard/start-oracle.sh")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"anchor test --skip-local-validator"))),(0,n.kt)("p",null,"The anchor tests are configured to first fetch the account info for the\nSwitchboard DAO controlled devnet permissionless queue. If the account info is\nnot found, it assumes a localnet connection and looks for the switchboard.env\nwith your Switchboard environment specific public keys. If a .switchboard\ndirectory or switchboard.env file is not found in the root project directory, it\nwill look 2 levels higher until giving up."),(0,n.kt)("h2",{id:"uniswap--sushiswap-task-types"},"Uniswap & SushiSwap Task Types"),(0,n.kt)("p",null,"Switchboard has added the\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/api/tasks#uniswapexchangeratetask"},"UniswapExchangeRateTask"),"\nand\n",(0,n.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/api/tasks#sushiswapexchangeratetask"},"SushiSwapExchangeRateTask"),"\nto resolve the swap price of assets on Uniswap and SushiSwap. These new task\ntypes will allow Solana protocols to offer DeFi products using data sourced from\nEthereum."),(0,n.kt)("iframe",{src:"https://medium.com/media/0d02ad6777d181dd0e633aa245a4761d",frameborder:"0"}),(0,n.kt)("h2",{id:"xsteppricetask"},"xStepPriceTask"),(0,n.kt)("p",null,"Switchboard also ported over the ",(0,n.kt)("a",{parentName:"p",href:"http://xsteppricetask"},"xStepPriceTask")," from\nSwitchboard V1 to Switchboard V2. The following is an example of how to use the\nnew task type:"),(0,n.kt)("iframe",{src:"https://medium.com/media/df6602bca382c16a430fcb92a649a4bd",frameborder:"0"}),(0,n.kt)("h2",{id:"spltokenparsetask--splstakepooltask"},"SplTokenParseTask & SplStakePoolTask"),(0,n.kt)("p",null,"Switchboard has added the\n",(0,n.kt)("a",{parentName:"p",href:"https://gist.github.com/gallynaut/1414b538090e29fe598ef4186445de0d"},"SplTokenParseTask"),"\nand ",(0,n.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/api/tasks#splstakepooltask"},"SplStakePoolTask"),"\nto resolve on-chain data in your Switchboard feeds. This will allow developers\nto build data feeds using live on-chain data. The following is an example of how\nto fetch the total token supply of the MonkeeDao stake pool:"),(0,n.kt)("iframe",{src:"https://medium.com/media/d2e9490116b013c01959be8bf47c99bb",frameborder:"0"}),(0,n.kt)("h2",{id:"publisher"},"Publisher"),(0,n.kt)("p",null,"The publisher got a facelift"),(0,n.kt)("p",null,"\u2026 more details soon\u2122!"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://publish.switchboard.xyz/"},"publish.switchboard.xyz")),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"The Switchboard V2 SDK is here to help developers integrate Switchboard into\ntheir applications. We welcome any PRs or feedback from the community!"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://docs.switchboard.xyz/"},"docs.switchboard.xyz"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"http://discord.switchboard.xyz/"},"discord.switchboard.xyz"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://twitter.com/switchboardxyz"},"twitter.com/switchboardxyz"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://t.me/switchboardxyz"},"t.me/switchboardxyz")))))}d.isMDXComponent=!0}}]);