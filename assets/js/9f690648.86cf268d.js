"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6450],{26777:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(49231),r=a(19841);const o={tabItem:"tabItem_okbR"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},79510:(e,t,a)=>{a.d(t,{Z:()=>g});var n=a(95907),r=a(49231),o=a(19841),l=a(74274),s=a(52692),i=a(8253);const u={tabList:"tabList_f3tl",tabItem:"tabItem_Z8Bx"};function c(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:c}=e;const d=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),g=e=>{const t=e.currentTarget,a=d.indexOf(t),n=c[a].value;n!==s&&(p(t),i(n))},m=e=>{let t=null;switch(e.key){case"Enter":g(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:g},l,{className:(0,o.Z)("tabs__item",u.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function d(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function p(e){const t=(0,s.Y)(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},r.createElement(c,(0,n.Z)({},e,t)),r.createElement(d,(0,n.Z)({},e,t)))}function g(e){const t=(0,i.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},52692:(e,t,a)=>{a.d(t,{Y:()=>p});var n=a(49231),r=a(19409),o=a(73433),l=a(64194),s=a(77148);function i(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function u(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??i(a);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:a}=e;const l=(0,r.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(l.location.search);t.set(s,e),l.replace({...l.location,search:t.toString()})}),[s,l])]}function p(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=u(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[p,g]=d({queryString:a,groupId:r}),[m,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,s.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),f=(()=>{const e=p??m;return c({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!c({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),g(e),h(e)}),[g,h,o]),tabValues:o}}},65797:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(92407),r=a(5485),o=a(74399),l=a(49231);const s=e=>{const{colorMode:t}=(0,n.I)();let a=(0,r.Z)("dark"===t&&e.darkImg?e.darkImg:e.img),s="inherit";e.lightBg&&"dark"!==t&&(s=e.lightBg),e.darkBg&&"dark"===t&&(s=e.darkBg);let i={};return e.sx&&(i={backgroundColor:s,m:"auto",display:"flex",...i,...e.sx}),l.createElement(o.Z,{component:"img",sx:i,src:a})}},6269:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>g,default:()=>v,frontMatter:()=>p,metadata:()=>m,toc:()=>f});var n=a(95907),r=(a(49231),a(54852)),o=(a(65797),a(28784),a(16299));a(79510),a(26777);const l="use anchor_lang::solana_program::clock;\nuse std::convert::TryInto;\nuse switchboard_v2::{AggregatorAccountData, SwitchboardDecimal, SWITCHBOARD_PROGRAM_ID};\n\n// check feed owner\nlet owner = *aggregator.owner;\nif owner != SWITCHBOARD_PROGRAM_ID {\n    return Err(error!(ErrorCode::InvalidSwitchboardAccount));\n}\n\n// deserialize account info\nlet feed = ctx.accounts.aggregator.load()?;\n// OR\nlet feed = AggregatorAccountData::new(feed_account_info)?;\n\n// get result\nlet decimal: f64 = feed.get_result()?.try_into()?;\n\n// check if feed has been updated in the last 5 minutes\nfeed.check_staleness(clock::Clock::get().unwrap().unix_timestamp, 300)?;\n\n// check if feed exceeds a confidence interval of +/i $0.80\nfeed.check_confidence_interval(SwitchboardDecimal::from_f64(0.80))?;",s='import Big from "big.js";\nimport { AggregatorAccount } from "@switchboard-xyz/solana.js";\n\nconst aggregatorAccount = new AggregatorAccount(program, aggregatorPubkey);\n\nconst result: Big | null = await aggregatorAccount.fetchLatestValue();\nif (result === null) {\n  throw new Error("Aggregator holds no value");\n}\nconsole.log(result.toString());\n',i='import { QueueAccount } from "@switchboard-xyz/solana.js";\nimport { OracleJob } from "@switchboard-xyz/common";\n\nconst queueAccount = new QueueAccount(program, queuePubkey);\n\nconst [aggregatorAccount, aggregatorInitSignatures] =\n  await queueAccount.createFeed({\n    batchSize: 1,\n    minRequiredOracleResults: 1,\n    minRequiredJobResults: 1,\n    minUpdateDelaySeconds: 60,\n    fundAmount: 2.5, // deposit 2.5 wSOL into the leaseAccount escrow\n    jobs: [\n      { pubkey: jobAccount.publicKey },\n      {\n        weight: 2,\n        data: OracleJob.encodeDelimited(\n          OracleJob.fromObject({\n            tasks: [\n              {\n                valueTask: {\n                  value: 1,\n                },\n              },\n            ],\n          })\n        ).finish(),\n      },\n    ],\n  });\nconst aggregator = await aggregatorAccount.loadData();\n',u={toc:[]},c="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"First install the sbv2 cli"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install -g @switchboard-xyz\n")),(0,r.kt)("p",null,"Then run the following command to create your own feed using the devnet\npermissionless queue and crank"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export QUEUE_KEY=uPeRMdfPmrPqgRWSrjAnAkH78RqAhe5kXoW6vBYRqFX\nexport CRANK_KEY=GN9jjCy2THzZxhYqZETmPM3my8vg4R5JyNkgULddUMa5\nsbv2 solana aggregator create "$QUEUE_KEY" \\\n    --keypair ~/.config/solana/id.json \\\n    --crankKey "$CRANK_KEY" \\\n    --name "My_Test_Feed" \\\n    --updateInterval 10 \\\n    --minOracles 1 \\\n    --batchSize 1 \\\n    --leaseAmount 0.1 \\\n    --job ./src/oracle-job.json \\\n    --verbose\n')),(0,r.kt)("p",null,"Then request an update for your new feed"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"sbv2 solana aggregator update $AGGREGATOR_KEY \\\n    --keypair ~/.config/solana/id.json\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," You can provide multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"--job")," flags to add additional oracle jobs\nto your data feed"))}d.isMDXComponent=!0;const p={sidebar_position:1,title:"Data Feed Integration"},g=void 0,m={unversionedId:"solana/guides/feeds",id:"solana/guides/feeds",title:"Data Feed Integration",description:"Read a Feed On-Chain",source:"@site/docs/solana/guides/feeds.mdx",sourceDirName:"solana/guides",slug:"/solana/guides/feeds",permalink:"/solana/guides/feeds",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Data Feed Integration"},sidebar:"solanaSidebar",previous:{title:"javascript-feed-walkthrough",permalink:"/solana/sdk/javascript/javascript-feed-walkthrough"},next:{title:"Priority Fees",permalink:"/solana/guides/priority-fees"}},h={},f=[{value:"Read a Feed On-Chain",id:"read-a-feed-on-chain",level:2},{value:"Read a Feed with Typescript",id:"read-a-feed-with-typescript",level:2},{value:"Create a Feed in Typescript",id:"create-a-feed-in-typescript",level:2},{value:"Create a Feed with the CLI",id:"create-a-feed-with-the-cli",level:2},{value:"More Resources",id:"more-resources",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Why is my feed stale?",id:"why-is-my-feed-stale",level:3}],b={toc:f},k="wrapper";function v(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"read-a-feed-on-chain"},"Read a Feed On-Chain"),(0,r.kt)(o.default,{language:"rust",mdxType:"CodeBlock"},l),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"/solana/sdk/anchor/anchor-feed-parser"},"anchor-feed-parser")," example for\na full example."),(0,r.kt)("h2",{id:"read-a-feed-with-typescript"},"Read a Feed with Typescript"),(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},s),(0,r.kt)("h2",{id:"create-a-feed-in-typescript"},"Create a Feed in Typescript"),(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},i),(0,r.kt)("h2",{id:"create-a-feed-with-the-cli"},"Create a Feed with the CLI"),(0,r.kt)(d,{mdxType:"CreateFeedCli"}),(0,r.kt)("h2",{id:"more-resources"},"More Resources"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/switchboard-xyz/sbv2-solana/tree/main/programs/anchor-feed-parser"},"anchor-feed-parser"),":\nView an anchor example showing how to deserialize and read a Switchboard data\nfeed"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/switchboard-xyz/sbv2-solana/blob/main/javascript/solana.js/test/aggregator.spec.ts"},"aggregator.spec.ts"),":\nView the javascript tests for an aggregator and see sample implementations")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h3",{id:"why-is-my-feed-stale"},"Why is my feed stale?")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Does the feed have enough funds in its lease account?"),(0,r.kt)("li",{parentName:"ul"},"Does the feed have the right permissions for its queue?"),(0,r.kt)("li",{parentName:"ul"},"Is the feed currently on a crank?"),(0,r.kt)("li",{parentName:"ul"},"Is a new round being opened?"))))}v.isMDXComponent=!0}}]);