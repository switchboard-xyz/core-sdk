"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1984],{54852:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>b});var n=a(49231);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),c=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),p=r,b=d["".concat(i,".").concat(p)]||d[p]||m[p]||o;return a?n.createElement(b,l(l({ref:t},u),{},{components:a})):n.createElement(b,l({ref:t},u))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[d]="string"==typeof e?e:r,l[1]=s;for(var c=2;c<o;c++)l[c]=a[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},4262:(e,t,a)=>{var n=a(64403);t.Z=void 0;!function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var a=l(t);if(a&&a.has(e))return a.get(e);var n={},r=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if("default"!==o&&Object.prototype.hasOwnProperty.call(e,o)){var s=r?Object.getOwnPropertyDescriptor(e,o):null;s&&(s.get||s.set)?Object.defineProperty(n,o,s):n[o]=e[o]}n.default=e,a&&a.set(e,n)}(a(49231));var r=n(a(20872)),o=a(20264);function l(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,a=new WeakMap;return(l=function(e){return e?a:t})(e)}var s=(0,r.default)((0,o.jsx)("path",{d:"M12 1.27a11 11 0 00-3.48 21.46c.55.09.73-.28.73-.55v-1.84c-3.03.64-3.67-1.46-3.67-1.46-.55-1.29-1.28-1.65-1.28-1.65-.92-.65.1-.65.1-.65 1.1 0 1.73 1.1 1.73 1.1.92 1.65 2.57 1.2 3.21.92a2 2 0 01.64-1.47c-2.47-.27-5.04-1.19-5.04-5.5 0-1.1.46-2.1 1.2-2.84a3.76 3.76 0 010-2.93s.91-.28 3.11 1.1c1.8-.49 3.7-.49 5.5 0 2.1-1.38 3.02-1.1 3.02-1.1a3.76 3.76 0 010 2.93c.83.74 1.2 1.74 1.2 2.94 0 4.21-2.57 5.13-5.04 5.4.45.37.82.92.82 2.02v3.03c0 .27.1.64.73.55A11 11 0 0012 1.27"}),"GitHub");t.Z=s},49250:(e,t,a)=>{var n=a(64403);t.Z=void 0;var r=n(a(20872)),o=a(20264),l=(0,r.default)((0,o.jsx)("path",{d:"M12 14v-1h1.5v.5h2v-1H13c-.55 0-1-.45-1-1V10c0-.55.45-1 1-1h3c.55 0 1 .45 1 1v1h-1.5v-.5h-2v1H16c.55 0 1 .45 1 1V14c0 .55-.45 1-1 1h-3c-.55 0-1-.45-1-1zM9 9v4.5H7.5v-1H6v1c0 .83.67 1.5 1.5 1.5H9c.83 0 1.5-.67 1.5-1.5V9H9z"}),"Javascript");t.Z=l},15811:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(52347),r=a(95634),o=a(49231),l=a(19841),s=a(63701),i=a(73315),c=a(53169),u=a(94515),d=a(20264);const m=(0,u.Z)((0,d.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person");var p=a(79101);function b(e){return(0,p.Z)("MuiAvatar",e)}(0,a(90912).Z)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);const g=["alt","children","className","component","imgProps","sizes","src","srcSet","variant"],h=(0,i.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,t[a.variant],a.colorDefault&&t.colorDefault]}})((({theme:e,ownerState:t})=>(0,r.Z)({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none"},"rounded"===t.variant&&{borderRadius:e.shape.borderRadius},"square"===t.variant&&{borderRadius:0},t.colorDefault&&{color:e.palette.background.default,backgroundColor:"light"===e.palette.mode?e.palette.grey[400]:e.palette.grey[600]}))),f=(0,i.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:(e,t)=>t.img})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),v=(0,i.ZP)(m,{name:"MuiAvatar",slot:"Fallback",overridesResolver:(e,t)=>t.fallback})({width:"75%",height:"75%"});const y=o.forwardRef((function(e,t){const a=(0,c.Z)({props:e,name:"MuiAvatar"}),{alt:i,children:u,className:m,component:p="div",imgProps:y,sizes:k,src:w,srcSet:x,variant:E="circular"}=a,S=(0,n.Z)(a,g);let Z=null;const T=function({crossOrigin:e,referrerPolicy:t,src:a,srcSet:n}){const[r,l]=o.useState(!1);return o.useEffect((()=>{if(!a&&!n)return;l(!1);let r=!0;const o=new Image;return o.onload=()=>{r&&l("loaded")},o.onerror=()=>{r&&l("error")},o.crossOrigin=e,o.referrerPolicy=t,o.src=a,n&&(o.srcset=n),()=>{r=!1}}),[e,t,a,n]),r}((0,r.Z)({},y,{src:w,srcSet:x})),A=w||x,R=A&&"error"!==T,j=(0,r.Z)({},a,{colorDefault:!R,component:p,variant:E}),F=(e=>{const{classes:t,variant:a,colorDefault:n}=e,r={root:["root",a,n&&"colorDefault"],img:["img"],fallback:["fallback"]};return(0,s.Z)(r,b,t)})(j);return Z=R?(0,d.jsx)(f,(0,r.Z)({alt:i,src:w,srcSet:x,sizes:k,ownerState:j,className:F.img},y)):null!=u?u:A&&i?i[0]:(0,d.jsx)(v,{className:F.fallback}),(0,d.jsx)(h,(0,r.Z)({as:p,ownerState:j,className:(0,l.Z)(F.root,m),ref:t},S,{children:Z}))}))},12416:(e,t,a)=>{a.d(t,{Z:()=>y});var n=a(52347),r=a(95634),o=a(49231),l=a(19841),s=a(63701),i=a(88420),c=a(73315),u=a(53169),d=a(7238),m=a(68248),p=a(79101);function b(e){return(0,p.Z)("MuiIconButton",e)}const g=(0,a(90912).Z)("MuiIconButton",["root","disabled","colorInherit","colorPrimary","colorSecondary","edgeStart","edgeEnd","sizeSmall","sizeMedium","sizeLarge"]);var h=a(20264);const f=["edge","children","className","color","disabled","disableFocusRipple","size"],v=(0,c.ZP)(d.Z,{name:"MuiIconButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,"default"!==a.color&&t[`color${(0,m.Z)(a.color)}`],a.edge&&t[`edge${(0,m.Z)(a.edge)}`],t[`size${(0,m.Z)(a.size)}`]]}})((({theme:e,ownerState:t})=>(0,r.Z)({textAlign:"center",flex:"0 0 auto",fontSize:e.typography.pxToRem(24),padding:8,borderRadius:"50%",overflow:"visible",color:(e.vars||e).palette.action.active,transition:e.transitions.create("background-color",{duration:e.transitions.duration.shortest})},!t.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${e.vars.palette.action.active} / ${e.vars.palette.action.hoverOpacity})`:(0,i.Fq)(e.palette.action.active,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},"start"===t.edge&&{marginLeft:"small"===t.size?-3:-12},"end"===t.edge&&{marginRight:"small"===t.size?-3:-12})),(({theme:e,ownerState:t})=>(0,r.Z)({},"inherit"===t.color&&{color:"inherit"},"inherit"!==t.color&&"default"!==t.color&&(0,r.Z)({color:(e.vars||e).palette[t.color].main},!t.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${e.vars.palette[t.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:(0,i.Fq)(e.palette[t.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}}),"small"===t.size&&{padding:5,fontSize:e.typography.pxToRem(18)},"large"===t.size&&{padding:12,fontSize:e.typography.pxToRem(28)},{[`&.${g.disabled}`]:{backgroundColor:"transparent",color:(e.vars||e).palette.action.disabled}}))),y=o.forwardRef((function(e,t){const a=(0,u.Z)({props:e,name:"MuiIconButton"}),{edge:o=!1,children:i,className:c,color:d="default",disabled:p=!1,disableFocusRipple:g=!1,size:y="medium"}=a,k=(0,n.Z)(a,f),w=(0,r.Z)({},a,{edge:o,color:d,disabled:p,disableFocusRipple:g,size:y}),x=(e=>{const{classes:t,disabled:a,color:n,edge:r,size:o}=e,l={root:["root",a&&"disabled","default"!==n&&`color${(0,m.Z)(n)}`,r&&`edge${(0,m.Z)(r)}`,`size${(0,m.Z)(o)}`]};return(0,s.Z)(l,b,t)})(w);return(0,h.jsx)(v,(0,r.Z)({className:(0,l.Z)(x.root,c),centerRipple:!0,focusRipple:!g,disabled:p,ref:t,ownerState:w},k,{children:i}))}))},70651:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(49231),r=a(19841);const o={tabItem:"tabItem_cjqz"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},54405:(e,t,a)=>{a.d(t,{Z:()=>p});var n=a(95634),r=a(49231),o=a(19841),l=a(93682),s=a(17096),i=a(80852);const c={tabList:"tabList_URvL",tabItem:"tabItem_e5E2"};function u(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:m}=(0,l.o5)(),p=e=>{const t=e.currentTarget,a=d.indexOf(t),n=u[a].value;n!==s&&(m(t),i(n))},b=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=d.indexOf(e.currentTarget)+1;t=d[a]??d[0];break}case"ArrowLeft":{const a=d.indexOf(e.currentTarget)-1;t=d[a]??d[d.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>d.push(e),onKeyDown:b,onClick:p},l,{className:(0,o.Z)("tabs__item",c.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function d(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function m(e){const t=(0,s.Y)(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",c.tabList)},r.createElement(u,(0,n.Z)({},e,t)),r.createElement(d,(0,n.Z)({},e,t)))}function p(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},17096:(e,t,a)=>{a.d(t,{Y:()=>m});var n=a(49231),r=a(19409),o=a(18948),l=a(79862),s=a(42150);function i(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function c(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??i(a);return function(e){const t=(0,l.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function u(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function d(e){let{queryString:t=!1,groupId:a}=e;const l=(0,r.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,n.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(l.location.search);t.set(s,e),l.replace({...l.location,search:t.toString()})}),[s,l])]}function m(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=c(e),[l,i]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!u({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[m,p]=d({queryString:a,groupId:r}),[b,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,s.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=m??b;return u({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&i(h)}),[h]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!u({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),p(e),g(e)}),[p,g,o]),tabValues:o}}},49798:(e,t,a)=>{a.d(t,{Z:()=>d});var n=a(68885),r=a(63536),o=a(73315),l=a(15811),s=a(40862),i=a(92994),c=a(49231);const u=(0,o.ZP)(l.Z)((e=>{let{theme:t}=e;return{width:48,height:48,marginBottom:"8px",backgroundColor:"white",boxShadow:"0px 1px 3px 0px rgba(33, 27, 78, 0.15)",[t.breakpoints.down("md")]:{width:32,height:32},"& .MuiAvatar-img":{width:24,height:24,[t.breakpoints.down("md")]:{width:16,height:16}}}}));function d(e){const{colorMode:t}=(0,r.I)(),{title:a,to:o,image:l}=e;let d={p:2};return e.sx&&(d={...d,...e.sx}),o?c.createElement(s.Z,{key:a+"AvatarIcon",display:"flex",flexDirection:"column",alignItems:"center",component:n.default,href:o,style:{textDecoration:"none"},sx:d},c.createElement(u,{src:l}),a?c.createElement(i.Z,{align:"center",sx:{fontFamily:"Source Sans Pro",fontSize:16,fontWeight:600,color:"dark"===t?"white":"#172B4D"}},a):c.createElement(c.Fragment,null)):c.createElement(s.Z,{key:a+"AvatarIcon",display:"flex",flexDirection:"column",alignItems:"center",style:{textDecoration:"none"},sx:d},c.createElement(u,{src:l}),a?c.createElement(i.Z,{align:"center",sx:{fontFamily:"Source Sans Pro",fontSize:16,fontWeight:600,color:"dark"===t?"white":"#172B4D"}},a):c.createElement(c.Fragment,null))}},4765:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(68885),r=a(63536),o=a(4262),l=a(49250),s=a(50853),i=a(12416),c=a(92994),u=a(73315),d=a(41002),m=a(51766),p=a(49231),b=a(49798),g=a(29479);function h(e){const{colorMode:t}=(0,r.I)(),{sdk:a}=e,u=g.M.get(a);return p.createElement(p.Fragment,null,p.createElement(f,{dark:Number("dark"===t)},p.createElement(s.ZP,{container:!0,spacing:1,justifyContent:"flex-start",alignItems:"center"},p.createElement(s.ZP,{item:!0},p.createElement(b.Z,{sx:{p:1},title:"",image:u.icon.light})),p.createElement(s.ZP,{itemScope:!0},p.createElement("h3",{className:"landing_page",style:{padding:"10px"}},(0,d.S)(a)+" SDK")),p.createElement(s.ZP,{container:!0,item:!0,flex:2},p.createElement(n.default,{to:u.sdk.js.link,style:{marginLeft:"auto"}},p.createElement(i.Z,{sx:{color:"#4C6FFF"}},p.createElement(l.Z,{fontSize:"large"}))),p.createElement(n.default,{to:u.git,style:{marginLeft:"0px"}},p.createElement(i.Z,{sx:{color:"#4C6FFF"}},p.createElement(o.Z,{fontSize:"large"}))))),p.createElement(s.ZP,{container:!0},p.createElement(s.ZP,{item:!0,xs:12,md:3},p.createElement(c.Z,null,"Quick Links"),p.createElement("ul",null,p.createElement("li",null,p.createElement(n.default,{to:`/${a}`},"Getting Started")),p.createElement("li",null,p.createElement(n.default,{to:`/${a}/dev`},"Developer Resources")),p.createElement("li",null,p.createElement(n.default,{to:u.git},"Github SDK"))),u.links.map((e=>p.createElement("li",null,p.createElement(n.default,{to:e.link},e.label)))),p.createElement(c.Z,null,"Libraries"),p.createElement("ul",null,p.createElement("li",null,p.createElement(n.default,{to:u.sdk.js.link},u.sdk.js.label)),u.sdk.rust?p.createElement("li",null,p.createElement(n.default,{to:u.sdk.rust.link},u.sdk.rust.label)):p.createElement(p.Fragment,null),u.sdk.move?p.createElement("li",null,p.createElement(n.default,{to:u.sdk.move.link},u.sdk.move.label)):p.createElement(p.Fragment,null),p.createElement("li",null,p.createElement(n.default,{to:"/api/cli"},"Sb Cli")),u.sdk.solidity?u.sdk.solidity.map((e=>p.createElement("li",{key:e.label},p.createElement(n.default,{to:e.link},e.label)))):p.createElement(p.Fragment,null))),p.createElement(s.ZP,{item:!0,xs:12,md:9},p.createElement(c.Z,null,`Clone the Switchboard x ${(0,d.S)(a)} SDK to get started:`),p.createElement(m.default,{language:"bash"},`git clone ${u.git}`),p.createElement(c.Z,null,"Examples"),p.createElement("ul",null,u.examples.map((e=>p.createElement("li",{key:e.label},p.createElement(n.default,{to:e.link},e.label)))))))))}const f=(0,u.ZP)("div")((e=>{let{dark:t}=e;return{display:"flex",width:"100%",height:"100%",padding:"32px",gap:"16px",border:"solid 1px #E8E8E8",borderRadius:"16px",flexDirection:"column",boxShadow:"0 11px 15px 0 rgba(164, 164, 164, 0.21)"}}))},29479:(e,t,a)=>{a.d(t,{M:()=>n});const n=new Map([["solana",{git:"https://github.com/switchboard-xyz/solana-sdk",discord:"https://discord.com/channels/841525135311634443/984343400377647144",icon:{light:"/img/icons/solana/logo.svg",dark:"/img/icons/solana/logo.svg"},links:[],sdk:{js:{label:"@switchboard-xyz/solana.js",link:"/api/solana.js"},rust:{label:"Rust: switchboard-solana",link:"https://docs.rs/switchboard-solana/latest/switchboard_solana/"}},examples:[{label:"Switchboard Function Examples",link:"https://github.com/switchboard-xyz/solana-sdk/tree/main/examples/functions"},{label:"Data Feed Examples",link:"https://github.com/switchboard-xyz/solana-sdk/tree/main/examples/feeds"},{label:"Randomness Examples",link:"https://github.com/switchboard-xyz/solana-sdk/tree/main/examples/vrf"},{label:"VRF Flip",link:"https://github.com/switchboard-xyz/vrf-flip"}]}],["evm",{git:"https://github.com/switchboard-xyz/evm-sdk",discord:"https://discord.com/channels/841525135311634443/1134016468703526972",icon:{light:"/img/icons/solidity/light.svg",dark:"/img/icons/solana/dark.svg"},links:[],sdk:{js:{label:"@switchboard-xyz/evm.js",link:"/api/evm.js"},rust:{label:"Rust: switchboard-evm",link:"https://docs.rs/switchboard-evm/latest/switchboard_evm/"}},examples:[{label:"Coin Flip",link:"https://github.com/switchboard-xyz/evm-coin-flip"},{label:"Randomness Callback Function",link:"https://github.com/switchboard-xyz/evm-sdk/tree/main/examples/01_randomness_callback"},{label:"User Triggered Callback",link:"https://github.com/switchboard-xyz/evm-sdk/tree/main/examples/02_user_triggered_callback"}]}],["aptos",{git:"https://github.com/switchboard-xyz/aptos-sdk",discord:"https://discord.com/channels/841525135311634443/1134016412734726216",icon:{light:"/img/icons/aptos/logo.svg",dark:"/img/icons/aptos/dark.svg"},links:[],sdk:{js:{label:"@switchboard-xyz/aptos.js",link:"/api/aptos.js"},move:{label:"Move: switchboard-aptos",link:"https://github.com/switchboard-xyz/aptos-sdk/tree/main/move/switchboard"}},examples:[{label:"Switchboard Feed Parser",link:"https://github.com/switchboard-xyz/aptos-sdk/blob/main/programs/feed-parser/sources/demo.move"}]}],["sui",{git:"https://github.com/switchboard-xyz/sui-sdk",discord:"https://discord.com/channels/841525135311634443/1134016553759821894",icon:{light:"/img/icons/sui/logo.svg",dark:"/img/icons/sui/dark.svg"},links:[],sdk:{js:{label:"@switchboard-xyz/sui.js",link:"/api/sui.js"},move:{label:"Move: switchboard-sui",link:"https://github.com/switchboard-xyz/sui-sdk/tree/main/move/mainnet/switchboard_std"}},examples:[{label:"Switchboard Feed Parser",link:"https://github.com/switchboard-xyz/sui-sdk/blob/main/programs/mainnet/feed-parser/sources/demo.move"}]}]])},41002:(e,t,a)=>{function n(e){const t=e.split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ");return t.endsWith("dao")?t.slice(0,t.length-3)+"DAO":t}a.d(t,{S:()=>n})},81451:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>x,contentTitle:()=>k,default:()=>T,frontMatter:()=>y,metadata:()=>w,toc:()=>E});var n=a(95634),r=(a(49231),a(54852)),o=a(51766),l=a(54405),s=a(70651),i=a(4765);const c='import { parseMrEnclave } from "@switchboard-xyz/common";\nimport type { SwitchboardProgram } from "@switchboard-xyz/solana.js";\nimport {\n  AttesationQueueAccount,\n  FunctionAccount,\n} from "@switchboard-xyz/solana.js";\n\nlet program: SwitchboardProgram;\nconst attestationQueueAccount = new AttesationQueueAccount(\n  program,\n  "2ie3JZfKcvsRLsJaP5fSo43gUo1vsurnUAtAgUdUAiDG" // mainnet attestation queue\n);\n\nconst [functionAccount] = await FunctionAccount.create(program, {\n  name: "FUNCTION_NAME",\n  metadata: "FUNCTION_METADATA",\n  schedule: "30 * * * * *", // every 30 seconds\n  container: "switchboardlabs/basic-binance-oracle",\n  containerRegistry: "dockerhub",\n  version: "latest",\n  mrEnclave: parseMrEnclave("0xABC123"),\n  attestationQueue: attestationQueueAccount,\n});\n',u='sb solana function create 2ie3JZfKcvsRLsJaP5fSo43gUo1vsurnUAtAgUdUAiDG \\\n  --name "My Function" \\\n  --metadata "Randomness Callback" \\\n  --schedule "30 * * * * *" \\\n  --containerRegistry dockerhub \\\n  --container "switchboardlabs/basic-binance-oracle" \\\n  --keypair ~/.config/solana/id.json \\\n  --mainnetBeta',d="use switchboard_solana::FunctionAccountData;\n\n#[derive(Accounts)]\npub struct SaveDataInstruction<'info> {\n    // ... your required accounts to modify your program's state\n\n    // We use this to derive and verify the functions enclave state\n    #[account(\n        constraint =\n            function.load()?.validate(\n              &enclave_signer.to_account_info()\n            )?\n    )]\n    pub function: AccountLoader<'info, FunctionAccountData>,\n    pub enclave_signer: Signer<'info>,\n}\n",m='import type {\n  attestationTypes,\n  SwitchboardProgram,\n} from "@swtichboard-xyz/solana.js";\nimport { FunctionAccount } from "@swtichboard-xyz/solana.js";\n\nlet program: SwitchboardProgram;\n\nconst functionAccount = new FunctionAccount(program, "My_Function_Pubkey");\nconst functionState: attestationTypes.FunctionAccountData =\n  await functionAccount.loadData();\n',p="sb solana function print $MY_FUNCTION_PUBKEY --mainnetBeta",b='import type {\n  JobAccount,\n  SwitchboardProgram,\n} from "@switchboard-xyz/solana.js";\nimport { OracleQueueAccount } from "@switchboard-xyz/solana.js";\n\nlet program: SwitchboardProgram;\nlet jobAccount: JobAccount;\n\nconst queueAccount = new OracleQueueAccount(\n  program,\n  "uPeRMdfPmrPqgRWSrjAnAkH78RqAhe5kXoW6vBYRqFX"\n); // devnet\n\nconst [aggregatorAccount] = await queueAccount.createFeed({\n  batchSize: 1,\n  minRequiredOracleResults: 1,\n  minRequiredJobResults: 1,\n  minUpdateDelaySeconds: 60,\n  fundAmount: 2.5,\n  enable: true,\n  jobs: [\n    // existing job account\n    { pubkey: jobAccount.publicKey },\n    // or create a new job account with the feed\n    {\n      weight: 2,\n      data: OracleJob.encodeDelimited(\n        OracleJob.fromObject({\n          tasks: [\n            {\n              valueTask: {\n                value: 1,\n              },\n            },\n          ],\n        })\n      ).finish(),\n    },\n  ],\n});\n',g='export QUEUE_KEY=uPeRMdfPmrPqgRWSrjAnAkH78RqAhe5kXoW6vBYRqFX\nexport CRANK_KEY=GN9jjCy2THzZxhYqZETmPM3my8vg4R5JyNkgULddUMa5\n\nsb solana aggregator create "$QUEUE_KEY" \\\n    --keypair ~/.config/solana/id.json \\\n    --crankKey "$CRANK_KEY" \\\n    --name "My_Test_Feed" \\\n    --updateInterval 10 \\\n    --minOracles 1 \\\n    --batchSize 1 \\\n    --leaseAmount 0.1 \\\n    --job ./src/oracle-job.json \\\n    --verbose',h='use anchor_lang::prelude::*;\nuse anchor_lang::solana_program::clock;\n\nuse std::convert::TryInto;\n\n// Instruction accounts\n#[derive(Accounts)]\n#[instruction(params: ReadFeedParams)]\npub struct ReadFeed<\'info> {\n    pub aggregator: AccountLoader<\'info, AggregatorAccountData>,\n}\n\n// Instruction params\n#[derive(Clone, AnchorSerialize, AnchorDeserialize)]\npub struct ReadFeedParams {\n    pub max_confidence_interval: Option<f64>,\n}\n\n// Instruction logic\npub fn read_result(\n    ctx: Context<ReadResult>\n) -> anchor_lang::Result<()> {\n    let feed = &ctx.accounts.switchboard_aggregator.load()?;\n\n    // get result\n    let val: f64 = feed.get_result()?.try_into()?;\n\n    // check whether the feed has been updated in the last 300 seconds\n    feed.check_staleness(clock::Clock::get().unwrap().unix_timestamp, 300)\n        .map_err(|_| error!(FeedErrorCode::StaleFeed))?;\n\n    msg!("Current feed result is {}!", val);\n\n    // Your custom logic here\n\n    Ok(())\n}\n\n#[error_code]\n#[derive(Eq, PartialEq)]\npub enum FeedErrorCode {\n    #[msg("Switchboard feed has not been updated in 5 minutes")]\n    StaleFeed,\n}',f='import type { SwitchboardProgram, types } from "@swtichboard-xyz/solana.js";\nimport { AggregatorAccount } from "@swtichboard-xyz/solana.js";\n\nlet program: SwitchboardProgram;\n\nconst aggregatorAccount = new AggregatorAccount(program, "My_Data_Feed_Pubkey");\nconst aggregatorState: types.AggregatorAccountData =\n  await aggregatorAccount.loadData();\n',v='sb solana function print "$MY_FUNCTION_PUBKEY"',y={slug:".",title:"Developer Resources",keywords:["Solana","Solana SDK","Oracles","Web3","Off-chain","Randomness"]},k=void 0,w={unversionedId:"solana/dev/overview",id:"solana/dev/overview",title:"Developer Resources",description:"Functions",source:"@site/docs/201-solana/70-dev/00-overview.mdx",sourceDirName:"201-solana/70-dev",slug:"/solana/dev/",permalink:"/solana/dev/",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{slug:".",title:"Developer Resources",keywords:["Solana","Solana SDK","Oracles","Web3","Off-chain","Randomness"]},sidebar:"sidebar",previous:{title:"Getting Started",permalink:"/solana/"},next:{title:"\ud83d\udcc8 Read a Data Feed",permalink:"/solana/guides/read-a-data-feed"}},x={},E=[{value:"Functions",id:"functions",level:2},{value:"Create a Scheduled Function",id:"create-a-scheduled-function",level:3},{value:"Read a Function",id:"read-a-function",level:3},{value:"Debug a Function",id:"debug-a-function",level:3},{value:"Data Feeds",id:"data-feeds",level:2},{value:"Create a Data Feed",id:"create-a-data-feed",level:3},{value:"Read a Data Feed",id:"read-a-data-feed",level:3}],S={toc:E},Z="wrapper";function T(e){let{components:t,...a}=e;return(0,r.kt)(Z,(0,n.Z)({},S,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(i.Z,{sdk:"solana",mdxType:"SdkCard"}),(0,r.kt)("h2",{id:"functions"},"Functions"),(0,r.kt)("h3",{id:"create-a-scheduled-function"},"Create a Scheduled Function"),(0,r.kt)("p",null,"The examples below show how to create a Switchboard Function that runs the\n",(0,r.kt)("inlineCode",{parentName:"p"},"switchboardlabs/basic-binance-oracle:latest")," container from dockerhub every 30\nseconds."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"Javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},c)),(0,r.kt)(s.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},u))),(0,r.kt)("h3",{id:"read-a-function"},"Read a Function"),(0,r.kt)("p",null,"Switchboard Functions allow you to execute arbitrary instructions as long as the\nfunctions ",(0,r.kt)("inlineCode",{parentName:"p"},"enclave.signer")," has signed the transaction. This keypair gets\ngenerated within the enclave so we can prove the transaction was built securely."),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"Rust",label:"Rust",default:!0,default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"This example shows how to verify that the functions `enclave.signer` has signed your custom instructions."),(0,r.kt)(o.default,{language:"rust",mdxType:"CodeBlock"},d)),(0,r.kt)(s.Z,{value:"Javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},m)),(0,r.kt)(s.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"bash",mdxType:"CodeBlock"},p))),(0,r.kt)("h3",{id:"debug-a-function"},"Debug a Function"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Coming Soon!")),(0,r.kt)("p",null,"The Switchboard Function developer tooling is still in its early stages. By the\nend of Q3 we will support a function simulation server, an endpoint to view\ncontainer logs, and some helper scripts to manage your protocols functions."),(0,r.kt)("h2",{id:"data-feeds"},"Data Feeds"),(0,r.kt)("h3",{id:"create-a-data-feed"},"Create a Data Feed"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"Javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"typescript",mdxType:"CodeBlock"},b)),(0,r.kt)(s.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"bash",mdxType:"CodeBlock"},g))),(0,r.kt)("h3",{id:"read-a-data-feed"},"Read a Data Feed"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"Rust",label:"Rust",default:!0,mdxType:"TabItem"},(0,r.kt)(o.default,{language:"rust",mdxType:"CodeBlock"},h)),(0,r.kt)(s.Z,{value:"Javascript",label:"Javascript",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"javascript",mdxType:"CodeBlock"},f)),(0,r.kt)(s.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,r.kt)(o.default,{language:"bash",mdxType:"CodeBlock"},v),(0,r.kt)("p",null,"You need to add `--mainnetBeta` to view a function for the mainnet-beta network. The default network is devnet."))))}T.isMDXComponent=!0}}]);