"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6867],{54852:(e,a,t)=>{t.d(a,{Zo:()=>l,kt:()=>g});var r=t(49231);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function c(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=r.createContext({}),d=function(e){var a=r.useContext(i),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},l=function(e){var a=d(e.components);return r.createElement(i.Provider,{value:a},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(t),m=n,g=u["".concat(i,".").concat(m)]||u[m]||p[m]||o;return t?r.createElement(g,s(s({ref:a},l),{},{components:t})):r.createElement(g,s({ref:a},l))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var c={};for(var i in a)hasOwnProperty.call(a,i)&&(c[i]=a[i]);c.originalType=e,c[u]="string"==typeof e?e:n,s[1]=c;for(var d=2;d<o;d++)s[d]=t[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},30552:(e,a,t)=>{t.r(a),t.d(a,{contentTitle:()=>s,default:()=>l,frontMatter:()=>o,toc:()=>c});var r=t(95634),n=(t(49231),t(54852));const o={},s=void 0,c=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Load Switchboard Program",id:"load-switchboard-program",level:3},{value:"Create a Queue",id:"create-a-queue",level:3},{value:"Create a Data Feed",id:"create-a-data-feed",level:3},{value:"Create a Job",id:"create-a-job",level:3},{value:"Add Job to Data Feed",id:"add-job-to-data-feed",level:3},{value:"Create Feed Permissions",id:"create-feed-permissions",level:3},{value:"Set Feed Permissions",id:"set-feed-permissions",level:3},{value:"Add Feed to Crank",id:"add-feed-to-crank",level:3},{value:"Request a Feed Update",id:"request-a-feed-update",level:3}],i={toc:c},d="wrapper";function l(e){let{components:a,...t}=e;return(0,n.kt)(d,(0,r.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("div",{align:"center"},(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://github.com/switchboard-xyz/sbv2-core/raw/main/website/static/img/icons/switchboard/avatar.png",alt:"Switchboard Logo"})),(0,n.kt)("h1",{id:"switchboard-xyznearjs"},"@switchboard-xyz/near.js"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"A Typescript client to interact with Switchboard on NEAR.")),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/@switchboard-xyz/near.js"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/github/package-json/v/switchboard-xyz/sbv2-near?color=red&filename=javascript%2Fnear.js%2Fpackage.json&label=%40switchboard-xyz%2Fnear.js&logo=npm",alt:"NPM Badge"})))),(0,n.kt)("h2",{id:"install"},"Install"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm i --save @switchboard-xyz/near.js\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Directory")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#load-switchboard-program"},"Load Switchboard Program")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-queue"},"Create a Queue")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-data-feed"},"Create a Data Feed")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-a-job"},"Create a Job")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#add-job-to-data-feed"},"Add Job to Data Feed")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#create-feed-permissions"},"Create Feed Permissions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#set-feed-permissions"},"Set Feed Permissions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#add-feed-to-crank"},"Add Feed to Crank")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#request-a-feed-update"},"Request a Feed Update"))),(0,n.kt)("h3",{id:"load-switchboard-program"},"Load Switchboard Program"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { SwitchboardProgram } from "@switchboard-xyz/near.js";\n\n// from filesystem keypair\nconst program = await SwitchboardProgram.loadFromFs(\n  "testnet", // Network ID\n  "https://rpc.testnet.near.org", // RPC URL\n  accountId // Near Account name\n);\n// from browser\nconst program = await SwitchboardProgram.loadFromBrowser(\n  "testnet", // Network ID\n  "https://rpc.testnet.near.org", // RPC URL\n  accountId // Near Account name\n);\n')),(0,n.kt)("h3",{id:"create-a-queue"},"Create a Queue"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { QueueAccount } from "@switchboard-xyz/near.js";\n\nconst queue = await QueueAccount.create(program, {\n  authority: program.account.accountId,\n  mint: "wrap.test",\n  reward: 0,\n  minStake: 100,\n  queueSize: 100,\n  oracleTimeout: 180,\n  unpermissionedFeeds: true,\n});\nconsole.log(await queue.loadData());\n')),(0,n.kt)("h3",{id:"create-a-data-feed"},"Create a Data Feed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { AggregatorAccount } from "@switchboard-xyz/near.js";\n\nconst aggregator = await AggregatorAccount.create(program, {\n  authority: program.account.accountId,\n  queue: queue.address,\n  name: Buffer.from(""),\n  metadata: Buffer.from(""),\n  batchSize: 1,\n  minOracleResults: 1,\n  minJobResults: 1,\n  minUpdateDelaySeconds: 5,\n  startAfter: 0,\n  varianceThreshold: sbv2.SwitchboardDecimal.fromBig(new Big(0)),\n  forceReportPeriod: 0,\n  crank: crank.address,\n  rewardEscrow: escrow.address,\n  historyLimit: 1000,\n});\nconsole.log(await aggregator.loadData());\n')),(0,n.kt)("h3",{id:"create-a-job"},"Create a Job"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { JobAccount } from "@switchboard-xyz/near.js";\n\nconst job = await JobAccount.create(program, {\n  data: Buffer.from(OracleJob.encodeDelimited(oracleJob).finish()),\n  name: Buffer.from("Job1"),\n  metadata: Buffer.from("Job1 - FtxUS BTC/USD"),\n});\nconsole.log(await job.loadData());\n')),(0,n.kt)("h3",{id:"add-job-to-data-feed"},"Add Job to Data Feed"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"await aggregator.addJob({\n  job: job.address,\n  weight: 1,\n});\n")),(0,n.kt)("h3",{id:"create-feed-permissions"},"Create Feed Permissions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { PermissionAccount } from "@switchboard-xyz/near.js";\n\nconst permission = await PermissionAccount.create(program, {\n  authority: program.account.accountId,\n  granter: queue.address,\n  grantee: aggregator.address,\n});\n')),(0,n.kt)("h3",{id:"set-feed-permissions"},"Set Feed Permissions"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"await permission.set({\n  permission: SwitchboardPermission.PERMIT_ORACLE_QUEUE_USAGE,\n  enable: true,\n});\n")),(0,n.kt)("h3",{id:"add-feed-to-crank"},"Add Feed to Crank"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { CrankAccount } from "@switchboard-xyz/near.js";\n\nconst crank = new CrankAccount({ program, address: crankAddress });\nawait crank.push({\n  aggregator: aggregatorAccount.address,\n});\n')),(0,n.kt)("h3",{id:"request-a-feed-update"},"Request a Feed Update"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},'import { EscrowAccount } from "@switchboard-xyz/near.js";\n\nconst escrowAccount = await EscrowAccount.getOrCreateStaticAccount(program);\nawait aggregatorAccount.openRound({\n  rewardRecipient: escrowAccount.address,\n});\n')))}l.isMDXComponent=!0}}]);