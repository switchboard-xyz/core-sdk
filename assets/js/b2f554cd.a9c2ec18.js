"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1477],{30010:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/05/03/Switchboard-Oracle-on-Sui-Mainnet","metadata":{"permalink":"/blog/2023/05/03/Switchboard-Oracle-on-Sui-Mainnet","source":"@site/blog/2023-05-03-Switchboard-Oracle-on-Sui-Mainnet.mdx","title":"Switchboard Oracle on Sui Mainnet","description":"Sui has officially launched to mainnet and Switchboard is thrilled to support developers in the Sui ecosystem with our oracle infrastructure!","date":"2023-05-03T00:00:00.000Z","formattedDate":"May 3, 2023","tags":[],"readingTime":1.965,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Switchboard Oracle on Sui Mainnet","description":"Sui has officially launched to mainnet and Switchboard is thrilled to support developers in the Sui ecosystem with our oracle infrastructure!","authors":["yy"],"tags":[],"hide_table_of_contents":true},"nextItem":{"title":"Introduction to Switchboard Serverless","permalink":"/blog/2023/04/19/Introduction-to-Switchboard-Serverless"}},"content":"Sui has officially launched to mainnet and Switchboard is thrilled to support\\ndevelopers in the Sui ecosystem with our oracle infrastructure!\\n\\nOracles play a crucial and integral role in the genesis of any blockchain\\nmainnet launch \u2014 providing developers with the necessary data (such as price for\\nDeFi) to plug into their products.\\n\\nHence, in order to build a strong infrastructure foundation, Switchboard has\\nimplemented our v2 iteration on the Sui blockchain.\\n\\nIn this article, we\u2019ll discuss:\\n\\n- What we currently support\\n- What to look out for\\n- Links and resources to start developing\\n\\n> Read our [**_#PluggedintoSui_**](/blog/2022/11/01/PluggedintoSui) article to\\n> learn about our expansion to Sui.\\n\\nWe\u2019d love to take the opportunity to thank Sui for supporting us to hastily\\nkickstart the process of research and development, and eventually push\\nproduction to mainnet.\\n\\n\x3c!--truncate--\x3e\\n\\n# What does Switchboard currently support\\n\\nAs Switchboard expands our oracle to support Sui, our products retain its values\\nand familiarities to provide the best developer experience for the builders on\\nSui.\\n\\nBringing the Switchboard Experience to a multi-chain level\\n\\n## Explorer\\n\\nThe [Explorer](https://switchboard.xyz/explorer) allows developers to view live\\ndata feeds and integrate them with ease, by plugging in the feed address to\\ntheir contracts to read the data.\\n\\n## Publisher\\n\\nThe [Publisher](https://app.switchboard.xyz/build/tool) retains its features of\\nthe custom feed builder (with Web 2 fetch, Parse, Math, Logic task types readily\\navailable). With the Publisher\u2019s core features of permissionlessness and\\ncustomizability, developers can build, fund and manage their data feeds all on\\nour application without the need of any form of contact or friction.\\n\\n> Read our\\n> [**_thread_**](https://twitter.com/switchboardxyz/status/1575893327869665291?s=20&t=IE6n74ZgGCIssOr7fqWiFw)\\n> to learn about our products.\\n\\n# What to look out for\\n\\nWe look forward to empower developers on Sui to build all kinds of blockchain\\napplications, reach out to us if you have not! We\u2019ll continue to update our\\nGithub and documentation to provide a greater developer experience to the\\nbuilders in the Sui ecosystem!\\n\\n> _Read our_ [**_documentation_**](https://docs.switchboard.xyz/coredao) _to\\n> learn about integrating with Switchboard._\\n>\\n> _Read our_ [**_Github_**](https://github.com/switchboard-xyz/sbv2-evm) _to\\n> dive deeper about the Switchboard implementations on Sui._\\n\\nAnd of course, wen Switchboard v3 on Sui?\\n\\n# Links and resources\\n\\nLearn more about Switchboard v3:\\n[https://twitter.com/switchboardxyz/status/1648718233942503427?s=20](https://twitter.com/switchboardxyz/status/1648718233942503427?s=20)\\n\\nFill up the beta form to test and experiment with Switchboard v3 today:\\n[https://tinyurl.com/switchboardv3beta](https://tinyurl.com/switchboardv3beta)\\n\\nContact us: [https://switchboard.xyz/contact](https://switchboard.xyz/contact)\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nGithub: [https://github.com/switchboard-xyz](https://github.com/switchboard-xyz)\\n\\nDocs: [https://docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\nMore links: [https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2023/04/19/Introduction-to-Switchboard-Serverless","metadata":{"permalink":"/blog/2023/04/19/Introduction-to-Switchboard-Serverless","source":"@site/blog/2023-04-19-Introduction-to-Switchboard-Serverless.mdx","title":"Introduction to Switchboard Serverless","description":"In the previous article, we covered the \u201cWhy build Switchboard v3?\u201d and the technology, Trusted Execution Environment (TEE) behind itIn this article, we\u2019ll discuss the whats and hows of\xa0v3.","date":"2023-04-19T00:00:00.000Z","formattedDate":"April 19, 2023","tags":[],"readingTime":4.74,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Introduction to Switchboard Serverless","description":"In the previous article, we covered the \u201cWhy build Switchboard v3?\u201d and the technology, Trusted Execution Environment (TEE) behind itIn this article, we\u2019ll discuss the whats and hows of\xa0v3.","authors":["yy"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Oracle on Sui Mainnet","permalink":"/blog/2023/05/03/Switchboard-Oracle-on-Sui-Mainnet"},"nextItem":{"title":"Dialed in with Switchboard: April 06, 2023","permalink":"/blog/2023/04/06/Dialed-in-with-Switchboard"}},"content":"Switchboard Serverless offers a suite of computing services that enables\\ndevelopers to build the future of blockchain applications.\\n\\nIn the previous [Switchboard-v3 article](/blog/2023/03/30/Switchboard-v3), we\\ncovered the \u201cWhy build Switchboard v3?\u201d and the technology, Trusted Execution\\nEnvironment (TEE) behind it. In this article, we\u2019ll discuss the whats and hows\\nof v3.\\n\\nIn the previous iteration, v2 offers a great infrastructure \u2014 the standard\\n\u201chonest\u201d staked nodes consensus model. Switchboard v3 introduces a new paradigm\\nand a greater solution when building with oracles, providing a secure,\\nverifiable and customizable solution to tailor fit to your data and off-chain\\nexecution needs.\\n\\n# About TEEs\\n\\nA Trusted Execution Environment (TEE) is a specialized hardware that specializes\\nin **data software integrity and privacy**.\\n\\n## What are TEEs?\\n\\nTEEs represents a secure environment within a machine\u2019s hardware or software\\nthat is isolated from the operating system and other applications. TEEs are\\ndesigned to provide a trusted and secure environment where sensitive information\\ncan be processed without the risk of being accessed or modified by unauthorized\\nparties. TEEs can attest another TEE to be running a particular software. TEEs\\nare commonly used in mobile devices, banking or digital wallets to provide\\nsecure storage for sensitive data.\\n\\nIn a blockchain context, TEEs can be used to securely store private keys for\\nblockchain wallets, ensuring that they cannot be accessed by unauthorized\\nparties. TEEs can also be used to securely process blockchain transactions,\\nensuring that they cannot be tampered with or modified by hackers or malicious\\nactors.\\n\\n\x3c!--truncate--\x3e\\n\\n# Switchboard Attestation Program\\n\\nIn the aforementioned [Switchboard-v3 article](/blog/2023/03/30/Switchboard-v3),\\nSwitchboard v2 was built around economic security models where data reporters\\nare rewarded or slashed relative to how close or far they were to the median of\\nall data reporters. To participate in a\\n[Switchboard Queue](https://docs.switchboard.xyz/queue), oracle operators are\\nrequired to **lock up some portion of economic stake** specified by the queue as\\nwell as **explicit operating approval** from the oracle queue\u2019s authority.\\n\\nThe economic stake combined with the authority-gated operating permission can be\\n\u201csufficient\u201d to fulfil decentralization BUT it limits oracle honesty incentives\\nto the amount they staked.\\n\\nTake example where an oracle is supporting a 1 million dollar TVL DeFi protocol,\\ncan the oracle\u2019s stake be aligned? Should the oracle be at risk of losing\\nmillions of dollars if it misreports? This method introduces additional\\nchallenges with capital efficiency, but Switchboard v3 aims to tackle this.\\n\\nBy utilizing TEE\u2019s technology, we can:\\n\\n- Create a digital signature of the software loaded into it;\\n- Create a signature of any data generated from within the code.\\n\\n## Verifying the Oracles\\n\\nIn Switchboard\u2019s case, oracles are encapsulated within TEEs, allowing it to\\ncreate a unique digital signature \u2014 a public key of a signing keypair, where we\\npost on-chain for all to verify. In short, these oracles can be trusted but yet\\nverifiable!\\n\\n## Verifying the Execution\\n\\nOnce these oracles are verified and begin to participate in a queue. All user\\nrequests such as data feeds, functions, etc can be verifiably executed, where\\npeople can verify that the transactions being sent are strictly dictated by the\\ncode that created it.\\n\\n**_Read more about TEEs, Switchboard Attestation Program_**\\n[**_here_**](https://docs.switchboard.xyz/v3/attestation)**_._**\\n\\n# Switchboard Serverless\\n\\nAttention developers! Yes, you saw that right. With Switchboard v3, apart from\\nimproving security by verifying oracles and its executions, Switchboard\\nServerless offers a suit of developer toolings through a serverless approach\\nsuch that developers\u2019 requests are matched with an oracle, eliminating the need\\nto provision, operate, manage, or worry about any infrastructure or servers. The\\nsuite of developer toolings are mentioned in the following.\\n\\n## Switchboard Services\\n\\nSwitchboard Services enables developers to write and deploy functions as part of\\ndata feeds \u2014 designed to perform specific tasks. With v3, developers can access\\npowerful, customizable and scalable solutions to build and deploy services such\\nas:\\n\\nExamples of Switchboard Services: Complex Risk Engines; Advanced Filtering;\\nGameFi\\n\\n- Create complex risk engines that performs calculations based on private market\\n  data which feeds directly into a DeFi protocol;\\n- Develop advanced filtering functions to aggregate, verify and filter off-chain\\n  data from multiple sources using custom logic to build dynamic applications;\\n- Create complex automation flows for your application which can include\\n  processing data, sending notifications, updating a database and more!\\n\\n## Switchboard Streams\\n\\nSwitchboard Streams are data feeds and technically a subset of Services, but\\nspecifically designed to fetch data from on/off-chain data sources. The\\nSwitchboard Builder enables developers to create Streams seamlessly and with\\nfull customizability. With v3, the oracles\u2019 execution of the jobs and tasks\\nwithin each Streams are now verifiable \u2014 this helps DeFi protocols to align\\nincentives with oracle operators.\\n\\n## Switchboard Secrets\\n\\nSwitchboard Secrets provides developers a secure and confidential way to access\\nprivate/gated APIs and data from off-chain sources. With v3, sensitive\\ninformation can be processed and updated securely.\\n\\nExamples of Switchboard Secrets: Gated/private sports, price data; Off-chain API\\nkeys such as OpenAI and social media platforms\\n\\n- Accessibility to reliable sports, price data;\\n- OpenAI API key;\\n- Social media (Discord, Slack, Twitter) API key;\\n- and so much more!\\n\\n## Switchboard pSeudorandomness\\n\\nSwitchboard pSeudorandomness is a randomness service and Verifiable Random\\nFunction (VRF) for generating secure and verifiable on-chain randomness using\\nTEE oracles.\\n\\n# Summary\\n\\nIn conclusion, the Switchboard v3 oracle network paired with the suite of\\nproducts offered through Switchboard Serverless enables developers to access\\nverifiable off-chain computation and data, empowering them to build exceptional\\nproducts for other developers and end-users.\\n\\n**_Join us to revolutionize the standard and plug in a new paradigm of\\noracles._**\\n\\nFill up the beta form to test and experiment with Switchboard v3 today:\\n[https://tinyurl.com/switchboardv3beta](https://tinyurl.com/switchboardv3beta)\\n\\nContact us: [https://switchboard.xyz/contact](https://switchboard.xyz/contact)\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nGithub: [https://github.com/switchboard-xyz](https://github.com/switchboard-xyz)\\n\\nDocs: [https://docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\nMore links: [https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2023/04/06/Dialed-in-with-Switchboard","metadata":{"permalink":"/blog/2023/04/06/Dialed-in-with-Switchboard","source":"@site/blog/2023-04-06-Dialed-in-with-Switchboard.mdx","title":"Dialed in with Switchboard: April 06, 2023","description":"Bringing back the \u2018Dialed in with Switchboard\u2019 series where we wrap up Switchboard\u2019s endeavours every quarterly!","date":"2023-04-06T00:00:00.000Z","formattedDate":"April 6, 2023","tags":[],"readingTime":2.165,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Dialed in with Switchboard: April 06, 2023","description":"Bringing back the \u2018Dialed in with Switchboard\u2019 series where we wrap up Switchboard\u2019s endeavours every quarterly!","authors":["yy"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Introduction to Switchboard Serverless","permalink":"/blog/2023/04/19/Introduction-to-Switchboard-Serverless"},"nextItem":{"title":"Switchboard v3","permalink":"/blog/2023/03/30/Switchboard-v3"}},"content":"Bringing back the \u2018Dialed in with Switchboard\u2019 series where we wrap up\\nSwitchboard\u2019s endeavours every quarterly!\\n\\nIn 2023 Q1, Switchboard continues to strive for excellence in areas such as the\\nongoing Switchboard Expansion and growing our developer community!\\n\\n# Statistics\\n\\nOur statistics on Solana has improved overall, such as increasing our percentage\\nof transactions to 8\u201310% of total Solana transactions; and other achievements\\nlike doubling our VRF requests count since last quarter.\\n\\nCheck out the dashboard\\n[here](https://analytics.topledger.xyz/switchboard/public/dashboards/Fydkqa8BQYjPbv6kTGiO2KwXwtHepQ9P1cs2f7rV).\\n\\nSwitchboard 2023 Q1 Statistics on Solana\\n\\n\x3c!--truncate--\x3e\\n\\n# Community-led Solana Hackathon\\n\\nSwitchboard kicked off the year with a community initiated hackathon, Solana\\nSandstorm hosted by LamportDAO and Helius Labs.\\n\\nSwitchboard\u2019s vision is to empower developers from any community and ecosystem\\nto build seamlessly and permissionlessly. Hence, this hackathon allowed us to\\nreach these developers to empower them via a workshop and grant to help them\\ncontinue build their project.\\n\\nFrom this hackathon, we hosted a Switchboard Oracle integration track where the\\nmost interesting use case will receive a $1,000 USD grant. At the end of the 2\\nweek event, we received a total of 14 submissions out of 267 and 4 of these\\nprojects (including the winner) have continued to build till the time of\\nwriting.\\n\\nMore importantly, we managed to highlight to developers the ease of building on\\nSwitchboard and helped these developers to build unique use cases such as:\\n\\n- The first Formula 1 fantasy game using Switchboard\u2019s data feeds to fetch real\\n  world events.\\n- No-loss lottery protocols using randomness to derive a winner out of the\\n  participated pool.\\n\\n# The Switchboard Expansion\\n\\nApart from the community wins, in this quarter, we\u2019ve expanded to 2 more\\necosystems. We\u2019re now on Core DAO mainnet and Starknet goerli-alpha!\\n\\nCheck out our Github links for\\n[Core](https://github.com/switchboard-xyz/sbv2-evm) and\\n[Starknet](https://github.com/switchboard-xyz/sbv2-starknet)!\\n\\n#SuiBuilderHero Award\\n\\nAdditionally, Switchboard received the #SuiBuilderHero Award where they\\nrecognize early contributions to the ecosystem and community.\\n\\n# Switchboard v3\\n\\nLastly, we\u2019ve announced the ideas behind Switchboard v3 where the oracles will\\nbe implemented with Trusted Execution Environments (TEEs), improving the\\nsecurity, aligning the incentives and eventually, empower more developers with\\nthe products built around the technology of TEEs.\\n\\nRead more in this Twitter thread!\\n\\n# Summary\\n\\nSwitchboard continues to expand its oracle infrastructure to empower developers\\nand build a strong, robust developer community to build, educate and share\\nblockchain technology. Thank you for dialing in with Switchboard!\\n\\nLooking to discuss TEEs, integrate with Switchboard v3 or partner with us?\\nFollow our socials, check out our documentation and fill up our contact form!\\n\\nContact us: [https://switchboard.xyz/contact](https://switchboard.xyz/contact)\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nGithub: [https://github.com/switchboard-xyz](https://github.com/switchboard-xyz)\\n\\nDocs: [https://docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\nMore links: [https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2023/03/30/Switchboard-v3","metadata":{"permalink":"/blog/2023/03/30/Switchboard-v3","source":"@site/blog/2023-03-30-Switchboard-v3.mdx","title":"Switchboard v3","description":"Presenting Switchboard v3\u200a\u2014\u200aan oracle protocol using <strong>Trusted Execution Environments</strong> (TEEs).","date":"2023-03-30T00:00:00.000Z","formattedDate":"March 30, 2023","tags":[],"readingTime":2.185,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Switchboard v3","description":"Presenting Switchboard v3\u200a\u2014\u200aan oracle protocol using <strong>Trusted Execution Environments</strong> (TEEs).","authors":["yy"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Dialed in with Switchboard: April 06, 2023","permalink":"/blog/2023/04/06/Dialed-in-with-Switchboard"},"nextItem":{"title":"Switchboard Oracle on Core Mainnet Alpha","permalink":"/blog/2023/02/23/Switchboard-Oracle-on-Core-Mainnet-Alpha"}},"content":"Presenting Switchboard v3 \u2014 an oracle protocol using **Trusted Execution\\nEnvironments** (TEEs).\\n\\n# Current oracle consensus mechanisms\\n\\nToday, most oracle protocols achieve consensus using trusted nodes to aggregate\\nresults to publish on-chain. For example, a price feed involves a number of\\noracles aggregating a number of results from different sources and publishing\\nthe results on-chain.\\n\\nFrom the example, this carries the assumption of an honest majority of nodes\\nanswering correctly. This introduces additional overhead of additional network\\nfees (to incentivise oracles) and latency waiting for sources to respond/network\\npropagation.\\n\\nAdditionally, if an oracle is responsible for securing millions of TVL on each\\nupdate, shouldn\u2019t the oracle be at risk of losing millions of dollars on each\\nupdate to align on incentives? This form of economic majority introduces\\nadditional challenges with capital efficiency.\\n\\nWhat if there was a way to use verifiable computation and cryptography so that\\nyou didn\u2019t need to rely exclusively on an economic majority for every\\ntransaction? What if you could rely on just 1 of N nodes to respond and know the\\nresult was accurate?\\n\\n# How is Switchboard v3 different?\\n\\nTRUST BUT VERIFY!\\n\\nSwitchboard v3\u2019s TEEs enable oracles to become verifiable, offering low latency,\\nlow cost and most importantly verifiable compute services.\\n\\n\x3c!--truncate--\x3e\\n\\n- Data retrieval was indeed from the configured source;\\n- Code execution was executed as intended.\\n\\nTo simply put it, when you tell the oracles to do XYZ, the oracles can execute\\nthe jobs and publish the data, all in a verifiable manner.\\n\\n# Current usage: Switchboard v2\\n\\nSince inception, Switchboard believes in a developer-first approach where we\u2019ve\\nempowered developers with the necessary tools to explore, build and manage data\\nfeeds \u2014 such as the Explorer and Publisher.\\n\\n[https://switchboard.xyz](https://switchboard.xyz)\\n\\n# Future usage: Switchboard v3\\n\\nBeing able to offer verifiable compute services as part of feed creation allows\\nfor:\\n\\n- Fast & secure data feeds\\n- Incorporate advanced calculations & risk metrics into price feeds\\n- Customized logic & support for any API\\n- and much more!\\n\\nA literal switchboard.\\n\\nNow, imagine yourself as a developer, in a world where a literal web3\\n_switchboard_ is accessible, where you plug and play with data, tools, services,\\nall provided by Switchboard Services!\\n\\n# Wen v3?\\n\\nStay plugged in! We\u2019re heads down finalizing on our Switchboard v3 iteration.\\nSoon, we will be natively implemented on all of the chains we support and more\\nto come!\\n\\nLooking to discuss TEEs, integrate with Switchboard v3 or partner with us?\\nFollow our socials, check out our documentation and fill up our contact form!\\n\\nContact us: [https://switchboard.xyz/contact](https://switchboard.xyz/contact)\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nGithub: [https://github.com/switchboard-xyz](https://github.com/switchboard-xyz)\\n\\nDocs: [https://docs.switchboard.xyz](https://docs.switchboard.xyz)\\n\\nMore links: [https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2023/02/23/Switchboard-Oracle-on-Core-Mainnet-Alpha","metadata":{"permalink":"/blog/2023/02/23/Switchboard-Oracle-on-Core-Mainnet-Alpha","source":"@site/blog/2023-02-23-Switchboard-Oracle-on-Core-Mainnet-Alpha.mdx","title":"Switchboard Oracle on Core Mainnet Alpha","description":"Core blockchain has officially launched to mainnet in Q1 2023 and Switchboard is thrilled to support developers in the Core ecosystem with our oracle infrastructure!","date":"2023-02-23T00:00:00.000Z","formattedDate":"February 23, 2023","tags":[],"readingTime":1.785,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Switchboard Oracle on Core Mainnet Alpha","description":"Core blockchain has officially launched to mainnet in Q1 2023 and Switchboard is thrilled to support developers in the Core ecosystem with our oracle infrastructure!","authors":["yy"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard v3","permalink":"/blog/2023/03/30/Switchboard-v3"},"nextItem":{"title":"#PluggedintoStarkNet","permalink":"/blog/2023/02/02/PluggedintoStarkNet"}},"content":"Core blockchain has officially launched to mainnet in Q1 2023 and Switchboard is\\nthrilled to support developers in the Core ecosystem with our oracle\\ninfrastructure!\\n\\nOracles play a crucial and integral role in the genesis of any blockchain\\nmainnet launch \u2014 providing developers with the necessary data (such as price for\\nDeFi) to plug into their products.\\n\\nHence, in order to build a strong infrastructure foundation, Switchboard has\\nimplemented our v2 iteration on to the Core blockchain.\\n\\n\x3c!--truncate--\x3e\\n\\nIn this article, we\u2019ll discuss:\\n\\n- What we currently support\\n- What to look out for\\n- Links and resources to start developing\\n\\n> Read our [_**#PluggedintoCore**_](/blog/2023/01/26/PluggedintoCore) article to\\n> learn about our expansion to Core.\\n\\nWe\u2019d love to take the opportunity to thank Core for supporting us to steadfast\\nkickstart research and development, and eventually push production to mainnet.\\n\\n# What Switchboard currently support\\n\\nAs Switchboard Labs expands our oracle to support Core, our products retain its\\nvalues and familiarities to provide the best developer experience for the\\nbuilders in Core.\\n\\n## Explorer\\n\\nThe [Explorer](https://switchboard.xyz/explorer) allows developers to view live\\ndata feeds and integrate them with ease, by plugging in the feed address to\\ntheir contracts to read the data.\\n\\n## Publisher\\n\\nThe [Publisher](https://app.switchboard.xyz/) retains its features of the\\ncatalog and custom feed builder (with Web 2 fetch, Parse, Math, Logic task types\\nreadily available). With the Publisher\u2019s core features of permissionlessness and\\ncustomizability, developers can build, fund and manage their data feeds all on\\nour application without the need of any form contact or friction.\\n\\n> _Read our_ >\\n> [**_thread_**](https://twitter.com/switchboardxyz/status/1575893327869665291?s=20&t=IE6n74ZgGCIssOr7fqWiFw) >\\n> _to learn about our products._\\n\\n# What to look out for\\n\\n> Integrations, integrations, integrations!\\n\\nWe look forward to empower developers on Core to build all kinds of blockchain\\napplications, reach out to us if you have not! We\u2019ll continue to update our\\nGithub and documentation to provide a greater developer experience to the\\nbuilders in the Core ecosystem!\\n\\n> _Read our_ [**_documentation_**](https://docs.switchboard.xyz/coredao) _to\\n> learn about Core integrations._\\n>\\n> _Read our_ [**_github_**](https://github.com/switchboard-xyz/sbv2-evm) _to\\n> dive deeper about Core implementations._\\n\\n# Links and resources\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nDocumentation: [https://docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\nOther links:\\n[https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2023/02/02/PluggedintoStarkNet","metadata":{"permalink":"/blog/2023/02/02/PluggedintoStarkNet","source":"@site/blog/2023-02-02-PluggedintoStarkNet.mdx","title":"#PluggedintoStarkNet","description":"At Switchboard, we believe the future of oracle protocols is to expand across the ever-growing amount of blockchains\u200a\u2014\u200aempowering any developer coming from any background, touching first base on any codebase, blockchain and ecosystem.","date":"2023-02-02T00:00:00.000Z","formattedDate":"February 2, 2023","tags":[{"label":"#PluggedIn","permalink":"/blog/tags/plugged-in"}],"readingTime":1.675,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"#PluggedintoStarkNet","description":"At Switchboard, we believe the future of oracle protocols is to expand across the ever-growing amount of blockchains\u200a\u2014\u200aempowering any developer coming from any background, touching first base on any codebase, blockchain and ecosystem.","authors":["yy"],"tags":["#PluggedIn"],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Oracle on Core Mainnet Alpha","permalink":"/blog/2023/02/23/Switchboard-Oracle-on-Core-Mainnet-Alpha"},"nextItem":{"title":"#PluggedintoCore","permalink":"/blog/2023/01/26/PluggedintoCore"}},"content":"At Switchboard, we believe the future of oracle protocols is to expand across\\nthe ever-growing amount of blockchains \u2014 empowering any developer coming from\\nany background, touching first base on any codebase, blockchain and ecosystem.\\n\\n# _Question: Which chain?_\\n\\n> _#PluggedintoStarknet_\\n\\nStarknet is a permissionless decentralized Validity-Rollup (often referred to as\\nZK-Rollup). It operates as an L2 network over Ethereum, enabling any\\ndecentralised application to achieve unlimited scale for its computation \u2014\\nwithout compromising Ethereum\u2019s composability and security.\\n\\nWith the features of being a scalable, composable and general purpose L2\\nblockchain, this inlines with the visions of Switchboard oracle protocol.\\nSwitchboard Labs is excited to officially announce the expansion of Switchboard\\nprotocol to **Starknet** blockchain!\\n\\n\x3c!--truncate--\x3e\\n\\n# _What does Switchboard bring to the Starknet ecosystem?_\\n\\nBy bringing our oracle network to Starknet, developers are empowered and\\nequipped with the set of tools to fetch on/off-chain data to plug into their use\\ncases. Data such as price, sports, weather data can be brought on-chain to bring\\nmany ideas into fruition and ultimately, enhancing the end users\u2019 experience.\\n\\nAdditionally, being a permissionless oracle protocol, Switchboard has built a\\nlow-code interface on our [Publisher app](https://app.switchboard.xyz) that\\nreduces friction for developers. Instead of going through layers of contacts to\\nspin up any data feed, on Switchboard\u2019s Publisher, a developer can build their\\ndata feeds within minutes and have full customisability, management over their\\nown feeds.\\n\\nUltimately, this will help enhance current and future developers\u2019 building\\nexperience on Starknet blockchain. Take a look at our Twitter thread regarding\\nThe Switchboard Experience and the products that help to empower developers.\\n\\n# _Wen mainnet?_\\n\\nSwitchboard Labs is thrilled to announce the devnet implementation on Starknet!\\nCheck out the links below to take a look at the Github resources and\\ndocumentation to start plugging data to build your use cases!\\n\\n[https://github.com/switchboard-xyz/sbv2-starknet](https://github.com/switchboard-xyz/sbv2-starknet)\\nto start building on devnet now!\\n\\n[https://docs.switchboard.xyz](https://docs.switchboard.xyz) to learn more about\\nour oracle architecture.\\n\\nJoin our community and build with Switchboard where you plug and play with\\noracles!\\n\\n_It\u2019ll be electrifying._\\n\\n#PluggedintoStarknet"},{"id":"/2023/01/26/PluggedintoCore","metadata":{"permalink":"/blog/2023/01/26/PluggedintoCore","source":"@site/blog/2023-01-26-PluggedintoCore.mdx","title":"#PluggedintoCore","description":"At Switchboard, we believe the future of oracle protocols is to expand across the ever-growing amount of blockchains\u200a\u2014\u200aempowering any developer coming from any background, touching first base on any codebase, blockchain and ecosystem.","date":"2023-01-26T00:00:00.000Z","formattedDate":"January 26, 2023","tags":[{"label":"#PluggedIn","permalink":"/blog/tags/plugged-in"}],"readingTime":1.8,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"#PluggedintoCore","description":"At Switchboard, we believe the future of oracle protocols is to expand across the ever-growing amount of blockchains\u200a\u2014\u200aempowering any developer coming from any background, touching first base on any codebase, blockchain and ecosystem.","authors":["yy"],"tags":["#PluggedIn"],"hide_table_of_contents":true},"prevItem":{"title":"#PluggedintoStarkNet","permalink":"/blog/2023/02/02/PluggedintoStarkNet"},"nextItem":{"title":"Switchboard Wrap Up 2022","permalink":"/blog/2022/12/31/Switchboard-Wrap-Up-2022"}},"content":"At Switchboard, we believe the future of oracle protocols is to expand across\\nthe ever-growing amount of blockchains \u2014 empowering any developer coming from\\nany background, touching first base on any codebase, blockchain and ecosystem.\\n\\n# Question: Which chain?\\n\\n> #PluggedintoCore\\n\\n[Core\u2019s Satoshi Plus Consensus Mechanism](https://docs.coredao.org/core-white-paper-v1.0.5/satoshi-plus-consensus)\\n(leveraging the Bitcoin mining hashrate) delivers the composability of an EVM\\ncompatible blockchain \u2014 what this means is Core combines the optimal features of\\nProof of Work (PoW) and Delegated Proof of Stake (DPoS) in order to achieve the\\nmaximum security, scalability and decentralization, all with incredibly low\\nfees.\\n\\nWith the features aforementioned, this inlines with the visions of Switchboard\\noracle protocol. Switchboard Labs is excited to officially announce the\\nexpansion of Switchboard protocol to **Core** blockchain!\\n\\n\x3c!--truncate--\x3e\\n\\n# What does Switchboard bring to the Core ecosystem?\\n\\nBy bringing our oracle network to Core, developers are empowered and equipped\\nwith the set of tools to fetch on/off-chain data to plug into their use cases.\\nData such as price, sports, weather data can be brought on-chain to bring many\\nideas into fruition and ultimately, enhancing the end users\u2019 experience.\\n\\nAdditionally, being a permissionless oracle protocol, Switchboard has built a\\nlow-code interface on our [Publisher app](https://app.switchboard.xyz) that\\nreduces friction for developers. Instead of going through layers of contacts to\\nspin up any data feed, on Switchboard\u2019s Publisher, a developer can build their\\ndata feeds within minutes and have full customisability, management over their\\nown feeds.\\n\\nUltimately, this will help enhance current and future developers\u2019 building\\nexperience on Core blockchain. Take a look at our Twitter thread regarding The\\nSwitchboard Experience and the products that help to empower developers.\\n\\n# Wen devnet?\\n\\nStay tuned to the devnet implementation on Core as it is coming soon! We\u2019re\\nthrilled to share it and have developers like yourself to start building the\\nfuture of blockchain applications on Core.\\n\\nJoin our community and build with Switchboard where you plug and play with\\noracles! Follow our socials and check out our documentation!\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nGithub: [https://github.com/switchboard-xyz](https://github.com/switchboard-xyz)\\n\\nDocs: [https://docs.switchboard.xyz](https://docs.switchboard.xyz)\\n\\nMore links: [https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)\\n\\nLooking to partner with us or to discuss both techincal/business? Fill up the\\nform\\n[here](https://forms.monday.com/forms/6d1d87cc8f8e73719f57923487665ef0?r=use1).\\n\\n#PluggedintoCore\\n\\n_It\u2019ll be electrifying._"},{"id":"/2022/12/31/Switchboard-Wrap-Up-2022","metadata":{"permalink":"/blog/2022/12/31/Switchboard-Wrap-Up-2022","source":"@site/blog/2022/12-31-Switchboard-Wrap-Up-2022.mdx","title":"Switchboard Wrap Up 2022","description":"Switchboard Labs wishes our Operators, Publishers and everyone a very happy new year! In this year\u2019s Switchboard Wrap Up, we\u2019ll touch on these pointers:","date":"2022-12-31T00:00:00.000Z","formattedDate":"December 31, 2022","tags":[],"readingTime":4.16,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"Switchboard Wrap Up 2022","description":"Switchboard Labs wishes our Operators, Publishers and everyone a very happy new year! In this year\u2019s Switchboard Wrap Up, we\u2019ll touch on these pointers:","authors":["yy"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"#PluggedintoCore","permalink":"/blog/2023/01/26/PluggedintoCore"},"nextItem":{"title":"Data Feed Priority Fees and Sliding Window on Solana","permalink":"/blog/2022/12/26/Data-Feed-Priority-Fees-and-Sliding-Window-on-Solana"}},"content":"Switchboard Labs wishes our Operators, Publishers and everyone a very happy new\\nyear! In this year\u2019s Switchboard Wrap Up, we\u2019ll touch on these pointers:\\n\\n- Notable achievements;\\n- The Switchboard Experience;\\n- The Switchboard Expansion;\\n- The Switchboard Ecosystem;\\n- Teasers to Switchboard Unwrap 2023!\\n\\n\x3c!--truncate--\x3e\\n\\n# Notable achievements in 2022\\n\\nBefore we continue to embark on the oracle journey, let\u2019s slow down and take a\\nlook at what we\u2019ve accomplished so far in 2022.\\n\\n- Jan 22: Solana\u2019s 1st **permissionless** **oracle network**\\n  ([V2 Announcement](/blog/2022/01/27/Switchboard-V2-is-LIVE))\\n- Feb 22: Solana\u2019s 1st fully on-chain VRF implementation\\n- Jun 22: Solana\u2019s 1st **decentralised** **data catalog**\\n  ([Publisher Announcement](/blog/2022/06/22/Switchboard-Publisher))\\n- Jul 22: Switchboard **1st Anniversary**\\n  ([Switchboard 360: Year in Review](/blog/2022/08/29/Switchboard-360-Looking-Back-Forward-and-All-Around))\\n- Sep 22 and onwards: Switchboard Expansion to a multi-chain level!\\n\\nWe would like to take this opportunity to thank the Switchboard ecosystem and\\nthe developer community for pushing the boundaries with us, building a fully\\npermissionless and customisable oracle protocol was not easy. However, this is\\njust the beginning, read on the find out about \u2026 v3! \\\\*wink\\\\*\\n\\n# The Switchboard Experience\\n\\nTo expand on the aforementioned, Switchboard\u2019s goal is to empower developers\\nwith all the data they need (from both on/off-chain) \u2014 with the least amount of\\nfriction to build a suite of products on blockchain technology.\\n\\nTo do so, we\u2019ve purposefully designed the Switchboard Publisher app to be:\\n\\n- Decentralised \ud83d\udc49 [Data catalog](https://app.switchboard.xyz) allows users to\\n  curate feed templates, contribute to leases.\\n- Permissionless \ud83d\udc49 [Feed builder](https://app.switchboard.xyz/build/tool)\\n  allows users to design and customise their data feeds within minutes without\\n  the need of a middlemen, eliminating any friction for developers.\\n\\nRead the Switchboard Experience Twitter thread to find out more!\\n\\nWe\u2019re actively in discussion with partners and teams to improve on the\\nSwitchboard Experience such as developer tooling, documentation and examples.\\nHelp us help you by filling up this\\n[form](https://forms.monday.com/forms/d069ff30bf42e793f072e4eb554ade43?r=use1)\\nor reach out to us through our social media\\n([Discord](https://discord.gg/switchboardxyz),\\n[Twitter](https://twitter.com/switchboardxyz))!\\n\\n# The Switchboard Expansion\\n\\n1 of our goals for Q3\u20134 of 2022 was to bring the Switchboard Experience to a\\nmulti-chain level. We\u2019re proud to announce that we\u2019ve natively implemented on\\nthese L1 blockchains! Here\u2019s the quick links to the Switchboard implementation\\non each blockchain:\\n\\n- Aptos:\\n  [https://github.com/switchboard-xyz/sbv2-aptos](https://github.com/switchboard-xyz/sbv2-aptos)\\n- Near:\\n  [https://github.com/switchboard-xyz/sbv2-near](https://github.com/switchboard-xyz/sbv2-near)\\n- Solana:\\n  [https://github.com/switchboard-xyz/sbv2-solana](https://github.com/switchboard-xyz/sbv2-solana)\\n- Sui:\\n  [https://github.com/switchboard-xyz/sbv2-sui](https://github.com/switchboard-xyz/sbv2-sui)\\n\\nSwitchboard\u2019s ultimate goal is to empower ALL developers, regardless of which\\nblockchain, programming language, etc to be able to fetch data effortlessly.\\nWith that, in 2023, stay tuned for more announcements on the Switchboard\\nExpansion \u2014 Bringing the Switchboard Experience to a multi-chain level!\\n\\n# **The Switchboard Ecosystem**\\n\\nCheck out our Ecosystem page\\n([https://switchboard.xyz/ecosystem](https://switchboard.xyz/ecosystem)) to find\\nout about the products built on top of Switchboard!\\n\\n## Expansion leads to a bigger Ecosystem\\n\\nAs we expand to multiple L1 blockchains, the Switchboard Ecosystem evidently\\ngrows faster and stronger. We\u2019ve experience a similar suite of products being\\nbuilt on the different features of each L1 blockchain.\\n\\nDespite the variety of products already built on top of us, there are many\\nuncharted territories and opportunities for interesting products using niche\\noff-chain data \u2014 such as insurance protocols and decentralised prediction\\nmarkets.\\n\\n## Hackathons and workshops\\n\\nApart from empowering developers by expanding to multiple blockchains, in 2023,\\nwe plan to conduct more workshops & hackathons with communities! This will\\nultimately provide both new and experienced developers to learn and build\\nsomething cool with Switchboard. Read on to find out about our participation at\\na community-led hackathon by LamportDAO!\\n\\n# Switchboard Unwrap 2023 (TEASERS)\\n\\n## Solana Sandstorm Hackathon\\n\\nTo kickoff 2023, the community at LamportDAO has took the initiative to host a\\nhackathon, Solana Sandstorm in January.\\n\\nAs an infrastructure protocol, we\u2019ve provided an oracle-integration track to\\nincentivise developers to build with our customisable data feeds or relying on\\nour verifiable randomness! Stay tuned for more information.\\n\\n## Switchboard v3\\n\\nIn the current Switchboard v2 architecture, users rely on the consensus of\\nSwitchboard approved staked nodes (oracles) which means we must have heavy\\ntrust-assumption on these nodes running off-chain.\\n\\n> What if Switchboard v3 can solve this? Stay tuned!\\n\\nWe\u2019re thrilled and can\u2019t wait to share more! Currently, we\u2019re testing this\\niteration internally and will provide more details as soon as it\u2019s ready.\\n\\n# Switchboard Wrap Up 2022\\n\\nOnce again, we\u2019d like to take this opportunity to thank everyone and cheers to\\nthe new year! We\u2019ve achieve great feats in 2022 but let\u2019s continue to embark on\\nour oracle journey into 2023 with greater heights to conquer!\\n\\nAs we move forward, we\u2019re looking for rockstars to join us in building the\\nSwitchboard protocol for developers just like yourself and empower them to build\\nthe next generation of blockchain technology!\\n\\nAll types of contributors across the board (such as marketing, community, smart\\ncontract development, etc) are welcomed! If Switchboard sounds interesting to\\nyou, reach out to us on [Discord](https://discord.gg/switchboardxyz) or send\\nyour resume to [jobs@switchboard.xyz](http://jobs.@switchboard.xyz/)!\\n\\nFind out about Switchboard [here](https://switchboard.xyz) and deep dive through\\nour [documentation](https://docs.switchboard.xyz)!\\n\\nFind more of our links [here](https://linktr.ee/switchboardxyz)!\\n\\nJoin our developer community on [Discord](https://discord.gg/switchboardxyz) and\\nfollow us on [Twitter](https://twitter.com/switchboardxyz)!"},{"id":"/2022/12/26/Data-Feed-Priority-Fees-and-Sliding-Window-on-Solana","metadata":{"permalink":"/blog/2022/12/26/Data-Feed-Priority-Fees-and-Sliding-Window-on-Solana","source":"@site/blog/2022/12-26-Data-Feed-Priority-Fees-and-Sliding-Window-on-Solana.mdx","title":"Data Feed Priority Fees and Sliding Window on Solana","description":"With the recent Solana update on Fee Markets, all types of users on the Solana blockchain can utilise priority fees to bid for priority for their transactions in the leader\u2019s queueIn the recent FTX situation, we\u2019ve experienced an increased amount of users opting for prioritised transactions\u200a\u2014\u200ameaning they utilised priority fees in times of need. This lead to non-prioritised transactions to not succeed\xa0timely.","date":"2022-12-26T00:00:00.000Z","formattedDate":"December 26, 2022","tags":[],"readingTime":1.84,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Data Feed Priority Fees and Sliding Window on Solana","description":"With the recent Solana update on Fee Markets, all types of users on the Solana blockchain can utilise priority fees to bid for priority for their transactions in the leader\u2019s queueIn the recent FTX situation, we\u2019ve experienced an increased amount of users opting for prioritised transactions\u200a\u2014\u200ameaning they utilised priority fees in times of need. This lead to non-prioritised transactions to not succeed\xa0timely.","authors":["yy","gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Wrap Up 2022","permalink":"/blog/2022/12/31/Switchboard-Wrap-Up-2022"},"nextItem":{"title":"Building and Managing Data Feeds through Multisig Soltuions","permalink":"/blog/2022/12/06/Building-and-Managing-Data-Feeds-through-Multisig-Soltuions"}},"content":"With the recent\\n[Solana update on Fee Markets](https://solana.com/news/solana-network-upgrades),\\nall types of users on the Solana blockchain can utilise\\n[priority fees](https://docs.solana.com/proposals/fee_transaction_priority) to\\nbid for priority for their transactions in the leader\u2019s queue. In the recent FTX\\nsituation, we\u2019ve experienced an increased amount of users opting for prioritised\\ntransactions \u2014 meaning they utilised priority fees in times of need. This lead\\nto non-prioritised transactions to not succeed timely.\\n\\nLinks to external sites to view recent trends of fees on Solana:  \\n[Solscan Fee Tracker](https://beta-analysis.solscan.io/public/dashboard/06d689e1-dcd7-4175-a16a-efc074ad5ce2)  \\n[Dune Dashboard](https://dune.com/crypto_notte/solana-additional-fee-analysis)\\n\\nOracles remain a critical infrastructure for all types of products to execute\\ntimely at any given scenario. Hence, in the event of an increased amount of\\nusers opting for prioritised transactions, crucial data feeds on Switchboard\\nmust participate as well \u2014 introducing **Data Feed Priority Fees**. Furthermore,\\nafter researching, we\u2019ve implemented a **Sliding Window** feature to improve\\noracle success rates.\\n\\n\x3c!--truncate--\x3e\\n\\n# Data Feed Priority Fees\\n\\nIn order to maintain Switchboard\u2019s permissionless and customisable aspect, we\u2019ve\\nimplemented priority fees to data feeds to be a user-configurable method.\\n\\nIn the User Profile page, users can now specify priority fees settings to\\nimprove feed quality when feed is stale \u2014 meaning to increase priority fees in\\norder to land transactions for feed updates.\\n\\n## Refer to image for a concise description of each setting.\\n\\nIn this case, Staleness\\\\* refers to:\\n\\n# Sliding Window\\n\\nIn the standard Switchboard v2 architecture, it forces the reporting oracle to\\nonly accept answers from a new single round. With Sliding Window, instead of\\naforementioned, oracles will be able to accept last N answers regardless of\\nround ID.\\n\\nThis means that oracles are able to complete their tasks despite when a new\\nround opens.\\n\\nThe Sliding Window feature can also be found in the User Page configurations.\\n\\n# Conclusion\\n\\nUltimately, Switchboard users can now improve feed quality by opting for Data\\nFeed Priority Fees and enabling Sliding Window.\\n\\nInevitably, updates will happen to blockchains, we aim to maintain the\\nSwitchboard protocol as we keep up to date with any relevant updates, providing\\nour users with the best experience \u2014 accurate and timely data in a\\npermissionless and customisable way.\\n\\nIf you have any queries, feel free to reach out!\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)"},{"id":"/2022/12/06/Building-and-Managing-Data-Feeds-through-Multisig-Soltuions","metadata":{"permalink":"/blog/2022/12/06/Building-and-Managing-Data-Feeds-through-Multisig-Soltuions","source":"@site/blog/2022/12-06-Building-and-Managing-Data-Feeds-through-Multisig-Soltuions.mdx","title":"Building and Managing Data Feeds through Multisig Soltuions","description":"Switchboard protocol provides a permissionless way to customize data feeds to your specific use casesOur approach has always been developer-first, allowing developers to build feeds through our low-code interface, the Publisher app and manage seamlessly all in the same application.","date":"2022-12-06T00:00:00.000Z","formattedDate":"December 6, 2022","tags":[],"readingTime":2.95,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Building and Managing Data Feeds through Multisig Soltuions","description":"Switchboard protocol provides a permissionless way to customize data feeds to your specific use casesOur approach has always been developer-first, allowing developers to build feeds through our low-code interface, the Publisher app and manage seamlessly all in the same application.","authors":["yy","gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Data Feed Priority Fees and Sliding Window on Solana","permalink":"/blog/2022/12/26/Data-Feed-Priority-Fees-and-Sliding-Window-on-Solana"},"nextItem":{"title":"#PluggedintoSui","permalink":"/blog/2022/11/01/PluggedintoSui"}},"content":"Building & Managing Data Feeds through Multisig Solutions\\n\\nSwitchboard protocol provides a permissionless way to customize data feeds to\\nyour specific use cases. Our approach has always been developer-first, allowing\\ndevelopers to build feeds through our low-code interface, the\\n[Publisher](https://app.switchboard.xyz) app and manage seamlessly all in the\\nsame application.\\n\\nAs our ecosystem protocols grow and scale together with Switchboard, there will\\nbe protocols that require a similar set of data feeds. Take example of a group\\nof DeFi protocol, they are likely integrating with similar crypto assets and\\nthus, requiring a similar set of price feeds to plug into their protocols.\\n\\nIn order for teams and developers to co-own data feeds in a secure manner, a\\nmulti-signature (Multisig) wallet solution will be able to achieve it.\\n\\n\x3c!--truncate--\x3e\\n\\n# Building and Managing Data Feeds through Multisig Solutions\\n\\nAfter receiving requests from mainly DeFi protocols, we\u2019ve integrated with\\nMultisig solutions on Solana to bring this feature to our users. Switchboard\\nusers are now able to utilise Multisigs to build, fund and manage their data\\nfeeds with external parties.\\n\\n## What is a Multisig?\\n\\nA multi-signature wallet allows a group of users to approve a transaction before\\nit can be executed. Many individuals and teams desire to have multiple parties\\nsign off on a transaction, such as payments or withdrawals before it can be\\nexecuted. This allows for more robust security, as it spreads the responsibility\\nof your digital assets to multiple parties, and avoids a single point of failure\\nin the case of a compromised individual or wallet.\\n\\nMultiple users can be required to manage any on-chain transaction, for example\\nrequiring multiple users to sign a payment transaction, purchasing an NFT,\\nwithdrawal from a wallet or in Switchboard\u2019s use case: updating the settings and\\nfunding of a data feed.\\n\\n## How does Multisig work with Switchboard?\\n\\nWhen creating a data feed, users can opt to integrate their data feeds with a\\nMultisig wallet. To do so, they will either need to:\\n\\n- Create a feed through a Multisig wallet and have its authority immediately\\n  under the Multisig wallet\u2019s address upon creation;\\n- Create a feed natively on Switchboard\u2019s\\n  [Publisher](https://app.switchboard.xyz) and transfer its authority to a\\n  Multisig wallet address (as shown in image).\\n\\nMy Profile page in Switchboard Publisher\\n\\nThis integration allows multiple users in the Multisig to gain ownership of the\\ndata feed and to execute transactions responsibly such as funding the lease of\\nthe feed or updating the feed configurations.\\n\\n## Benefits of using Switchboard through a Multisig solution\\n\\nBringing back the example from above, a group of DeFi protocol can set up a\\nMultisig wallet to manage a group of price feeds that they require for their\\nprotocols. By doing so, they can save on funds by sharing feeds, instead of\\nfunding them individually. Since fees are shared amongst more parties, they can\\nopt for the best feed security by maximising the number of _jobResults_ and\\n_oracleResults_ for each feed.\\n\\nThe integration helps improve developer operations on the protocol side but\\nultimately, the end users benefit greatly from this as well. The knowledge of\\nknowing that the protocols are using a set of price feeds controlled through a\\nMultisig wallet \u2014 provides an additional layer of security as responsibility and\\ncross-checking are heightened.\\n\\n# To conclude\\n\\nSwitchboard users are able to utilise Multisig applications to build, manage and\\nfund data feeds to not only benefit on the protocol level but for their end\\nusers too.\\n\\n## Links and resources\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nTelegram: [https://t.me/switchboardxyz](https://t.me/switchboardxyz)\\n\\nDocumentation: [https://docs.switchboard.xyz](https://docs.switchboard.xyz)\\n\\nOther links:\\n[https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2022/11/01/PluggedintoSui","metadata":{"permalink":"/blog/2022/11/01/PluggedintoSui","source":"@site/blog/2022/11-01-PluggedintoSui.mdx","title":"#PluggedintoSui","description":"","date":"2022-11-01T00:00:00.000Z","formattedDate":"November 1, 2022","tags":[{"label":"#PluggedIn","permalink":"/blog/tags/plugged-in"}],"readingTime":1.985,"hasTruncateMarker":false,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"}],"frontMatter":{"title":"#PluggedintoSui","description":"","authors":["yy"],"tags":["#PluggedIn"],"hide_table_of_contents":true},"prevItem":{"title":"Building and Managing Data Feeds through Multisig Soltuions","permalink":"/blog/2022/12/06/Building-and-Managing-Data-Feeds-through-Multisig-Soltuions"},"nextItem":{"title":"Switchboard Oracle on Near Mainnet Alpha","permalink":"/blog/2022/10/26/Switchboard-Oracle-on-NEAR-Mainnet-Alpha"}},"content":"## How can Switchboard empower the next wave of blockchain applications?\\n\\nOracles remain a crucial role player in any blockchain ecosystem, acting as the\\nintermediary between blockchains and real world data. Switchboard has provided,\\nand continues to provide, permissionless data for developers to build on top of.\\n\\nSince pre-deployment of the Switchboard oracle protocol, we have stood by the\\nideology of putting the developer experience first and empowering developers\\nwith the tools they need to build innovative blockchain applications. In order\\nto empower and reach more developers, Switchboard Labs believes that\\ninfrastructure protocols must expand horizontally across blockchains, bringing\\ntheir network and tooling to more developers.\\n\\n## Question: Which chain?\\n\\nA new, promising blockchain has emerged:[ Sui](https://sui.io/)\\nby[ Mysten Labs.](https://mystenlabs.com/) . Mysten was launched in 2021 by\\nformer executives of Meta\u2019s Novi Research and lead architects of the Diem\\nblockchain and Move programming language. The company\u2019s inaugural product, Sui,\\nis a decentralised, proof of stake blockchain that builds on important\\ninnovations in consensus algorithms and leverages novel data structures to\\ndeliver a high-performance, low-cost Layer 1.\\n\\n> **\\\\*Quote from Mysten Labs: **\u201c_Oracle networks represent critical web3\\n> tooling which developers rely on to build high-performing dApps. We are\\n> excited to partner with Switchboard and empower our community to curate their\\n> own data sources and publish permissionless data feeds to the Sui\\n> blockchain_.\u201d\\\\*\\n\\nMysten Lab\u2019s technological advancements and vision have attracted and welcomed\\nmany developers around the world to the Sui ecosystem. In a handful of months,\\nwe\u2019ve seen many aspiring teams building exciting projects seeking to establish\\ntheir presence on Sui.\\n\\nHence, we believe that by expanding our oracle network and building blocks to\\nSui, we can ultimately empower the next wave of developers to build blockchain\\napplications welcoming the next billion users to web3.\\n\\n## #PluggedintoSui\\n\\nWe are officially announcing Switchboard\u2019s next multi-chain expansion to the\\n**Sui blockchain**!\\n\\nOur core application, Publisher and Explorer, will retain its value and\\nfamiliarity across the chains to enhance overall developing experience. We\u2019re\\nthrilled to be a part of this journey and do keep a look out for the very first\\n**permission-less**, **decentralised**, **customisable** oracle implementation\\non Sui \u2014 providing developers with general purpose data feeds (price, sports,\\nweather, events data, etc.) and Verifiable Random Function (VRF).\\n\\n_It\u2019ll be electrifying!_\\n\\nCheck out our links [**here**](https://linktr.ee/switchboardxyz)!\\n\\n[**Join**](https://discord.gg/switchboardxyz) our community today and stay tuned\\nto our upcoming events!\\n\\n![](https://cdn-images-1.medium.com/max/5230/1*n3FSpY7BIZZtN420Y9PFwg.png)"},{"id":"/2022/10/26/Switchboard-Oracle-on-NEAR-Mainnet-Alpha","metadata":{"permalink":"/blog/2022/10/26/Switchboard-Oracle-on-NEAR-Mainnet-Alpha","source":"@site/blog/2022/10-26-Switchboard-Oracle-on-NEAR-Mainnet-Alpha.mdx","title":"Switchboard Oracle on Near Mainnet Alpha","description":"","date":"2022-10-26T00:00:00.000Z","formattedDate":"October 26, 2022","tags":[],"readingTime":2.31,"hasTruncateMarker":false,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard Oracle on Near Mainnet Alpha","description":"","authors":["yy","gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"#PluggedintoSui","permalink":"/blog/2022/11/01/PluggedintoSui"},"nextItem":{"title":"Switchboard Oracle on Aptos Mainnet","permalink":"/blog/2022/10/18/Switchboard-Oracle-on-Aptos-Mainnet"}},"content":"After 1\u20132 months of researching, building, testing and hardcore shipping,\\nSwitchboard Labs is proud and happy to present to you, our mainnet alpha\\nimplementation on NEAR!\\n\\nIn this article, we\u2019ll discuss the following:\\n\\n- NEAR Foundation grant\\n\\n- What we currently support\\n\\n- What to look out for\\n\\n- Links and resources to start developing\\n\\n## NEAR Foundation Grant\\n\\nIn the past 2 months of research and development, we\u2019ve been in active\\ndiscussions with the NEAR Foundation about the NEAR ecosystem. We quickly\\nlearned there is a need for more projects contributing to the infrastructure of\\nthe NEAR ecosystem. In particular, tools that help support the developer\\nexperience.\\n\\n> Read our [**_#PluggedintoNEAR_**](/blog/2022/09/13/PluggedintoNEAR) article to\\n> learn about our expansion to NEAR.\\n\\nWe\u2019d love to take the opportunity to thank the NEAR Foundation for supporting us\\nwith a grant to:\\n\\n- Kickstart research and development in the infancy stage;\\n\\n- Steadily push mainnet alpha to production;\\n\\n- Manage developer operations;\\n\\n- Fund initial set of first-party Switchboard sponsored feeds.\\n\\n## What does Switchboard currently support?\\n\\nAs Switchboard Labs expands our oracle to support NEAR, our products retain its\\nvalues and familiarities to provide the best developer experience for builders\\nacross the chains.\\n\\n![](https://cdn-images-1.medium.com/max/2400/1*8_bhESdlMnNI3OGSavDQ1Q.jpeg)\\n\\n### Explorer\\n\\nAs mentioned above, Switchboard Labs will sponsor a set of first-party data\\nfeeds to provide a quick start for developers to copy the feed address with ease\\nand plug them into their programs to read the data. These data feeds are namely\\nthe top few cryptocurrencies and they can be found on the\\n[Explorer](https://switchboard.xyz/explorer) page.\\n\\n### **Publisher**\\n\\nThe [Publisher](https://app.switchboard.xyz) retains its features of the catalog\\nand custom feed builder (with Web 2 fetch, Parse, Math, Logic task types readily\\navailable). With the Publisher\u2019s core features of permissionlessness and\\ncustomizability, developers can build, fund and manage their data feeds all on\\nour application without the need of any form contact or friction.\\n\\n> Read our\\n> [**thread**](https://twitter.com/switchboardxyz/status/1575893327869665291?s=20&t=IE6n74ZgGCIssOr7fqWiFw)\\n> to learn about our products. Read our\\n> [**documentation**](https://docs.switchboard.xyz/near/feeds) to learn about\\n> NEAR integrations. Read our\\n> [**github**](https://github.com/switchboard-xyz/sbv2-near) to dive deeper\\n> about NEAR implementations.\\n\\n## What to look out for?\\n\\nAs we continue to improve and collaborate closely with various protocols on\\nNEAR, expect to see new Web 3 fetch task types populating in the custom feed\\nbuilder. Those task types will support fetching of on-chain price data from\\nAMMs, CLOBs and more. Additionally, we will continue to update our documentation\\nand provide developer support to current and new builders across the NEAR\\necosystem!\\n\\nWe\u2019re excited to be a part of NEAR and its ecosystem to plug into the next wave\\nof blockchain applications. Stick around as announcements regarding workshops\\nand more coming soon!\\n\\n## Links and resources\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nTelegram: [https://t.me/switchboardxyz](https://t.me/switchboardxyz)\\n\\nDocumentation: [https://docs.switchboard.xyz](https://docs.switchboard.xyz)\\n\\nOther links:\\n[https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)"},{"id":"/2022/10/18/Switchboard-Oracle-on-Aptos-Mainnet","metadata":{"permalink":"/blog/2022/10/18/Switchboard-Oracle-on-Aptos-Mainnet","source":"@site/blog/2022/10-18-Switchboard-Oracle-on-Aptos-Mainnet.mdx","title":"Switchboard Oracle on Aptos Mainnet","description":"","date":"2022-10-18T00:00:00.000Z","formattedDate":"October 18, 2022","tags":[],"readingTime":2.54,"hasTruncateMarker":false,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard Oracle on Aptos Mainnet","description":"","authors":["yy","gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Oracle on Near Mainnet Alpha","permalink":"/blog/2022/10/26/Switchboard-Oracle-on-NEAR-Mainnet-Alpha"},"nextItem":{"title":"#PluggedintoNEAR","permalink":"/blog/2022/09/13/PluggedintoNEAR"}},"content":"Aptos Labs has officially launched their L1 blockchain to mainnet on 17 October\\n2022! A great feat for Move developers to begin building products and use cases\\non mainnet; providing end users with a fresh experience within Aptos\u2019s\\necosystem.\\n\\nOracles play a crucial and integral role in the genesis of any blockchain\\nmainnet launch \u2014 providing developers with the necessary data (such as price,\\nweather, sports and more data fetch-able through Switchboard!) to plug into\\ntheir products.\\n\\nHence, in order to build a strong infrastructure foundation, Switchboard Labs is\\nproud and thrilled to announce the official co-launch of our oracle protocol\\nwith Aptos Labs and many of its ecosystem protocols!\\n\\nIn this article, we\u2019ll discuss:\\n\\n- Aptos grant\\n\\n- What we currently support\\n\\n- What to look out for\\n\\n- Links and resources to start developing\\n\\n## Aptos Grant\\n\\nIn the past 2 months of research and development, we\u2019ve discussed closely with\\nAptos regarding supporting data needs for day 1 on Aptos mainnet. From the sheer\\namount of support and the increasing number of protocols building on Aptos, we\\nrealise the need for infrastructure protocols to be readily available. By\\nexpanding our oracle protocol to Aptos for its mainnet launch, Switchboard Labs\\naim to enhance developer experience and scaffold a strong foundation for the\\necosystem.\\n\\n> Read our [**_#PluggedintoAptos_**](/blog/2022/09/01/PluggedintoAptos) article\\n> to learn about our expansion to Aptos.\\n\\nWe\u2019d love to take the opportunity to thank Aptos for supporting us with a grant\\nto:\\n\\n- Kickstart research and development in the infancy stage;\\n\\n- Speedily push production to mainnet;\\n\\n- Manage developer operations;\\n\\n- Fund initial set of first-party Switchboard sponsored feeds.\\n\\n## What Switchboard currently support\\n\\nAs Switchboard Labs expands our oracle to support Aptos, our products retain its\\nvalues and familiarities to provide the best developer experience for builders\\nacross the chains.\\n\\n> # _Bringing the **Switchboard Experience** to a **multi-chain** level._\\n\\n### **Explorer**\\n\\nOn day 1 of mainnet, as mentioned above, Switchboard Labs will sponsor a set of\\nfirst-party data feeds to provide a quick start for developers to consume the\\ndata. These data feeds can be found on the\\n[Explorer](https://switchboard.xyz/explorer) page.\\n\\n### **Publisher**\\n\\nOn day 1 of mainnet, the Publisher retains its features of the catalog and\\ncustom feed builder (with Web 2 fetch, Parse, Math, Logic task types readily\\navailable).\\n\\n> Read our\\n> [**thread**](https://twitter.com/switchboardxyz/status/1575893327869665291?s=20&t=IE6n74ZgGCIssOr7fqWiFw)\\n> to learn about our products. Read our\\n> [**documentation**](https://docs.switchboard.xyz/aptos) to learn about Aptos\\n> integrations.\\n\\n## What to look out for\\n\\nAs we continue to build and collaborate closely with various protocols building\\non Aptos, expect to see support for fetching of on-chain price data from AMMs,\\nCLOBs and more. Additionally, we will continue to update our documentation and\\nprovide developer support to current and new builders across the Aptos\\necosystem!\\n\\nWe\u2019re excited to be on this journey with Aptos and its ecosystem to plug into\\nthe next wave of blockchain applications. Stick around as announcements\\nregarding workshops and more are coming soon!\\n\\n## Links and resources\\n\\nTwitter:\\n[https://twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\nDiscord: [https://discord.gg/switchboardxyz](https://discord.gg/switchboardxyz)\\n\\nDocumentation: [https://docs.switchboard.xyz](https://docs.switchboard.xyz)\\n\\nOther links:\\n[https://linktr.ee/switchboardxyz](https://linktr.ee/switchboardxyz)\\n\\n![](https://cdn-images-1.medium.com/max/3840/1*GxPJ0bbX2raQ4yvVi5prGg.jpeg)"},{"id":"/2022/09/13/PluggedintoNEAR","metadata":{"permalink":"/blog/2022/09/13/PluggedintoNEAR","source":"@site/blog/2022/09-13-PluggedintoNEAR.mdx","title":"#PluggedintoNEAR","description":"","date":"2022-09-13T00:00:00.000Z","formattedDate":"September 13, 2022","tags":[{"label":"#PluggedIn","permalink":"/blog/tags/plugged-in"}],"readingTime":1.375,"hasTruncateMarker":false,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"#PluggedintoNEAR","description":"","authors":["yy","gallynaut"],"tags":["#PluggedIn"],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Oracle on Aptos Mainnet","permalink":"/blog/2022/10/18/Switchboard-Oracle-on-Aptos-Mainnet"},"nextItem":{"title":"#PluggedintoAptos","permalink":"/blog/2022/09/01/PluggedintoAptos"}},"content":"> # Switchboard\u2019s multi-chain expansion plan\\n\\nAt Switchboard, we believe the future of oracle protocols is to expand across\\nthe ever-growing amount of blockchains \u2014 empowering any developer coming from\\nany background, touching first base on any codebase, blockchain and ecosystem.\\n\\n> # Question: Which chain?\\n\\nThe very first inception of Switchboard protocol is built on top of the Rust\\nprogram language. We\u2019ve seen the growing love for Rust in developers, and in\\norder to empower more developers building with Rust, it makes sense to expand\\ntowards another R*ust-based* blockchain.\\n\\n> # #PluggedintoNEAR\\n\\nWith that said, Switchboard Labs is excited to officially announce the expansion\\nof Switchboard protocol to **NEAR** blockchain!\\n\\n> # What does Switchboard bring to the NEAR ecosystem?\\n\\nBeing a permissionless oracle protocol, Switchboard\u2019s philosophy is to firstly\\nbuild a low-code UI that reduces friction for developers. Instead of going\\nthrough layers of contacts to spin up a generic data feed, on Switchboard\u2019s\\nPublisher, a developer can build their own data feed within minutes and have\\nfull customizability, management over their own feeds.\\n\\nApart from our core infrastructure products, by bringing our oracle\\ninfrastructure to NEAR, we believe providing developer workshops to educate and\\nonboard new developers is of utmost importance. Ultimately, this will help\\nenhance current and future developers\u2019 building experience on NEAR blockchain.\\n\\n> # wen dev-net?\\n\\nSwitchboard Labs has been heads down to build out the very same\\ndeveloper-friendly experience for NEAR developers.\\n\\nWord on the street is: **\\\\*The more \u201c#PluggedintoNEAR\u201d we receive, we just might\\nhave a surprise during NEARCON**.\\\\*\\n\\nJoin our community and build with Switchboard where you plug and play with\\noracles!\\n\\n_It\u2019ll be electrifying._\\n\\n![](https://cdn-images-1.medium.com/max/5262/1*ToCEQBtSb7j9ICu0fJHlrQ.png)"},{"id":"/2022/09/01/PluggedintoAptos","metadata":{"permalink":"/blog/2022/09/01/PluggedintoAptos","source":"@site/blog/2022/09-01-PluggedintoAptos.mdx","title":"#PluggedintoAptos","description":"","date":"2022-09-01T00:00:00.000Z","formattedDate":"September 1, 2022","tags":[{"label":"#PluggedIn","permalink":"/blog/tags/plugged-in"}],"readingTime":1.13,"hasTruncateMarker":false,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"#PluggedintoAptos","description":"","authors":["yy","gallynaut"],"tags":["#PluggedIn"],"hide_table_of_contents":true},"prevItem":{"title":"#PluggedintoNEAR","permalink":"/blog/2022/09/13/PluggedintoNEAR"},"nextItem":{"title":"Switchboard 360: Looking Back, Forward and All Around","permalink":"/blog/2022/08/29/Switchboard-360-Looking-Back-Forward-and-All-Around"}},"content":"PluggedintoAptos\\n\\n> # **How to bring the next million developers to Web 3?**\\n\\nIn order to empower developers to build in Web 3, Switchboard preaches and\\nbuilds its oracle protocol with a developer-first approach. However, how can we\\nreach **MORE** developers?\\n\\nSwitchboard Labs believes the future of an infrastructure protocol is to expand\\nhorizontally, bringing its network and tooling to more developers.\\n\\n> # Question: Which chain?\\n\\nWith the emergence of the new blockchain, [Aptos](https://aptoslabs.com/) and\\nits enticing Move codebase, attracting both experienced and novice Web 3\\ndevelopers. Additionally, in the matter of a handful of months, we\u2019ve seen many\\nprojects seeking to establish its presence in Aptos.\\n\\nHence, we believe that by expanding our oracle network and building blocks to\\nAptos, we can ultimately empower the next wave of developers.\\n\\n> # #PluggedintoAptos\\n\\nWe are officially announcing Switchboard\u2019s first multi-chain expansion is to the\\n**Aptos blockchain**.\\n\\n> # wen dev-net?\\n\\nSwitchboard Labs has been heads down to build out the very same\\ndeveloper-friendly experience for Aptos developers.\\n\\nWord on the street is: **\\\\*The more \u201c#PluggedintoAptos\u201d we receive, the faster\\nwe ship**.\\\\*\\n\\nYes, we\u2019re starting a MOVEment and this is only the beginning. Watch out for the\\nvery first **permission-less**, **decentralized**, **customizable** oracle\\nimplementation on Aptos.\\n\\n_It\u2019ll be electrifying._\\n\\nCheck out our links [**here**](https://linktr.ee/switchboardxyz)!\\n\\n[**Join**](https://discord.gg/switchboardxyz) our community today and stay tuned\\nto our upcoming events!\\n\\n![](https://cdn-images-1.medium.com/max/4560/1*H6sMX3iUO0ZSEK_6V-IOBg.png)"},{"id":"/2022/08/29/Switchboard-360-Looking-Back-Forward-and-All-Around","metadata":{"permalink":"/blog/2022/08/29/Switchboard-360-Looking-Back-Forward-and-All-Around","source":"@site/blog/2022/08-29-Switchboard-360-Looking-Back-Forward-and-All-Around.mdx","title":"Switchboard 360: Looking Back, Forward and All Around","description":"","date":"2022-08-29T00:00:00.000Z","formattedDate":"August 29, 2022","tags":[],"readingTime":4.185,"hasTruncateMarker":true,"authors":[{"name":"YY","title":"Business Development","url":"https://twitter.com/0xYankee","imageURL":"https://pbs.twimg.com/profile_images/1610178005091094528/8eIdMfh6_400x400.jpg","key":"yy"},{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard 360: Looking Back, Forward and All Around","description":"","authors":["yy","gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"#PluggedintoAptos","permalink":"/blog/2022/09/01/PluggedintoAptos"},"nextItem":{"title":"Data Feed Best Practices","permalink":"/blog/2022/08/04/Data-Feed-Best-Practices"}},"content":"Switchboard is celebrating its one year anniversary! It\u2019s actually our 3 months\\npast our anniversary but we were too busy chewing glass to look up at a\\ncalendar.\\n\\n![](https://cdn-images-1.medium.com/max/2048/1*bS_RynZeVR3MWIVNbbM0kw.jpeg)\\n\\n## In this article,\\n\\nWe\u2019ll be taking a walk down memory lane, looking back at all we\u2019ve accomplished.\\nAfter which, we\u2019ll take a look at the road ahead of us. We also want to give a\\nbig thank you to all our supporters and community members who made this\\npossible.\\n\\n## Looking back\u2026\\n\\nSwitchboard started off as a hackathon idea. We had the crazy notion that\\ndevelopers should be able to take any off-chain _OR_ on-chain data and create\\ntheir own data feeds.\\n\\n### **Permission-less** without the _bullshit_.\\n\\n> NO exclusivity contracts, NO \u201csponsorships\u201d, NO waiting for teams\u2019 responses.\\n\\nThis means, no headaches and all you need to do is\\n\\n1. Select the data (pricing data, outcome of an event, weather of a city);\\n\\n1. Customize the parameters to fit to your custom use cases;\\n\\n1. Pay the necessary transaction fees to publish a feed on-chain.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*obKkpQhR8WAQNjgOLgxUYQ.jpeg)\\n\\n\x3c!--truncate--\x3e\\n\\n### Truth is\\n\\nBTC price feeds are great but what about low cap illiquid alt price feeds? It\\nturns out, many developers and projects want** long tail data feeds**!\\n\\n- Prediction markets looking for the outcome of an election;\\n\\n- Lending protocols looking to add small cap asset as collateral;\\n\\n- Aspiring artist creating a dynamic NFT collection based off player statistics;\\n\\nFret not, Switchboard allows you to get the data your application needs\\non-chain.\\n\\n## Looking around\u2026\\n\\nLet\u2019s take this moment to look around us, the support from the community,\\nprotocols and many others is heartwarming. Thanks to each and every one of you,\\nwe\u2019ve managed to accomplish all of this within our first year:\\n\\n- May 25, 2021 \u2014 First oracle on Solana main-net\\n  ([Article](/blog/2021/05/25/introducing-switchboard))\\n\\n- June 23, 2021 \u2014 Third prize in Solana\u2019s 2nd hackathon for the DeFi track\\n  ([Article](https://solana.com/news/announcing-winners-of-the-solana-season-hackathon))\\n\\n- August 2021 \u2014 First verifiable randomness implementation on Solana\\n\\n- January 27, 2022 \u2014 First permission-less oracle network on Solana\\n  ([V2 Announcement](/blog/2022/01/27/Switchboard-V2-is-LIVE))\\n\\n- February 2022 \u2014 First fully on-chain VRF implementation on Solana\\n\\n- June 2022 \u2014 First decentralized data catalog on Solana\\n  ([Publisher Announcement](/blog/2022/06/22/Switchboard-Publisher))\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*u327c5Agih-OAhZpt20ZoQ.jpeg)\\n\\nThis is only the tip of the ice berg.\\n\\nSwitchboard strongly believes in a developer first approach (evident on our\\nPublisher\u2019s UI). Hence, the biggest compliment to us is seeing new developers\\nchoosing to tap into Switchboard to learn, explore and build new incredible\\nproducts. Check out the\\n[Switchboard Ecosystem](https://switchboard.xyz/ecosystem) to see a list of our\\namazing partners! If you\u2019re building with Switchboard fill out the form to get\\nyour project added.\\n\\n> # Great, now what?\\n\\n## Looking forward\u2026\\n\\nIntroducing our Switchboard roadmap, as part of building a permission-less,\\ndecentralized protocol there\u2019s 3 key features the Switchboard protocol needs:\\n\\n### Decentralized Governance\\n\\nThe Switchboard protocol has a network of decentralized node operators and\\napplication developers. Anyone can run a node but it\u2019s important that decisions\\nto modify the protocol, particularly with regards to value transfer, staking,\\nslashing and other crypto-economic questions are taken together by the\\ncommunity.\\n\\nIn the next few months we will start rolling out the initial implementation of\\nthe Switchboard DAO and look to the community to shape the protocol going\\nforward.\\n\\n### Decentralized Curation\\n\\nCurrently, developers can use any public endpoint / job definition to publish a\\ndecentralized feed using Switchboard.\\n\\n> # How do we get to 420,069+ feeds available on-chain?\\n\\nWe need a way to incentivize the community to curate quality jobs while also\\nproviding a convenient UI for developers to easily tap into.\\n\\n**Enter Publisher**. Over the coming months we will finalize the curation\\nincentives and allow you, the community, to contribute to the catalog and get\\nrewarded for growing the network.\\n\\n### Crosschain Data & Publishing\\n\\nAs we have seen over the last few years the future is multi-chain. This means\\ndevelopers will need a way to publish feeds referencing data on multiple chains,\\nwhile also publishing the feed itself on multiple chains.\\n\\nFor those following the rumors this should come as no surprise. Without further\\nado:\\n\\n> # Switchboard is going multi-chain!\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*A3mtxgDhprj6dUJ5pBUXyg.jpeg)\\n\\nWe will share more specifics soon! For now, we look forward to work with new\\ndevelopers to help fulfill their vision. Solana will continue to be our \u201chome\\nchain\u201d moving forward and where we will launch our initial governance modules.\\n\\n## Conclusion\\n\\nThis is only the beginning of Switchboard, we\u2019ve come a long way but we\u2019re not\\ndone yet.\\n\\nAs we look to expand, we\u2019re looking for rockstars to join us in building a great\\ninfrastructure building block for developers just like yourself and empower them\\nto build the next generation of technology, the Web 3.\\n\\nAll types of contributors across the board (such as marketing, community, smart\\ncontract development, etc) are welcomed! If this sounds interesting to you,\\nreach out to us on [Discord](https://discord.gg/switchboardxyz) or send your\\nresume to [jobs@switchboard.xyz](http://jobs.@switchboard.xyz)!\\n\\nCheck out our links [**here**](https://linktr.ee/switchboardxyz)!\\n\\n[**Join**](https://discord.gg/switchboardxyz) our community today and stay tuned\\nto our upcoming events!"},{"id":"/2022/08/04/Data-Feed-Best-Practices","metadata":{"permalink":"/blog/2022/08/04/Data-Feed-Best-Practices","source":"@site/blog/2022/08-04-Data-Feed-Best-Practices.mdx","title":"Data Feed Best Practices","description":"","date":"2022-08-04T00:00:00.000Z","formattedDate":"August 4, 2022","tags":[],"readingTime":16.98,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Data Feed Best Practices","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard 360: Looking Back, Forward and All Around","permalink":"/blog/2022/08/29/Switchboard-360-Looking-Back-Forward-and-All-Around"},"nextItem":{"title":"Verifiable Randomness (VRF) on Solana","permalink":"/blog/2022/07/13/Verifiable-Randomness-on-Solana"}},"content":"Oracles are not a one size fit all solution, in fact redundancy should be used\\ndepending on your use cases and risk tolerance\\n\\n![](https://cdn-images-1.medium.com/max/3200/1*mw9LjHRBP_O1ebxh9BhSqw.jpeg)\\n\\nDevelopers building real world applications for web3 rely on oracles to relay\\nand publish data on-chain. Oracles are not a one size fit all solution, in fact\\nredundancy should be used depending on your use cases and risk tolerance.\\nSwitchboard\u2019s goal is to generalize data feeds and leave it up to the developer\\nto configure and tune their data flow. Today\u2019s article looks at how Switchboard\\nfeeds differ from other providers, and how you can configure your data feed to\\nincrease economic security.\\n\\nWe also have an infographic which summarizes this article:\\n[https://docs.switchboard.xyz/img/Data_Feed_Best_Practices.png](https://docs.switchboard.xyz/img/Data_Feed_Best_Practices.png)\\n\\n\x3c!--truncate--\x3e\\n\\n## Oracles Overview\\n\\nA Switchboard feed belongs to a single oracle queue, which is a realm of oracles\\nthat get assigned to update requests in a round-robin fashion. The feed\u2019s config\\ndictates how update requests are invoked and routed through the network, along\\nwith a set of job accounts that define how data is sourced off-chain.\\nSwitchboard data feeds can fetch data from http endpoints, websockets, or\\non-chain sources. Switchboard feeds are meant to be generic enough to meet any\\nuse case and leave it up to the on-chain consumers to configure.\\n\\n### Oracle Consensus\\n\\nSwitchboard uses rounds to open and close a batch of oracle responses. A\\nSwitchboard feed has a specified **_minUpdateDelay_** which determines the\\nminimum time a round is open for in order to give the oracles enough time to\\nrespond. When a new round is opened, the data feed gets assigned to a new batch\\nof oracles, which is configurable with the parameter\\n**_oracleRequestBatchSize_**. After **_minOracleResults_** responses are\\nreceived, the on-chain program calculates the result using the median of the\\noracle responses. The median ensures large outliers do not drastically skew the\\naccepted result, unlike averages. Oracles who responded within the queue\u2019s\\nconfigured parameters are rewarded, while the oracles who respond outside this\\nthreshold are slashed (if the queue has slashingEnabled). As you can see, the\\noracle consensus can be configured by the downstream user to provide the\\nsecurity necessary for their use case. Check out the\\n[data feed docs](https://docs.switchboard.xyz/feed) for more information on the\\nlifecycle of Switchboard data feed updates.\\n\\nThis differs from other oracle solutions like Pyth where data feeds are sourced\\nfrom trusted market participants directly. This results in a faster update rate\\nbut makes no guarantees on the number of sources that responded. With\\nSwitchboard feeds you can guarantee a set number of sources and oracles have\\nresponded before accepting the result on-chain.\\n\\n## Democratizing Data Feeds\\n\\nSwitchboard is a decentralized protocol that allows users to publish and request\\nupdates from a pool of oracles. Switchboard oracles allocate their resources to\\nupdates requested from on-chain consumers. This leaves it up to the consumer to\\ndecide what data is brought on-chain.\\n\\nSwitchboard feeds are public meaning anyone is free to read the value on-chain\\nso sometimes it is ideal to piggy back on an existing feed. This works well for\\nsome protocols but leaves you vulnerable to sudden changes in your on-chain data\\nflow. This is a risk vector that can be mitigated by owning your own data feed\\nand being your feed\u2019s authority.\\n\\nIf you\u2019re using a public data feed, consider contributing to the feeds lease to\\nextend its lifetime.\\n\\n\ud83d\udca1 **NOTE**: The feed authority differs from the lease authority. Only the lease\\nauthority is permitted to withdraw funds. When contributing to public leases\\ncheck the lease authority is set to an empty public key or else the feed\\nauthority could withdraw the funds for themselves.\\n\\n### Own Your Data\\n\\nThe feed authority has the power to modify the feed, including:\\n\\n- change the job definitions and adapt to market conditions such as if a new\\n  exchange siphoned volume from the current sources\\n\\n- speed up or slow down the feed depending on changing use cases\\n\\n- change the reporting parameters to save on cost\\n\\n- move the feed to a new queue for increased security or reliability\\n\\n- complete ownership over your on-chain data flow\\n\\n### DAO\\n\\nA feed authority could even be set to a DAO where the quorum votes on changes to\\na feeds configuration. This is true decentralization at play where the settings\\nof a feed are optimized for a variety of use cases where voting power could be\\ncontrolled by lease contributions or tokens staked.\\n\\n## Tuning a Switchboard Feed\\n\\nNow that we have some background on how switchboard oracles publish data\\non-chain, let\u2019s look at how to configure a Switchboard feed.\\n\\n### Data Source Diversity\\n\\nThe first step when building a feed is determining where you are sourcing your\\ndata from. Each data source should correspond to a job account, which is just a\\ncollection of [Switchboard tasks](https://docs.switchboard.xyz/api/tasks), used\\nto instruct the oracles on how to fetch and transform data. Checkout the\\n[job directory](https://docs.switchboard.xyz/feed/directory) for some example\\ndefinitions. You can also view a catalog of curated job definitions in the\\n[Switchboard publisher](https://app.switchboard.xyz/).\\n\\n- **Job Diversity** \u2014 Ensure you\u2019re sourcing data from multiple, reliable\\n  sources.\\n\\n- **Job Weights** \u2014 Add job weights for sources with a higher degree of truth,\\n  such as exchanges where price discovery is likely to happen. Oracles submit\\n  the weighted median as their final result so jobs with a higher weight have\\n  more influence on the result.\\n\\n- **minJobResults** \u2014 Ensure the oracles have a reliable set of data before\\n  responding on-chain. If only 1 out of 12 sources respond, you will not have a\\n  reliable result. But if you set this to 12 out of 12 and one of your sources\\n  is failing, you will encounter a stale feed, so ensure you have some margin\\n  for single source failures.\\n\\n### Queue Selection\\n\\nYou should select a queue that will provide your feed with a sufficient level of\\nsecurity.\\n\\n- **Oracle Reputation** \u2014 you should select a queue with a proven track record\\n  of honest reporting. Oracles store various\\n  [metrics](https://docs.switchboard.xyz/idl/types/OracleMetrics) on-chain that\\n  can be used to determine their reliability. Oracles are assigned to update\\n  request in a round robin fashion where assignment is pseudo-random but this\\n  gives a fairly accurate picture of a queues overall reliability.\\n\\n- **Oracle minStake** \u2014 you should select a queue that requires oracles to stake\\n  a respectable sum of capital before joining the queue. This will be used to\\n  slash oracles for misreporting feeds.\\n\\n- **Queue Reward** \u2014 your selected queue should reward oracles sufficiently\\n  enough such that they are incentivized to report honestly, yet not too high\\n  where update request are prohibitively expensive. Switchboard DAO queues\\n  currently use 12500 lamports as the oracle reward, per update request.\\n\\n- **Queue Permissions** \u2014 high availability feeds should be on a queue where\\n  **_unpermissionedFeedsEnabled_** is set to false. This prevents data feeds\\n  from being able to join and spam the queue with update requests.\\n\\n- **Slashing** \u2014 feeds securing financial applications should be on a queue with\\n  **_slashingEnabled_** to dissuade oracles from malicious behavior.\\n\\nYou may notice Switchboard DAO queues do not have all of these settings enabled\\nyet. Switchboard DAO queues currently rely on vetting trusted oracle operators\\nto bootstrap the network. As the network grows, the queues will be further\\ndecentralized and rely on these parameters to enforce security. Stay tuned for\\nmore information on the Switchboard DAO and how new oracles will be permitted by\\nthe network.\\n\\n### Data Availability\\n\\nConfigure when and how often you need new data on-chain.\\n\\n- **Crank / Automatic Updates** \u2014 any data feed that has sufficient queue\\n  permissions is able to join a crank. A crank is a scheduling mechanism for\\n  data feeds that will invoke a new round after each minUpdateDelay with some\\n  added jitter to prevent predictable oracle assignment. Data feeds not on a\\n  crank should set the option **_disableCrank_** and will need to manually\\n  requests new updates or have their own scheduling mechanism.\\n\\n- **minUpdateDelay** \u2014 determines how often new data can be requested on-chain.\\n  This should be set depending on your use case. Decentralized exchanges will\\n  need faster updates than a lending protocol.\\n\\n- **varianceThreshold** \u2014 is the change percentage required between a previous\\n  round and the current oracle result before a value is published on-chain. This\\n  is used to conserve lease fees for the feed operator. Highly available feeds\\n  should set this to 0 so values are always reported on-chain.\\n\\n- **forceReportPeriod** \u2014 is the max staleness for a feed. If the\\n  varianceThreshold was not exceeded but a set number of seconds have passed,\\n  the oracle will respond on-chain. This should almost always be used with\\n  varianceThreshold to ensure your feed is updating as expected and not stale\\n  for another reason.\\n\\n\ud83d\udca1 **NOTE**: See the\\n[check_staleness](https://docs.rs/switchboard-v2/latest/switchboard_v2/aggregator/struct.AggregatorAccountData.html#method.check_staleness)\\nfunction in the rust crate when integrating.\\n\\n### Oracle Consensus\\n\\nConfigure how many oracles are assigned to a request and how many must respond\\nto accept a result.\\n\\n- **oracleRequestBatchSize** \u2014 sets the number of oracles assigned to each\\n  update request. The quickest way to increase feed security is to request more\\n  oracles each update round because it requires a higher degree of oracle\\n  collusion in order to affect the on-chain result. In reality, this increases\\n  the overall cost of a feed so it\u2019s a careful consideration for feed operators\\n  when configuring a feed.\\n\\n- **minOracleResults** \u2014 set the minimum number of oracles that must respond\\n  before accepting a result on-chain. This ensures you have a sufficient data\\n  set before the on-chain program takes the median of the oracle responses.\\n\\nThe number of oracles assigned to an update request should always be less than\\nthe number of oracles required to respond. There are a variety of reasons that\\nmay cause an oracle response to fail, such as Solana network degradation,\\nindividual oracle network issues, or transaction spamming. Your feed\u2019s lease is\\nonly deducted when a round was successfully closed based on the feed\u2019s\\nminOracleResults.\\n\\n### Cost\\n\\nThe two main methods to reduce a feeds cost is to:\\n\\n- increase the **_minUpdateDelay_** so updates are requested less often\\n\\n- add a **_varianceTolerance_** so changes are only reported when a given\\n  percentage change threshold is reached. This will greatly reduce the number of\\n  updates on-chain during periods of low volatility so if you are using a\\n  staleness check in your on-chain program, make sure to pair it with\\n  **_forceReportPeriod_** so a value is always reported after a given staleness\\n  interval.\\n\\nAnother way to reduce cost is to set the feed authority to a DAO and share the\\nfeed cost with other on-chain consumers. A DAO can be used to vote on feed\\nchanges and can help democratize data on-chain. If you\u2019re using a public data\\nfeed, consider contributing to the feeds lease to extend its lifetime.\\n\\n### Redundancy\\n\\nWhile Switchboard feeds have a proven track record, no system is fault tolerant\\nwithout some level of redundancy. If possible, you should pair a Switchboard\\nfeed with another oracle provider or a TWAP feed to ensure you are viewing\\nreliable data. Stay tuned for a future article on advanced data feed usages.\\n\\n## Recommended Feed Configuration\\n\\nThe following table highlights some recommended settings. This will not\\nencompass all use cases \u2014 use at your own discretion. Find us on Discord to\\nanswer any configuration questions.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*Xbs8jnDAnkFRwfK3EiGX9A.png)\\n\\n## Feed Maintenance\\n\\nThe following highlights some basic maintenance you should employ when working\\nwith a Switchboard feed.\\n\\n- **Monitor Lease Funds** \u2014 you should monitor your feeds lease account for low\\n  balances. When a feed\u2019s lease is emptied, it will no longer process new\\n  updates until it has enough to reward the oracles processing the update. We\\n  are working with a few web3 messaging services to enable wallet notifications\\n  when leases are low on funds.\\n\\n- **Monitor Crank Eviction** \u2014 if a lease is emptied, it will also be evicted\\n  from its crank. Switchboard feeds act like public utilities where anyone is\\n  free to re-push it to a crank, as long as it doesn\u2019t have **disableCrank** set\\n  to true.\\n\\n- **Monitor Data Sources** \u2014 Sometimes APIs change or move. High availability\\n  feeds should have some basic routine health checks to ensure their on-chain\\n  data is updating as expected.\\n\\n## Integration Checklist\\n\\nThe [switchboard-v2](https://crates.io/crates/switchboard-v2) crate is used to\\nintegrate Switchboard into your on-chain programs. You can also view some\\n[example programs in the switchboard-v2 repo](https://github.com/switchboard-xyz/switchboard-v2/tree/main/programs).\\n\\n- [ ] Check aggregator is owned by the Switchboard program\\n\\n- [ ] Check the latest round has more oracle responses than the minOracleResults\\n      [**(get_result)**](https://docs.rs/switchboard-v2/latest/switchboard_v2/aggregator/struct.AggregatorAccountData.html#method.get_result)\\n\\n- [ ] Optional, check the feed has not exceeded a given confidence interval\\n      [**(check_confidence_interval)**](https://docs.rs/switchboard-v2/latest/switchboard_v2/aggregator/struct.AggregatorAccountData.html#method.check_confidence_interval)\\n\\n- [ ] Optional, check the feed has been updated recently\\n      [**(check_staleness)**](https://docs.rs/switchboard-v2/latest/switchboard_v2/aggregator/struct.AggregatorAccountData.html#method.check_staleness)\\n\\n## TWAPs and Historical Data\\n\\nSwitchboard feed owners can elect to add a history buffer to their feed. This\\nwill automatically store the last **N** accepted results on-chain, where N is\\nconfigurable by the user from 1 to 350,000 samples, with the current Solana\\naccount size limits. On-chain consumers can also read from the history buffer\\nand validate a subset of the history to ensure the current oracle price has not\\nskewed too far from the recent samples.\\n\\nOnce a feed has a history buffer, anyone can create a separate TWAP feed that\\nreads the history buffer and calculates the time weighted average. This is\\nuseful for feeds that may have low liquidity and suffer from frequent price\\nswings.\\n\\nMore advanced usages of TWAP include the ability to source the TWAP price at\\nsettlement each week. Let us say we\u2019re an options protocol with contracts\\nsettling at 5PM UTC every Friday and we need a way to source the 1hr TWAP\\nleading up to settlement. We also need to ensure that value is always calculated\\nfor that 1hr window so our liquidators are using the most accurate price\\nobserved on-chain. With Switchboard, you can build a feed that will always\\nresolve to that 1hr window each week. You can see it in action here on devnet.\\n[https://switchboard.xyz/explorer/2/9wChHmbtuLbjGYt9tdH7guLY9zaqT56veSxTba18k5N3](https://switchboard.xyz/explorer/2/9wChHmbtuLbjGYt9tdH7guLY9zaqT56veSxTba18k5N3)\\n\\nSwitchboard data feeds aim to be as general as possible to meet all use cases.\\nIf you require a more complicated data feed, do not hesitate to reach out\\nbecause we may be able to build a custom solution that will benefit not only you\\nbut other data feed users.\\n\\n## Feed Creation Walkthrough\\n\\nI\u2019m a brand new lending protocol and I need a new data feed for XYZ. Let\u2019s walk\\nthrough some considerations I might have for how to publish this feed.\\n\\n### Queue Selection\\n\\nThis protocol will obviously be successful and have a significant total value\\nlocked (TVL) so I should choose a secure queue. I look at a queue that already\\nhas an XYZ feed but I notice the queue isn\u2019t as secure as I need; maybe it has a\\nlow minimum stake requirement for oracles or doesn\u2019t slash oracles for\\nmisreporting. So I check the Switchboard DAO and find a queue that requires\\noracles to stake 10 SOL, has slashing enabled, requires feeds to be permitted to\\njoin, and has a proven track record of honest reporting \u2026 perfect, we found the\\nqueue we\u2019ll create the feed for.\\n\\n\ud83d\udca1 **NOTE**: Data feed owners can always move their feed to a new queue after\\ncreation.\\n\\n### Data Source Diversity\\n\\nNext, we\u2019ll need to find where to source the data. I see 4 centralized exchanges\\nand 2 decentralized exchanges. Upon further inspection, I notice one of the CEXs\\nhas questionable volume and one of the DEXs has no volume \u2014 so we should ignore\\nthese sources. So we\u2019ll create the feed with 3 CEXs and 1 DEX. This is good but\\nlet\u2019s see if we can do better. We see theres a Saber pool for this asset so we\\ncan use the\\n[lpExchangeRateTask](https://docs.switchboard.xyz/api/tasks#lpexchangeratetask)\\nto fetch the price. We can also use the\\n[jupiterSwapTask](https://docs.switchboard.xyz/api/tasks#jupiterswaptask) to\\naggregate through various on-chain sources and get us the best price. Awesome,\\nwe have 3 CEXs, 1 DEX, a Saber pool source, and a Jupiter Swap source.\\n\\nWe want the feed result to be calculated with enough sources so we have an\\naccurate depiction of the price but if we keep it too strict, a single source\\nfailing could halt the feed \u2014 maybe one of the CEX sources had a data center\\noutage. Your **minJobResults** should be at least one less than the total number\\nof sources to account for this. To give us enough margin, we\u2019ll set ours to 4,\\nso 4 out of 6 sources have to respond in order for the oracle to publish a price\\nupdate.\\n\\nWe notice the majority of the volume for this source is on a single CEX where\\nthe majority of price discovery occurs \u2014 we should definitely weigh this source\\nhigher than the rest. Here\u2019s what that may look like.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*2rrHzP2TjiKlpr9p7dMDEw.png)\\n\\n### Data Availability\\n\\nA lending protocol may not need the most up-to-date prices as compared to a\\ntrading platform. So we will set the **minUpdateDelaySeconds** to 15. This\\nshould be fast enough for our lending platform \u2014 we can always adjust if needed.\\n\\nWe\u2019re a lending protocol on-chain so we need the data to be readily available \u2014\\nso we will choose to push the feed onto a crank to enable automatic updates. The\\ncrank is an incentivisation mechanism to regularly schedule feed updates. A\\nsport betting platform may opt-out of a crank since they will only need the data\\nwhen an event is settled.\\n\\n### Oracle Consensus\\n\\nWe\u2019re planning on securing financial capital with our data feeds so we need to\\nensure a malicious oracle cannot skew the price feed in its favor. To do this we\\nwill set the **oracleRequestBatchSize** to at least 8. This means 5+ oracles\\nwould have to collude in order to skew a feeds accepted value on-chain; remember\\nwe\u2019re using the median and not the average as the final result. We\u2019ll then set\\n**minOracleResults** to 7 to account for any oracle networking issues that may\\nprevent them from responding. If only 7 oracles respond, at least 4 will need to\\nbe acting in good faith to produce an honest result \u2014 which is a very reasonable\\nassumption to make since we selected our queue carefully.\\n\\n### Cost\\n\\nWoohoo, we\u2019re almost done. We\u2019ve built the job definitions, configured and tuned\\nthe settings, so we head over to the Switchboard publisher to build the feed. We\\nget to checkout and notice the cost may be a bit high for a lending protocol\\nthat is just starting out. No worries, let\u2019s look at some ways to conserve cost.\\n\\nLet\u2019s look at **minUpdateDelaySeconds.** Updating this feed every 15 seconds may\\nbe a bit overkill. We can increase this to 30 to double the length of the feed.\\n\\nThe XYZ feed is a relatively low volatility feed, meaning the prices updated\\non-chain may be the same or about the same each update round. To account for\\nthis we can set the **varianceThreshold** to 0.1%, which instructs the oracles\\nto skip reporting a value if the value hasn\u2019t differed by 0.1% since the last\\nreported value on-chain. This will greatly extend the life of your feed but\\nmakes it hard to estimate the length of time left on the feed since it will\\ndepend on the feeds volatility and market conditions. Our feed will now only\\nincur a cost when a feeds value has changed significantly.\\n\\nGreat, we\u2019ve found some ways to reduce cost without sacrificing security. But\\nwhat if the XYZ asset suffers some loss of interest and reduce volatility? Your\\nfeed may fail to update for hours on end if the price hasn\u2019t moved by the set\\nvarianceThreshold. This can be mitigated by setting a **forceReportPeriod**,\\nwhich instructs the oracles to always report a result on-chain even if the\\nvariance threshold wasn\u2019t exceeded, or max staleness. We will set\\n**forceReportPeriod** to 900 so the feed will always report a value on-chain\\nevery 15minutes. When integrating on-chain, we should always be checking if the\\nfeed was updated within the forceReportPeriod interval to ensure the feed is\\nhealthy.\\n\\n## Conclusion\\n\\nThis was just a basic overview of how to think about configuring a feed to meet\\nyour use case. Each on-chain application will have their own set of requirements\\nfor how often a feed needs to be updated and what level of security is needed.\\nSwitchboard has provided the tools to generalize feed creation to meet most\\ndevelopers use cases. Please stop by the Discord with any questions on\\nconfiguring or integrating Switchboard feeds."},{"id":"/2022/07/13/Verifiable-Randomness-on-Solana","metadata":{"permalink":"/blog/2022/07/13/Verifiable-Randomness-on-Solana","source":"@site/blog/2022/07-13-Verifiable-Randomness-on-Solana.mdx","title":"Verifiable Randomness (VRF) on Solana","description":"","date":"2022-07-13T00:00:00.000Z","formattedDate":"July 13, 2022","tags":[],"readingTime":3.14,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Verifiable Randomness (VRF) on Solana","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Data Feed Best Practices","permalink":"/blog/2022/08/04/Data-Feed-Best-Practices"},"nextItem":{"title":"Switchboard Publisher","permalink":"/blog/2022/06/22/Switchboard-Publisher"}},"content":"Switchboard continues to be the only provider for verifiable randomness (VRF) on\\nSolana and today we are excited to announce a fee reduction bringing the overall\\ncost of a VRF request down to just under **0.002 SOL** \u2014 a 50x reduction!\\n\\nInitially, Switchboard set the cost of a VRF request to 0.1 SOL to protect the\\noracles from being overwhelmed with VRF requests, which could potentially crash\\nthe oracles as they awaited the VRF proof to confirm. Switchboard oracles have\\nsince migrated to using nonce accounts, or non-expiring transactions, to submit\\nthe necessary proofs, reducing the oracle\u2019s memory footprint, and increasing the\\noverall reliability of successfully completing the VRF proof. See the twitter\\nthread below for more information.\\n\\n<iframe src=\\"https://medium.com/media/6382c1a58c85f5921801b98283752f32\\" frameborder=\\"0\\"></iframe>\\n\\nSwitchboard will continue listening to the developer ecosystem in order to help\\npower the next wave of projects on Solana. If you\u2019re a developer that is\\nintegrating randomness into your application, we would love to connect and see\\nhow it can be further improved.\\n\\n## What is Randomness?\\n\\nRandom numbers are a useful building block for many applications, such as gaming\\nand some consensus protocols. Without an element of randomness, games and\\nprotocols can be cheated when adversaries are able to influence the outcome.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*7abFvsyHSLd4qos2ANkGiw.jpeg)\\n\\nWhile true-randomness on some computers can be made possible via _atmospheric\\nnoise_ and special hardware modules, such solutions on blockchains are not\\npossible since they are *virtual machines *without physical hardware. Thus,\\npseudorandom-functions are needed to close this gap.\\n\\nEnter Verifiable Random Function (VRF). A VRF is a public-key pseudorandom\\nfunction that provides proofs that its outputs were calculated correctly. This\\nmeans we can use a cryptographic keypair to generate a random number with a\\nproof, which can then be validated by anyone to ensure the value was calculated\\ncorrectly without the possibility of leaking the producer\u2019s secret key. You can\\nread more about\\n[VRF from the Algorand team](https://medium.com/algorand/algorand-releases-first-open-source-code-of-verifiable-random-function-93c2960abd61),\\nwhose founder was one of the authors on the original VRF paper.\\n\\n## Is Switchboard VRF Secure?\\n\\nSwitchboard\u2019s implementation adheres to volume 11 of the Internet Research Task\\nForce\u2019s (IRTFs) draft for VRF. If you like math feel free to check it out\\n[here](https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-11).\\n\\nOnce the oracle has posted the proof on-chain, anyone is permitted to turn the\\ncrank and verify the proof. If a malicious oracle tries to submit a false proof,\\nit will be rejected on-chain during the proof verification.\\n\\nSwitchboard\u2019s VRF implementation uses the VRF counter and the recent blockhash\\nas the VRF input to prevent oracles from gaining an unfair advantage.\\nUnfortunately, this means that just like any other blockchain VRF protocol,\\nthere exists a collusion vector between the oracle and the block-producer,\\nhowever, it is much more secure than simply using the blockhash on its own on\\nits own for randomness!\\n\\n## Should I use XYZ for Randomness?\\n\\nMany projects attempt to derive \u201crandomness\u201d from the latest blockhash.\\nUnfortunately, while very low-cost, this is **_extremely insecure_** against an\\nadversary with the ability to influence transaction ordering. Slot leaders could\\neasily exploit your game or protocol by adding noise to the blocks they produce\\nto result in \u201crandom\u201d data favorable to themselves. With the advent of MEV tech\\nsuch as Flashbots, Jito Labs, and proposer-builder-separation, this attack\\nvector may become more accessible to unsophisticated adversaries.\\n\\nAnother risk to be aware of is improper VRFs, such as those based on\\nnon-deterministic signature schemes, like EdDSA. See\\n[@colludingnode\u2019s thread](https://twitter.com/colludingnode/status/1536449312791707653)\\nfor more details.\\n\\nA few examples where VRF could have mitigated exploits:\\n\\n- [$COPE roulette exploited when using the recent blockhash for pseudo randomness](https://twitter.com/PierreArowana/status/1441552108734476290)\\n\\n- [Trash Panda mint sniped by bots due to predictable mint order](https://twitter.com/bardstocks/status/1469346361455923208?s=21)\\n\\n## How Do I Integrate Switchboard VRF?\\n\\nWe have a number of resources to get started!\\n\\n- [Discord](https://discord.com/invite/sNeGymrabT)\\n\\n- [VRF Documentation](https://docs.switchboard.xyz/randomness)\\n\\n- [Anchor VRF Example Program](https://github.com/switchboard-xyz/switchboard-v2/tree/main/programs/anchor-vrf-parser)"},{"id":"/2022/06/22/Switchboard-Publisher","metadata":{"permalink":"/blog/2022/06/22/Switchboard-Publisher","source":"@site/blog/2022/06-22-Switchboard-Publisher.mdx","title":"Switchboard Publisher","description":"","date":"2022-06-22T00:00:00.000Z","formattedDate":"June 22, 2022","tags":[],"readingTime":2.325,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard Publisher","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Verifiable Randomness (VRF) on Solana","permalink":"/blog/2022/07/13/Verifiable-Randomness-on-Solana"},"nextItem":{"title":"Dialed in with Switchboard: May 23, 2022","permalink":"/blog/2022/05/23/Dialed-in-with-Switchboard"}},"content":"Since inception, Switchboard was built with a primary goal in mind: democratize\\ndata feeds such that any developer can build, configure, and own their data\\non-chain. By enabling developers and lowering the barrier of entry for bringing\\ndata on-chain, we will help foster the next wave of applications for Web 3.\\n\\n## Background\\n\\nBlockchains cannot communicate with Web 2 services and need an intermediary to\\nfacilitate this exchange. Solana programs need an oracle service to fetch and\\npre-populate the data on-chain before it can be used by a program. A fault\\ntolerant data feed should have multiple off-chain sources defined, which can be\\ntime consuming for developers to seek out and configure.\\n\\n## Publisher\\n\\nEnter the [Publisher](http://app.switchboard.xyz).\\n\\n![app.switchboard.xyz](https://cdn-images-1.medium.com/max/2400/1*FQRpo7lrJ49Txu5AZ__YRA.gif)_app.switchboard.xyz_\\n\\nThe Publisher is a decentralized data catalog, giving data feed publishers\\n(typically developers) a convenient interface to find and build data feeds. The\\nPublisher includes a catalog of curated job definitions from a wide array of\\nsources ranging from FTX, Coinbase, ESPN, or even Weather.com.\\n\\n![Examples of data sources for price feeds](https://cdn-images-1.medium.com/max/5760/1*5ockbQ5msqHxNiyJFke1uw.png)_Examples\\nof data sources for price feeds_\\n\\nThis streamlines the data feed creation process and allows a developer to\\npublish a data feed on-chain in under 60 seconds! The Publisher also includes a\\n_Feed Builder_ to build and test custom job definitions in a simple to use\\ndrag-n-drop interface. After a publisher has created their feeds on-chain, they\\ncan monitor and fund their data feed on the _My Feeds_ dashboard.\\n\\n![Drag-n-drop interface](https://cdn-images-1.medium.com/max/5760/1*nTdLwGvSCFbztAx7qgkdOA.png)_Drag-n-drop\\ninterface_\\n\\n## Curator\\n\\nThe new Publisher decentralizes the data catalog and gives anybody the\\nopportunity to contribute and get rewarded. Curators are incentivized to scour\\nthe internet and find unique data points that could be of interest to the\\nbroader community.\\n\\n**Steps of a Curator**\\n\\n1. Finds a new data point\\n\\n1. Build job definition in the Publisher\\n\\n1. Add it to the decentralized catalog\\n\\n**Incentives for a Curator**\\n\\nThe curator\u2019s token wallet receives a kickback from any revenue generated from a\\njob definition, or anytime when a data feed is funded with the curator\u2019s job\\ndefinition. This incentivizes the community to contribute and grow the\\nSwitchboard data catalog and help enable web3 developers.\\n\\n## Conclusion\\n\\nThe Publisher is an exciting milestone for Switchboard because it opens up the\\ndata catalog to the community and allows anyone to contribute and get rewarded.\\n\\nSwitchboard is excited to bring further decentralization to the oracle space and\\nwelcome any feedback from the community. We\u2019re excited to see what the community\\nwill build with it next; give us a ring, our line is open!\\n\\n**References & links**\\n[**Introduction | Switchboard** *Switchboard is a multi-chain oracle network that allows anyone to publish general purpose data feeds on-chain\u2026*docs.switchboard.xyz](https://docs.switchboard.xyz/about)\\n[**Join Switchboard\u2019s Discord server!** *Join Switchboard\'s Discord to meet like-minded developers, participate in our DAO & community events!*discord.gg](https://discord.gg/switchboardxyz)\\n[**@switchboardxyz | Linktree** *#PluggedinbySwitchboard*linktr.ee](https://linktr.ee/switchboardxyz)"},{"id":"/2022/05/23/Dialed-in-with-Switchboard","metadata":{"permalink":"/blog/2022/05/23/Dialed-in-with-Switchboard","source":"@site/blog/2022/05-23-Dialed-in-with-Switchboard.mdx","title":"Dialed in with Switchboard: May 23, 2022","description":"","date":"2022-05-23T00:00:00.000Z","formattedDate":"May 23, 2022","tags":[],"readingTime":2.575,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Dialed in with Switchboard: May 23, 2022","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Publisher","permalink":"/blog/2022/06/22/Switchboard-Publisher"},"nextItem":{"title":"Dialed in with Switchboard: April 18, 2022","permalink":"/blog/2022/04/18/Dialed-in-with-Switchboard"}},"content":"## Switchboard V2 SDK is Here!\\n\\n[**github.com/switchboard-xyz/switchboard-v2**](https://github.com/switchboard-xyz/switchboard-v2)\\n\\nThe Switchboard V2 SDK is here and includes the necessary tools to help you\\nintegrate Switchboard into your on-or-off chain applications. The SDK includes\\nlibraries for Typescript/Javascript, Python, and Rust, as well as example\\nprograms demonstrating how to read and interact with Switchboard V2. Below is\\nthe current overview of the Github repo structure:\\n\\n![Current Switchboard V2 SDK Layout](https://cdn-images-1.medium.com/max/2000/0*8ZTLoxVoz8Lgfhdc)_Current\\nSwitchboard V2 SDK Layout_\\n\\n### Setup\\n\\nClone the repository\\n\\n```bash\\ngit clone [https://github.com/switchboard-xyz/switchboard-v2.git](https://github.com/switchboard-xyz/switchboard-v2.git) && cd switchboard-v2\\n```\\n\\nThen, install and link the dependencies\\n\\n```bash\\nyarn install\\nyarn workspaces run build\\nyarn workspace @switchboard-xyz/switchboardv2-cli link\\nanchor build && node ./scripts/setup-example-programs.js\\n```\\n\\nFinally, test the example programs\\n\\n```bash\\nanchor test\\n```\\n\\n### Quick Links\\n\\n- [Typescript Client](https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/ts)\\n\\n- [Rust Client](https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/rs)\\n\\n- [Python Client](https://github.com/switchboard-xyz/switchboard-v2/tree/main/libraries/py)\\n\\n- [Command Line Interface](https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli)\\n\\n- [On-Chain Program Examples](https://github.com/switchboard-xyz/switchboard-v2/tree/main/programs)\\n\\n- [Off-Chain Client Examples](https://github.com/switchboard-xyz/switchboard-v2/tree/main/packages)\\n\\n- [Oracle Deployment Scripts](https://github.com/switchboard-xyz/switchboard-v2/tree/main/oracles)\\n\\n- [Job Directory](https://github.com/switchboard-xyz/switchboard-v2/tree/main/directory)\\n\\n- [Documentation Website](https://docs.switchboard.xyz/introduction)\\n\\n### Localnet Integration\\n\\nThe SDK supports copying a Switchboard devnet environment to your localnet\\nenvironment for integration testing. This is useful if you want to see how your\\nprogram will react to Switchboard data feed updates.\\n\\nFirst, change the cluster to localnet in Anchor.toml.\\n\\nNext, create a Switchboard devnet queue and oracle.\\n\\n```bash\\nsbv2 localnet:env --keypair ../payer-keypair.json -o .switchboard\\n```\\n\\nThis command will output:\\n\\n- **start-local-validator.sh**: starts a local Solana validator with the\\n  Switchboard program, IDL, and our devnet environment pre-loaded\\n\\n- **start-oracle.sh**: start a Switchboard oracle and start heartbeating on the\\n  localnet queue\\n\\n- **docker-compose.yml**: docker file with the Switchboard oracle environment\\n\\n- **switchboard.env**: contains your Switchboard accounts\\n\\nIn three separate shells, run the following commands in this order:\\n\\n- .switchboard/start-local-validator.sh\\n\\n- .switchboard/start-oracle.sh\\n\\n- anchor test --skip-local-validator\\n\\nThe anchor tests are configured to first fetch the account info for the\\nSwitchboard DAO controlled devnet permissionless queue. If the account info is\\nnot found, it assumes a localnet connection and looks for the switchboard.env\\nwith your Switchboard environment specific public keys. If a .switchboard\\ndirectory or switchboard.env file is not found in the root project directory, it\\nwill look 2 levels higher until giving up.\\n\\n## Uniswap & SushiSwap Task Types\\n\\nSwitchboard has added the\\n[UniswapExchangeRateTask](https://docs.switchboard.xyz/api/tasks#uniswapexchangeratetask)\\nand\\n[SushiSwapExchangeRateTask](https://docs.switchboard.xyz/api/tasks#sushiswapexchangeratetask)\\nto resolve the swap price of assets on Uniswap and SushiSwap. These new task\\ntypes will allow Solana protocols to offer DeFi products using data sourced from\\nEthereum.\\n\\n<iframe src=\\"https://medium.com/media/0d02ad6777d181dd0e633aa245a4761d\\" frameborder=\\"0\\"></iframe>\\n\\n## xStepPriceTask\\n\\nSwitchboard also ported over the [xStepPriceTask](http://xsteppricetask) from\\nSwitchboard V1 to Switchboard V2. The following is an example of how to use the\\nnew task type:\\n\\n<iframe src=\\"https://medium.com/media/df6602bca382c16a430fcb92a649a4bd\\" frameborder=\\"0\\"></iframe>\\n\\n## SplTokenParseTask & SplStakePoolTask\\n\\nSwitchboard has added the\\n[SplTokenParseTask](https://gist.github.com/gallynaut/1414b538090e29fe598ef4186445de0d)\\nand [SplStakePoolTask](https://docs.switchboard.xyz/api/tasks#splstakepooltask)\\nto resolve on-chain data in your Switchboard feeds. This will allow developers\\nto build data feeds using live on-chain data. The following is an example of how\\nto fetch the total token supply of the MonkeeDao stake pool:\\n\\n<iframe src=\\"https://medium.com/media/d2e9490116b013c01959be8bf47c99bb\\" frameborder=\\"0\\"></iframe>\\n\\n## Publisher\\n\\nThe publisher got a facelift\\n\\n\u2026 more details soon\u2122!\\n\\n[app.switchboard.xyz](https://app.switchboard.xyz/)\\n\\n## Conclusion\\n\\nThe Switchboard V2 SDK is here to help developers integrate Switchboard into\\ntheir applications. We welcome any PRs or feedback from the community!\\n\\n- [docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\n- [discord.switchboard.xyz](http://discord.switchboard.xyz/)\\n\\n- [twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\n- [t.me/switchboardxyz](https://t.me/switchboardxyz)"},{"id":"/2022/04/18/Dialed-in-with-Switchboard","metadata":{"permalink":"/blog/2022/04/18/Dialed-in-with-Switchboard","source":"@site/blog/2022/04-18-Dialed-in-with-Switchboard.mdx","title":"Dialed in with Switchboard: April 18, 2022","description":"","date":"2022-04-18T00:00:00.000Z","formattedDate":"April 18, 2022","tags":[],"readingTime":1.695,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Dialed in with Switchboard: April 18, 2022","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Dialed in with Switchboard: May 23, 2022","permalink":"/blog/2022/05/23/Dialed-in-with-Switchboard"},"nextItem":{"title":"Dialed in with Switchboard: March 14, 2022","permalink":"/blog/2022/03/14/Dialed-in-with-Switchboard"}},"content":"> _Dialed in with Switchboard is a weekly newsletter about the various updates\\n> with Switchboard._\\n\\nAnd we\u2019re back with another edition of Dialed in with Switchboard. Thank you to\\neveryone we met at the Solana hacker house. The speed at which this developer\\necosystem is growing can only be witnessed in person.\\n\\nAnd also thank you to all of the Riptide hackathon submissions that were built\\nwith Switchboard. It was an impressive lineup and we\u2019re excited to see how they\\ngrow within the Solana ecosystem.\\n\\n<iframe src=\\"https://medium.com/media/9d5f54a40ec0574b4800b1d0ae78185c\\" frameborder=\\"0\\"></iframe>\\n\\n## Anchor Fetch\\n\\nProject Serum\u2019s Anchor framework provides a common Interface Design Language\\n(IDL) which specifies how programs written in Anchor store data on-chain and\\nserialize instructions. The IDL gives developers a quick way to hook into\\nprograms without needing to integrate the program\u2019s specific API. In fact, you\\ncan view any Anchor program account using the Solana explorer and visually view\\nthe on-chain data.\\n\\n**Note:** Switchboard V2 is written in Anchor and you can view its IDL at\\n[docs.switchboard.xyz/idl](https://docs.switchboard.xyz/idl).\\n\\n![](https://cdn-images-1.medium.com/max/2000/0*FCkUyyrA4q91chR6)\\n\\nWith that said, Switchboard has now added support to fetch any Anchor account\\nwith its newly added\\n[AnchorFetchTask](https://docs.switchboard.xyz/api/tasks#anchorfetchtask). The\\npublisher specifies the program ID and account address, and the Switchboard\\noracle will return the JSON representation of the parsed account data. This can\\nthen be chained with a\\n[JsonParseTask](https://docs.switchboard.xyz/api/tasks#jsonparsetask) to return\\na single value from any Anchor account. This new feature allows developers to\\nbuild complex oracles based on any Anchor account field.\\n\\n## Defi Kingdoms\\n\\nSwitchboard has also added the\\n[DefiKingdomsTask](https://docs.switchboard.xyz/api/tasks#defikingdomtask) to\\nallow publishers to build data feeds that return the swap price of a token on\\nDeFi Kingdoms. DeFi Kingdoms is a DeFi game built on ETH with in-game tokens and\\nNFTs that players can trade.\\n\\n## Conclusion\\n\\nOracles will need to update to\\n[dev-v2\u20134\u201312\u201322h](https://hub.docker.com/layers/node/switchboardlabs/node/dev-v2-4-12-22h/images/sha256-b38d80e0ab11c1329dc32897967120da625dab435c155ceb409a1175b5af6996?context=explore)\\nto leverage these new tasks.\\n\\nBuilding on Solana? Please find us on\\n[telegram](http://telegram.switchboard.xyz/) so we can connect and build\\ntogether. We\u2019re always looking for new teams that can leverage Switchboard and\\nare happy to build new task types to support your needs."},{"id":"/2022/03/14/Dialed-in-with-Switchboard","metadata":{"permalink":"/blog/2022/03/14/Dialed-in-with-Switchboard","source":"@site/blog/2022/03-14-Dialed-in-with-Switchboard.mdx","title":"Dialed in with Switchboard: March 14, 2022","description":"","date":"2022-03-14T00:00:00.000Z","formattedDate":"March 14, 2022","tags":[],"readingTime":1.185,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Dialed in with Switchboard: March 14, 2022","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Dialed in with Switchboard: April 18, 2022","permalink":"/blog/2022/04/18/Dialed-in-with-Switchboard"},"nextItem":{"title":"Dialed in with Switchboard: March 07, 2022","permalink":"/blog/2022/03/07/Dialed-in-with-Switchboard"}},"content":"> Dialed in with Switchboard is a weekly newsletter about the various on-going\\n> updates with Switchboard.\\n\\n## Jupiter Swap Task\\n\\nSwitchboard is in the final stages of testing its newly created\\n[JupiterSwapTask](https://docs.switchboard.xyz/api/tasks#jupiterswaptask), which\\nwill be rolled out to the oracles in the coming days.\\n\\nJupiter Swap is a liquidity aggregator on Solana and provides users with the\\noptimal route for a swap, ensuring they get the best price each time.\\n\\nSwitchboard currently allows publishers to build data feeds from a number of\\nsupported liquidity protocols, such as Serum, Raydium, Orca, Saber, and\\nMercurial. Switchboard\u2019s integration of JupiterSwap\u2019s SDK streamlines this\\nprocess, allowing publishers to specify an input and output token and be\\nconfident they are being returned the best price for a given swap.\\n\\nCheck out\\n[Switchboard\u2019s Job Directory](https://docs.switchboard.xyz/job-directory#jupiterswap)\\nfor an example on how to use this new task.\\n\\n## Raydium Swap Integration\\n\\nSwitchboard oracles will now resolve the swap price for a given Raydium pool\\nusing the\\n[lpExchangeRateTask](https://docs.switchboard.xyz/api/tasks#lpexchangeratetask).\\nYou can find a full list of supported Raydium AMM pools in their SDK:\\n[https://sdk.raydium.io/liquidity/mainnet.json](https://sdk.raydium.io/liquidity/mainnet.json).\\n\\n## In Case You Missed It\u2026\\n\\n**Gas Prices On-Chain**\\n\\nLast week we walked you through how to resolve the current price of gas\\non-chain.\\n\\n[https://twitter.com/switchboardxyz/status/1502331039414325251](https://twitter.com/switchboardxyz/status/1502331039414325251)\\n\\n**Riptide Hackathon Submissions**\\n\\nSwitchboard is offering up to $30k in prizes for the teams that best integrate\\nSwitchboard V2 in their hackathon submission. Make sure to fill out our form for\\nadded visibility on your project.\\n\\n[https://forms.gle/qdt1qWtje18d5VMB7](https://forms.gle/qdt1qWtje18d5VMB7)"},{"id":"/2022/03/07/Dialed-in-with-Switchboard","metadata":{"permalink":"/blog/2022/03/07/Dialed-in-with-Switchboard","source":"@site/blog/2022/03-07-Dialed-in-with-Switchboard.mdx","title":"Dialed in with Switchboard: March 07, 2022","description":"","date":"2022-03-07T00:00:00.000Z","formattedDate":"March 7, 2022","tags":[],"readingTime":2.165,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Dialed in with Switchboard: March 07, 2022","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Dialed in with Switchboard: March 14, 2022","permalink":"/blog/2022/03/14/Dialed-in-with-Switchboard"},"nextItem":{"title":"Switchboard x Riptide Prizes Announcement","permalink":"/blog/2022/02/25/Switchboard-Riptide-Prizes-Announcement"}},"content":"> Dialed in with Switchboard will be a weekly newsletter about the various\\n> on-going updates with Switchboard.\\n\\n## Lending Rate Task\\n\\nLast week Switchboard implemented the\\n[lendingRateTask](https://docs.switchboard.xyz/api/tasks#lendingratetask) thanks\\nto the work of JetLabs with their\\n[@jet-lab/defi-yield-ts](https://github.com/jet-lab/defi-yield-ts) library.\\nDevelopers can now source lending and borrowing rates for the top Solana lending\\nprotocols on-chain, opening the doors to new automated yield lending strategies.\\n\\nCheck out\\n[Switchboard\u2019s Job Directory](https://docs.switchboard.xyz/job-directory#lending-rates)\\nfor some examples on how to use this new task. Also view the protobuf schema for\\n[lendingRateTask](https://docs.switchboard.xyz/api/tasks#lendingratetask).\\n\\n## Mango Perps Task\\n\\nSwitchboard also added the\\n[mangoPerpMarketTask](https://docs.switchboard.xyz/api/tasks#mangoperpmarkettask)\\nto resolve the current price of perpetual markets on mango. This can be combined\\nwith the twapTask to track the time weighted average price of a mango perp\\nmarket and build automated strategies around it.\\n\\nCheck out\\n[Switchboard\u2019s Job Directory](https://docs.switchboard.xyz/job-directory#mango-perps)\\nfor some examples. You can find Mango Market\u2019s addresses in their\\n[@blockworks-foundation/mango-client-v3](https://github.com/blockworks-foundation/mango-client-v3/blob/main/src/ids.json)\\nrepo.\\n\\n## Variance Threshold added to Publisher\\n\\nThe [Publisher](https://docs.switchboard.xyz/publisher) was updated to allow a\\nconfigurable variance threshold field. The\\n[varianceThreshold](https://docs.switchboard.xyz/architecture/feeds#aggregatoraccountdata)\\ndictates the change percentage required before an oracle reports a result\\non-chain. A Switchboard data feed includes a pre-funded escrow to reward oracles\\nfor each successful update. The varianceThreshold is a cost saving parameter to\\nreduce excessive on-chain updates and extend the life of a feed. If an oracle\\nresolves a value that is too similar to the last reported value, the oracle\\nskips reporting a result and conserves the feed\u2019s escrow. Note, some feeds may\\nrequire the most up-to-date data so it is left up to the publisher based on\\ntheir use case.\\n\\n![Switchboard Lease Configuration](https://cdn-images-1.medium.com/max/2000/0*uwaHVEVzPbH26MQe)_Switchboard\\nLease Configuration_\\n\\n## Query Aggregator History On-Chain\\n\\nThe [switchboard-v2](https://docs.rs/switchboard-v2) crate was updated to 0.1.8,\\nwhich updates the anchor dependency to 0.22 and added the ability to query an\\naggregator\u2019s history buffer on-chain. An aggregator can be configured to store\\nthe last N results on-chain in a\\n[history buffer account](https://docs.switchboard.xyz/architecture/feeds/history).\\nThe rust crate now lets you query a history buffer and return the previous\\nresults value and timestamp. You can add a history buffer to your data feed\\nusing the Publisher on the\\n[Explorer App](https://app.switchboard.xyz).\\n\\n## VRF CPI Example\\n\\nThe\\n[@switchboard-xyz/vrf-cpi-example](https://github.com/switchboard-xyz/vrf-cpi-example)\\nwas updated to show how a Program Derived Address (PDA) can be used as a VRF\\nAccount\u2019s authority and sign requestRandomness instructions on its behalf. This\\nallows VRF Accounts to be controlled by a program and have predefined update\\nlogic.\\n\\n## Switchboard V2 CLI\\n\\nThe\\n[@switchboard-xyz/switchboardv2-cli](https://www.npmjs.com/package/@switchboard-xyz/switchboardv2-cli)\\nwas updated to support account deserialization on devnet and mainnet for\\nconvenient debugging. Once installed, run the command `sbv2 print PUBLICKEY`\\nwhere PUBLICKEY is any switchboard account, and the CLI will output the\\ndeserialized account."},{"id":"/2022/02/25/Switchboard-Riptide-Prizes-Announcement","metadata":{"permalink":"/blog/2022/02/25/Switchboard-Riptide-Prizes-Announcement","source":"@site/blog/2022/02-25-Switchboard-Riptide-Prizes-Announcement.mdx","title":"Switchboard x Riptide Prizes Announcement","description":"","date":"2022-02-25T00:00:00.000Z","formattedDate":"February 25, 2022","tags":[],"readingTime":1.285,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard x Riptide Prizes Announcement","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Dialed in with Switchboard: March 07, 2022","permalink":"/blog/2022/03/07/Dialed-in-with-Switchboard"},"nextItem":{"title":"Using Switchboard: Creating Custom Data Feeds","permalink":"/blog/2022/02/23/Using-Switchboard-Creating-Custom-Data-Feeds"}},"content":"Switchboard is sponsoring the Solana Riptide hackathon with $30k in prizes for\\nthe top 3 teams that best integrate Switchboard. Less than a year ago\\nSwitchboard was founded after a hackathon submission and we are grateful for the\\nopportunity to pay it back to the developer community.\\n\\nSwitchboard v2 allows for permission-less feeds \u2014 bring any public data point\\non-chain using a network of independent oracle operators. Switchboard recently\\nreleased V2 of its Verifiable Randomness Function (VRF), which allows developers\\nto request a verifiable random value, with proof verification entirely on-chain.\\nVerifiable randomness brings new use cases to Solana and allows developers to\\nprovide open, verifiable lotteries in their on-chain programs.\\n\\n## Prizes\\n\\nSwitchboard will be offering the following prizes:\\n\\n**First Prize ($15k):** Best integration of Switchboard v2\\n\\n**Second Prize ($10k):** Best use of Switchboard VRF\\n\\n**Third Prize ($5k):** Most interesting integration of Switchboard\\n\\n\x3c!--truncate--\x3e\\n\\n## Project Ideas\\n\\n- **Lease alerts**: Switchboard V2 aggregators rely on a lease account to fund\\n  oracles for completing an update request. Some form of email/discord/telegram\\n  alerting system could be useful for developers.\\n\\n- **Constant Function Market Maker** \u2014\\n  [https://medium.com/bollinger-investment-group/constant-function-market-makers-defis-zero-to-one-innovation-968f77022159](https://medium.com/bollinger-investment-group/constant-function-market-makers-defis-zero-to-one-innovation-968f77022159)\\n\\n- **Weather Microinsurance** \u2014 Utilize Switchboard\u2019s permission-less feeds to\\n  publish weather data and allow on-chain settlement based on some predefined\\n  conditions.\\n\\n## Getting Started\\n\\nYou can find some resources below to help you get started building with\\nSwitchboard. Don\u2019t hesitate to reach out to the team on\\n[Discord](https://discord.switchboard.xyz/),\\n[Telegram](https://t.me/switchboardxyz), or\\n[Twitter](https://twitter.com/switchboardxyz) for help.\\n\\n- [Switchboard Architecture](https://docs.switchboard.xyz/architecture)\\n\\n- [Using Switchboard \u2014 Creating Custom Feeds](https://switchboardxyz.medium.com/using-switchboard-creating-custom-data-feeds-869dcc625b96)\\n\\n- [VRF Example Repo](https://github.com/switchboard-xyz/vrf-cpi-example)\\n\\n- [Data Feeds Example Repo](https://github.com/switchboard-xyz/switchboard-v2-example)"},{"id":"/2022/02/23/Using-Switchboard-Creating-Custom-Data-Feeds","metadata":{"permalink":"/blog/2022/02/23/Using-Switchboard-Creating-Custom-Data-Feeds","source":"@site/blog/2022/02-23-Using-Switchboard-Creating-Custom-Data-Feeds.mdx","title":"Using Switchboard: Creating Custom Data Feeds","description":"","date":"2022-02-23T00:00:00.000Z","formattedDate":"February 23, 2022","tags":[],"readingTime":3.755,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Using Switchboard: Creating Custom Data Feeds","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard x Riptide Prizes Announcement","permalink":"/blog/2022/02/25/Switchboard-Riptide-Prizes-Announcement"},"nextItem":{"title":"Switchboard Introduces TWAP Support","permalink":"/blog/2022/02/07/Switchboard-Introduces-TWAP-Support"}},"content":"Switchboard is a permission-less Oracle network allowing anyone to spin up their\\nown data feeds and publish on-chain. To accomplish this, data feeds can be\\nconfigured from a collection of tasks in order to fetch data, parse a response,\\nthen determine a final result. You can find a list of available tasks in our\\ndocumentation. Today\u2019s article will walk you through spinning up your own data\\nfeed to fetch the current weather in Miami, FL using Switchboard\u2019s publisher\\nsite. This could be used by an on-chain program to calculate and settle\\ninsurance contracts relating to weather events.\\n\\n\x3c!--truncate--\x3e\\n\\n## Build Job Definition\\n\\n### Data Sources\\n\\nA data feed should have multiple sources but for this example we\u2019ll keep it\\nsimple. We\u2019ll be using the\\n[api.weather.gov/gridpoints](https://www.weather.gov/documentation/services-web-api#/default/gridpoint)\\nendpoint to resolve our data feed. After doing some digging we\u2019ve determined\\nthat the weather forecast office should be **MFL** and the latitude and\\nlongitude should be 111 and 50 respectively. So our full API endpoint should be\\n[https://api.weather.gov/gridpoints/MFL/111,50/forecast](https://api.weather.gov/gridpoints/MFL/111,50/forecast).\\nWe\u2019ll pass this URL as the argument to the httpTask.\\n\\n### Parse Response\\n\\nNow we need to extract the value from the API response. Here is what the\\nresponse will look like:\\n\\n<iframe\\n  src=\\"https://medium.com/media/efe4c82a9487835fcd6d62c5d5dd9055\\"\\n  frameborder=\\"0\\"\\n></iframe>\\n\\nWe can use the JsonParseTask to extract this value. This relies on using\\nJsonPath syntax to grab a value.[ https://jsonpath.com](https://jsonpath.com/)\\nis a great resource to test your queries. After some trial and error we\u2019ve\\ndetermined that the JSON path query should be\\n\u201c$.properties.periods.0.temperature\u201d. This will access the first array element\\nin the properties.periods object and return that period\u2019s temperature. So now\\nwe\u2019ve figured out how to fetch the weather data and extract the latest\\ntemperature value.\\n\\n### Build Task Definitions\\n\\nNow we can put it all together. The httpTask will be used to fetch external\\ndata, then pass it to the jsonParseTask to extract the latest temperature value.\\nThe final definition will look like this:\\n\\n<iframe\\n  src=\\"https://medium.com/media/132f06aaba39e0b0e9f91d97cac4395b\\"\\n  frameborder=\\"0\\"\\n></iframe>\\n\\n## Build Data Feed\\n\\nWhen building a Switchboard data feed, you will need to create the following\\naccounts:\\n\\n- Aggregator \u2014 to manage the data feed configuration and store the result\\n\\n- Job(s) \u2014 to store each job definition (only one needed for our example)\\n\\n- Lease \u2014 to pre-fund oracles for any update request\\n\\n- Permission \u2014 permits an aggregator to use a set of oracles\\n\\n![](https://cdn-images-1.medium.com/max/3200/0*YaoRCEngI8vcvb00)\\n\\nLuckily the [Switchboard App site](https://app.switchboard.xyz/)\\nstreamlines the on-chain workflow and handles this for us. We\u2019ll be creating a\\nnew data feed for Switchboard\u2019s permission-less queue. Optionally, you can\\nrequest permissions to Switchboard\u2019s permissioned queue once you are satisfied\\nwith the feed\u2019s configuration.\\n\\n### Configure Data Feed\\n\\nConnect your wallet, then locate and select the _Custom Feed_ button. The\\nfollowing popup lets you configure the name of your feed, as well as the job\\ndefinitions. Our example uses a single job.\\n\\n![](https://cdn-images-1.medium.com/max/2000/0*RNVzR-Gv-tI9e8yx)\\n\\nGive your feed a name such as _MIA Temperature,_ then select _Add Job+_. Give\\nthe job a name, such as Weather.gov MIA, then paste in the job definition from\\nabove. You can hit _Test_ to simulate the result to ensure you are using the\\ncorrect job definition.\\n\\n![](https://cdn-images-1.medium.com/max/2000/0*EdbEKh2EegG7kAQT)\\n\\nSelect _Add Job_ to be taken back to the Build a Feed modal. Then select _Add\\nFeed_ to add the feed to your basket.\\n\\n### Create Data Feed\\n\\nYou should have the weather feed in your basket and ready for checkout.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*_Ywdq0LL75kJkZxO8vjTvQ.png)\\n\\nSelect _Checkout_ to begin publishing your feed on-chain. You should see the\\nfollowing modal to fund your lease contract:\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*9gB-dywmlXFRUY4qNrD1lA.png)\\n\\nThis step will deposit the specified SOL amount into a lease contract. If the\\n_Enable automatic updates_ checkbox is selected, your feed will be added to the\\ncrank and updated at a regular interval of your choosing. Note the exact update\\ntimes are dependent on the Solana network and an added jitter. Each time your\\nfeed successfully updates, a portion of the lease contract will be dispersed to\\nthe oracles fulfilling the update request. When you are happy with the settings,\\nselect _Go to Checkout_.\\n\\nThe Checkout Exchange modal will display a summary of the account creation cost.\\nSelect _Create Feed_ to start the on-chain account creation.\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*EVfnM7Z2n-L-QoyIIWfNAA.png)\\n\\nOnce complete, you should see your new data feed on the _Your Feeds_ page\\nalready updating!\\n\\n![](https://cdn-images-1.medium.com/max/2000/1*qN18XKbiGxeGyWrhSIHXSg.png)\\n\\n## Conclusion\\n\\nSwitchboard allows developers to build and configure their own on-chain data\\nfeeds. If you\u2019re building with Switchboard and need a new task type or\\nadditional functionality please reach out to us on Discord, Telegram, or\\nTwitter.\\n\\n- [Job Directory](https://docs.switchboard.xyz/job-directory)\\n\\n- [Data Feeds Architecture](https://docs.switchboard.xyz/architecture/feeds)\\n\\n- [Switchboard Tasks](https://docs.switchboard.xyz/api/tasks)"},{"id":"/2022/02/07/Switchboard-Introduces-TWAP-Support","metadata":{"permalink":"/blog/2022/02/07/Switchboard-Introduces-TWAP-Support","source":"@site/blog/2022/02-07-Switchboard-Introduces-TWAP-Support.mdx","title":"Switchboard Introduces TWAP Support","description":"","date":"2022-02-07T00:00:00.000Z","formattedDate":"February 7, 2022","tags":[],"readingTime":2.995,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard Introduces TWAP Support","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Using Switchboard: Creating Custom Data Feeds","permalink":"/blog/2022/02/23/Using-Switchboard-Creating-Custom-Data-Feeds"},"nextItem":{"title":"Switchboard V2 is LIVE!","permalink":"/blog/2022/01/27/Switchboard-V2-is-LIVE"}},"content":"| TWAP! TWAP! TWAP! Switchboard V2 now supports aggregator history\\n\\n### What is TWAP?\\n\\nA time weighted average price (TWAP) is the average price of an asset over a\\nspecified time frame. Let\u2019s say you\u2019re a large trader and you want to enter a\\nlarge SOL/USD position. If you execute a sudden market order, you could drain\\nthe order book and end up paying substantially more for the trade, plus bots\\nwill immediately start to arbitrage and your position will be underwater\\nimmediately. If you execute the same position using a TWAP, your orders will be\\nspread throughout the given timeframe, allowing the market to absorb your\\nliquidity, and giving you a more optimal price of the true market value.\\n\\nTWAP use cases extend beyond just trading. Here are just a few examples of how a\\nTWAP could be used in DeFi to reduce oracle price manipulations:\\n\\n- **Funding Premiums:** Using a TWAP over a random sample to avoid a single\\n  sample skewing the results\\n\\n- **Futures Expiry:** Futures expiration are correlated with higher volatility.\\n  Using a TWAP reduces the risk of manipulation or\\n  [banging the close](https://www.cftc.gov/LearnAndProtect/EducationCenter/CFTCGlossary/glossary_b.html#:~:text=Banging%20the%20Close%3A%20A%20manipulative,position%20in%20an%20option%2C%20swap).\\n\\n- **Lending Liquidations:** A TWAP reduces scam wicks causing erroneous lending\\n  position liquidations.\\n\\n- **On-Chain Trading Algos:** An on-chain program could use a Switchboard TWAP\\n  oracle to execute positions on Serum based on a given criteria.\\n\\n\x3c!--truncate--\x3e\\n\\n### How to Use TwapTask?\\n\\nTo start using the new TwapTask with Switchboard V2, you will need to initialize\\na history buffer account for your aggregator. You can initialize a history\\nbuffer using the\\n[javascript API method setHistoryBuffer](https://docs.switchboard.xyz/api/switchboardv2-api/classes/AggregatorAccount#sethistorybuffer).\\nA history buffer account stores a set number of accepted results for an\\naggregator, and given Solana\u2019s maximum account size of 10MB, the maximum number\\nof samples a single history buffer can support is 350,000 samples (Keep in mind\\nrent cost, this action is currently irreversible). The screenshot below shows\\nthe\\n[SOL/USD feed](https://switchboard.xyz/explorer/3/GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR)\u2019s\\nprice history in action on our explorer page.\\n\\n![](./assets/2022-02-07-Switchboard-Introduces-TWAP-Support_HistoryGraph.png)\\n\\n![](./assets/2022-02-07-Switchboard-Introduces-TWAP-Support_AggregatorCard.png)\\n\\nOnce a history buffer has been initialized for an aggregator, you can create a\\nseparate aggregator to track its TWAP. You can have multiple TwapTask tied to a\\nsingle aggregator/history buffer. The\\n[TwapTask](https://docs.switchboard.xyz/api/tasks#-twaptask) accepts the\\nfollowing values:\\n\\n- **_aggregatorPubkey_**: The public key of the aggregator that has a history\\n  buffer initialized\\n\\n- **_period_**: The time period, in seconds, to include in the TWAP calculation\\n\\n- **_weightByPropagationTime_** (Optional): Return the average, weighing each\\n  sample by the sample\u2019s propagation time (currentTimestamp \u2014\\n  previousTimestamp).\\n\\n- **_minSamples_** (Optional): The minimum number of samples that must be\\n  present in the history buffer, after filtering by time period, before\\n  accepting a result\\n\\nThe TwapTask first filters the history buffer and excludes any samples failing\\noutside the set time period. If the minSamples field is set and the number of\\nsamples in the filtered list is less than the minSamples, the oracles will not\\nreport a result. The oracle will then calculate the final value by taking the\\nweighted average between each sample\u2019s interval. You can find an example of the\\nTwapTask in our\\n[Job Directory](https://docs.switchboard.xyz/job-directory#twap).\\n\\n### Known Limitations\\n\\nThe TwapTask relies on accepted on-chain results being pushed to the history\\nbuffer. During periods of network degradations, aggregators may fail to post\\naccepted results due to an insufficient number of oracle responses. This may\\ncause TWAP calculations to have insufficient data to make a proper calculation.\\nTo mitigate this, you should specify a minSamples field in the job definition to\\nonly accept a TWAP result if enough samples are provided.\\n\\nCheck out our docs for a full list of tasks Switchboard supports:\\n[docs.switchboard.xyz/api/tasks](https://docs.switchboard.xyz/api/tasks)\\n\\nOr view our currently supported on-chain feeds:\\n[switchboard.xyz/explorer](https://switchboard.xyz/explorer)."},{"id":"/2022/01/27/Switchboard-V2-is-LIVE","metadata":{"permalink":"/blog/2022/01/27/Switchboard-V2-is-LIVE","source":"@site/blog/2022/01-27-Switchboard-V2-is-LIVE.mdx","title":"Switchboard V2 is LIVE!","description":"","date":"2022-01-27T00:00:00.000Z","formattedDate":"January 27, 2022","tags":[],"readingTime":2.075,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard V2 is LIVE!","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard Introduces TWAP Support","permalink":"/blog/2022/02/07/Switchboard-Introduces-TWAP-Support"},"nextItem":{"title":"Fair LP Token Oracles","permalink":"/blog/2022/01/20/Fair-LP-Token-Oracles"}},"content":"> Switchboard V2 is the first permissionless oracle protocol live on Solana\\n> mainnet!\\n\\nWhen we set out to build Switchboard the goal was clear: provide permissionless\\ndata on Solana such that anyone can contribute and grow the network. Existing\\noracle solutions rely on whitelisting oracle operators and building custom\\nsolutions for new data feeds. We decided to take a much more scalable approach;\\nanyone is free to publish any data feed they wish on-chain and, provided they\\nmeet the proper stake requirements, are free to run an oracle as well. Oracles\\nare awarded each time they complete an update request and slashed when they\\nprovide incorrect results. This fits in line with the broader web3 vision and \u2026\\n\\n**Today we are happy to announce the launch of Switchboard V2!**\\n\\nSwitchboard V2 was rebuilt from the ground up using Project Serum\u2019s Anchor\\nframework and is the first oracle network on Solana that allows permissionless\\ndata feeds. To achieve this, we designed a publisher site that streamlines the\\non-chain workflow and lets developers build and deploy a data feed in under 60\\nseconds. The publisher site is the culmination of months of working with some of\\nthe top Solana projects, anticipating their needs, in order to provide the best\\nexperience to support the thriving developer ecosystem. We can\u2019t wait to see\\nwhat products come out of the next hackathon now that the data developers rely\\non when building smart contracts is right at their fingertips.\\n\\n**The publisher site is now live:**\\n[app.switchboard.xyz](https://app.switchboard.xyz/)\\n\\n![Onchain data in under 60 seconds!](https://cdn-images-1.medium.com/max/2000/1*KlcKnP9LN8HUE3RzFdUZ5Q.gif)_Onchain\\ndata in under 60 seconds!_\\n\\n\x3c!--truncate--\x3e\\n\\nSwitchboard V2 introduces the concept of an oracle queue (realm) to manage how\\noracle resources get allocated, a crank to jump start the system and find data\\nfeeds ready for updates, and permission accounts to control who has access to an\\noracle queue or other onchain resources. We are currently laying the foundation\\nfor the Switchboard DAO so an oracle queue can be entirely managed by a DAO.\\nInitially the DAO quorum will consist of oracle operators as they are the most\\nfamiliar with the network constraints to make informed decisions but soon after\\nwe will open up the DAO to anyone growing the Switchboard protocol with us. This\\nwill make Switchboard the most decentralized oracle network in crypto.\\n\\nWe are excited to finally release the next iteration of our oracle protocol and\\nlook forward to seeing what you build with it!\\n\\n**Learn More**\\n\\n- [docs.switchboard.xyz](https://docs.switchboard.xyz/)\\n\\n- [discord.com/invite/HCzKP4cHDT](https://discord.com/invite/HCzKP4cHDT)\\n\\n- [twitter.com/switchboardxyz](https://twitter.com/switchboardxyz)\\n\\n- [t.me/switchboardxyz](https://t.me/switchboardxyz)"},{"id":"/2022/01/20/Fair-LP-Token-Oracles","metadata":{"permalink":"/blog/2022/01/20/Fair-LP-Token-Oracles","source":"@site/blog/2022/01-20-Fair-LP-Token-Oracles.mdx","title":"Fair LP Token Oracles","description":"","date":"2022-01-20T00:00:00.000Z","formattedDate":"January 20, 2022","tags":[],"readingTime":2.01,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Fair LP Token Oracles","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard V2 is LIVE!","permalink":"/blog/2022/01/27/Switchboard-V2-is-LIVE"},"nextItem":{"title":"Switchboard V2 (pt.3) \u2014 Incentives","permalink":"/blog/2021/11/03/Switchboard-V2-Incentives"}},"content":"Switchboard now offers fair LP token pricing oracles based on the work of Alpha\\nFinance Lab!\\n\\n## The Concern\\n\\nA liquidity pool is a collection of funds locked in a smart contract, used to\\nfacilitate decentralized trading, lending, and many more functions [1]. With\\nDeFi we are able to deposit assets into an LP pool, receive yield bearing LP\\ntokens, and then borrow against our LP tokens. The price of these LP tokens is\\ntypically calculated by summing the total liquidity in the pool and dividing by\\nthe number of LP tokens issued. This basic calculation works well when the total\\nliquidity in the pool is balanced between each asset but starts to fall apart\\nwhen the pool liquidity is imbalanced.\\n\\nConsider the WarpFinance incident where an attacker was able to use a flash loan\\nto manipulate the price of an LP token by taking advantage of the imbalance, for\\nwhich they used as collateral to borrow a greater amount of capital than was\\nsufficiently allowed [2]. This type of hack takes advantage of the LP token\\nprice oracle in order to over-borrow from a lending provider.\\n\\n\x3c!--truncate--\x3e\\n\\n## The Solution\\n\\nThanks to Alpha Finance Lab we have a solution: Fair LP Token Pricing [3].\\n\\n![](./assets/2022-01-20-Fair-LP-Token-Oracles_FairPriceFormula.png)\\n\\nWhere, r is the amount of reserves, and p is the given price, for each pool\\nmember.\\n\\nThe fair LP formula takes into account the weight of each pool member\u2019s\\nliquidity to determine a fair price. What that means is as a pool imbalance\\ngrows, the price of the LP token decreases in order to lower the risk of flash\\nloan attacks being able to over-borrow against them.\\n\\nSwitchboard oracles now give you the option to calculate the fair price of an LP\\ntoken using the\\n[LpTokenPriceTask](https://docs.switchboard.xyz/architecture/task#lptokenpricetask).\\nSwitchboard\u2019s solution requires an existing aggregator for each pool member so\\nthat the formula is always using the previous aggregator result for each pool\\nmember\u2019s price to prevent additional manipulation.\\n\\nThese feeds are live now so check out our feed explorer for an example of what\\nthese on-chain jobs look like:\\n\\n- [LP MERCURIAL USDC USDT PAI](https://switchboard.xyz/explorer/0/DhfLLj2NeBHBN2t7ksjwiZjpigzzTPSX9fwEiXyV9zDc)\\n\\n- [LP MERCURIAL USDC USDT wUST](https://switchboard.xyz/explorer/0/2WUiZrSqyyfz65o36hmYw8XDXzTtGjt8qK7Co67E8km9)\\n\\n- [LP SABER USDT USDC](https://switchboard.xyz/explorer/0/GnTHvhe4opQXHL4JGgDpfQKk2JY1ugmVLWvJocTH639q)\\n\\n- [LP SABER wUST USDC](https://switchboard.xyz/explorer/0/AgChoQ3C9Zj68p6qrEs9ffp1dHcBsgFnw5jA3oWcq1c)\\n\\n- [LP SABER mSOL SOL](https://switchboard.xyz/explorer/0/6ZuSuX14mxyZQ8JgjAC9PoDcbAU9sr1umUoyYVseVaNF)\\n\\n- [LP ORCA SOL USDC](https://switchboard.xyz/explorer/0/EX8SxM4XcJyYBf6JWZArQkemXHNf88Z4CpDqDC8VdnKr)\\n\\n- [LP ORCA USDC USDT](https://switchboard.xyz/explorer/0/DSPkZDVs4d5qMqThBCNUzemnUjgSPBjbGxL9otDfcjyB)\\n\\n- [LP ORCA mSOL SOL](https://switchboard.xyz/explorer/0/DrKZHV8aRb9RNtjwGwJe3LBzemVqzJB1X7Z52dm4m7w)\\n\\n- [LP RAYDIUM SOL USDC](https://switchboard.xyz/explorer/0/WppSmFsZqKGzJcUL9vcU3VJTYpa2BXF6QEiRUVZjRDz)\\n\\n## References\\n\\n- [1]\\n  [https://academy.binance.com/en/articles/what-are-liquidity-pools-in-defi](https://academy.binance.com/en/articles/what-are-liquidity-pools-in-defi)\\n\\n- [2]\\n  [https://peckshield.medium.com/warpfinance-incident-root-cause-analysis-581a4869ee00](https://peckshield.medium.com/warpfinance-incident-root-cause-analysis-581a4869ee00)\\n\\n- [3]\\n  [https://blog.alphafinance.io/fair-lp-token-pricing/](https://blog.alphafinance.io/fair-lp-token-pricing/)"},{"id":"/2021/11/03/Switchboard-V2-Incentives","metadata":{"permalink":"/blog/2021/11/03/Switchboard-V2-Incentives","source":"@site/blog/2021/11-03-Switchboard-V2-Incentives.mdx","title":"Switchboard V2 (pt.3) \u2014 Incentives","description":"","date":"2021-11-03T00:00:00.000Z","formattedDate":"November 3, 2021","tags":[],"readingTime":9.485,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard V2 (pt.3) \u2014 Incentives","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Fair LP Token Oracles","permalink":"/blog/2022/01/20/Fair-LP-Token-Oracles"},"nextItem":{"title":"Switchboard V2 (pt.2)\u200a\u2014\u200aArchitecture and Data Flows","permalink":"/blog/2021/10/12/Switchboard-V2-Architecture-and-Data-Flows"}},"content":"When designing a decentralized protocol, it\u2019s not enough to ensure your code is\\nwell tested \u2014 you must also align the various parties so no single entity can\\ngame the system. Today\u2019s article will walk through the design of Switchboard V2\\nand how incentives are aligned to minimize trust in the protocol. Check out some\\nof our past articles for more background on Switchboard, and how it works.\\n\\nIncentives are mechanisms to influence an individual or group to behave in a\\ncertain manner. For example, tax cuts are a government incentive that reduces an\\nentity\u2019s operating cost to promote spending. Similarly, many food delivery\\ncompanies subsidize delivery fees to capture future market share. These are all\\nextrinsic incentives because you expect some kind of reward for your actions.\\nExtrinsic incentives can only get you so far; eventually the food delivery\\ncompanies will need to turn a profit. Decentralized projects cannot operate in\\nthe same manner as traditional companies where a single group can make the\\ndecision to sacrifice profit for future market share. Instead the incentives\\nmust be baked into the protocol and be known to all parties up front.\\n\\nSwitchboard was created to level the playing field and provide equal access to\\non-chain data which allows anyone to suggest, approve, and update feeds. We hope\\nthe community will be intrinsically motivated to support this vision and\\nactively participate to bring this to fruition. Switchboard will never whitelist\\nparticipants and will rely on the community to make improvements as the network\\nmatures. The following paragraphs detail how Switchboard is designed and how the\\ncommunity is able to tweak the protocol to align everyone\u2019s incentives.\\n\\n\x3c!--truncate--\x3e\\n\\n## Governance\\n\\nLet\u2019s begin with the governance system. Switchboard is governed by its\\nstakeholders via a democratic DAO (Decentralized Autonomous Organization).\\nSwitchboard participants are free to propose changes that fall into two\\ncategories: Protocol proposals and Queue proposals.\\n\\nProtocol proposals impact the overall architecture of Switchboard and have\\ndeeper impacts on the network. An example of this might be increasing the number\\nof oracles a single queue can support or upgrading the on-chain program to add\\nadditional features requested by the community. Protocol proposals impact all\\nqueues on the network so changes should be carefully laid out and discussed\\nbefore reaching consensus.\\n\\nQueue proposals impact a single oracle queue and can change various queue\\nparameters to help reach equilibrium between oracles and data feed updates. Some\\nof these parameters include:\\n\\n- Minimum stake required for an Oracle to join the queue\\n\\n- Criteria for a data feed to be automatically approved to use the queue\\n\\n- Admitting additional data feeds to use the queue\u2019s Oracle resources\\n\\n- Slashing rates for misbehaving Oracles\\n\\nGiving the users of the protocol a stake in the network (\u201cskin in the game\u201d)\\naligns their incentives toward a common goal: providing permission-less on-chain\\ndata for smart contract developers to reliably build upon. It is **NOT** in the\\nbest interest of the switchboard community to implement changes that could\\nweaken the protocol or allow oracles to report dishonest data. Therefore it is\\nup to the community to remain an active participant and propose improvements\\nthat align with the common goal and keep all parties happy.\\n\\nUpon the launch of V2, the Switchboard DAO will provide at least three oracle\\nqueues with varying levels of security based on the publisher\u2019s needs.\\nSwitchboard is a permission-less network so anyone can spin up their own Oracle\\nqueues and control these parameters themselves. This is especially useful for\\nprojects needing data from private endpoints or projects needing more\\ncentralized control over their data. The rest of this article will be focused on\\nthe Switchboard DAO and how oracle queues will be managed by the community.\\n\\nInitially, the Switchboard DAO quorum will consist of oracle operators as they\\nare the most familiar with the protocol constraints. There is no shortage of\\npotential data feeds that developers want on-chain, so it\u2019s the number of\\noracles that will be the limiting factor as the network scales in the early\\ndays. Oracle operators are best positioned to evaluate the impact of new feeds\\nand how it may impact their oracle\u2019s performance or how changing oracle rewards\\nmay entice their peers to game the system. It is important to keep the initial\\nquorum smaller in the early days of the network as it allows changes to be\\nimplemented faster. Future DAO proposals will expand the DAO and include the\\nother network participants.\\n\\n## Incentives\\n\\nSwitchboard at its fundamental level is a data provider for smart contracts.\\nDevelopers expect to receive a single result that is sourced from multiple\\nendpoints, confirmed by multiple oracles, and updated at a set interval. The\\npublisher is usually an on-chain consumer of the data so they are responsible\\nfor setting the data feed configuration up-front to meet their use cases. The\\nfollowing paragraphs detail how the Switchboard protocol leverages incentives to\\ngive developers more confidence in the final oracle result.\\n\\n### Job Diversity\\n\\nAs we are all too familiar with, the classical web lacks redundancy meaning a\\nsingle network failure can crash an entire corporation, as we saw with Facebook\\na few weeks ago. This is not a concern for blockchains but being as Switchboard\\nis the gateway between the two, it is up to the protocol to mitigate any outside\\nnetwork disruptions. To deal with potential data sources being unreachable,\\nSwitchboard incentivizes Curators to scour the internet and find redundant data\\nsources. Switchboard will provide the initial, open source reference\\nimplementation that will allow anyone to submit potential data sources into a\\nregistry for the Publishers to aggregate and build data feeds from. In return,\\ncurators are rewarded with a percentage of the fees generated from a data feed.\\nThe goal is to give everyone a role in the network and reward them for improving\\nthe integrity of the network. When building a data feed, publishers can also\\nspecify the minimum number of endpoints that must respond before accepting a\\nresult. This flexibility gives the publisher more control over how a result is\\nderived and gives them more confidence in the protocol.\\n\\n### Rate Limiting\\n\\nRequested data feed updates will often be hitting the same endpoint fairly\\nfrequently (e.g. FTX.com). To mitigate rate limiting, some level of\\npseudo-randomness jitter is introduced to the feed scheduler to prevent requests\\nhitting the same endpoint at the exact configured update interval. This helps\\nthe network optimize for the lowest queries per second (QPS) and distributes\\nexternal requests more efficiently.\\n\\n### Approving New Feeds\\n\\nData feeds are added to the network by either a DAO vote or having a\\nsufficiently long enough update interval. The update interval threshold is set\\nby the DAO and ensures new feeds joining the network can only consume a finite\\namount of oracle resources in a set timeframe.\\n\\nPublishers are responsible for funding a lease contract which provides the\\nupfront capital to reward oracle operators for processing their scheduled\\nupdates. This up-front capital incentivizes publishers to only publish feeds\\nthat are worthwhile and provide them some kind of value. A publisher is free to\\npropose any feed and eat the capital cost, as long as the oracles are rewarded\\nfor their work. The lease contract amount is proportional to the length a\\npublisher expects to receive updates, the number of oracles processing a given\\nfeed update, as well as the oracle rewards set by the DAO. Oracle rewards are an\\nupfront agreement between the publisher and oracle operators and should remain\\nstatic, at least in the initial DAO quorum where oracle operators could collude\\nto raise prices. Publishers are free to choose a queue with a lower cost but\\nthey may be sacrificing security so it\u2019s up to the publishers to find the right\\nbalance.\\n\\n### Extraneous Feeds\\n\\nThere may be a need for multiple data feeds resolving the same value but needing\\ndifferent configurations depending on the publisher\u2019s use case. For instance,\\none feed may need a higher fidelity of confidence requiring a greater number of\\noracle and job responses to dictate a final result, which in turn requires a\\nhigher up-front capital cost for the publisher and could cause slower updates in\\nthe event the set number of jobs fail to respond. Another feed may just need the\\nclosest approximation as fast as possible. Switchboard\u2019s flexibility gives\\npublishers a wide array of options to control how a value gets derived but like\\nall products, a publisher\u2019s use case may change over time. In this event, a\\npublisher may elect to extend another publisher\u2019s lease and spread the capital\\ncost to multiple on-chain consumers. This results in the feeds with the most use\\nhaving the lowest capital cost to the on-chain consumers. This also further\\nincentivizes curators to find resilient endpoints that get used frequently. This\\npositive feedback loop creates an environment where the strongest feeds get\\nextended and the remaining fall off the stack.\\n\\n### Oracle Incentives\\n\\nSwitchboard is an open network allowing anyone to run an oracle but there are\\nmany reasons an oracle may be incentivized to game the system. For example, if\\nwe know a smart contract is using a particular feed to calculate a collateral\\nratio, an oracle could under-report the asset price and cause a liquidation or\\ncause someone to not get the fair market rate for a trade. There\u2019s a myriad of\\nreasons an oracle could try and cheat so careful consideration was given to\\nincentivize honest oracle behavior.\\n\\nOracles are required to stake the set amount of capital specified by the Queue\u2019s\\nDAO, which acts as an insurance policy to entice oracle operators to report\\nhonest results. Each oracle queue can have different staking requirements to\\ninfluence its security. If the staking requirement is set too low it could\\nattract dishonest oracles, but if set too high oracles may find a better use of\\ntheir capital elsewhere.\\n\\nAn oracle\u2019s reward for a given round is determined by how many oracles respond\\nand the oracles response compared to the accepted, median result. Oracles are\\nrewarded each time they submit a result and then reevaluated when an accepted\\nresult has been accepted.\\n\\nWhen a result has been accepted, the oracle rewards are redistributed to the\\noracles that responded within the acceptable range. The median result filters\\nthe outliers and means an attacker needs to control the majority of the assigned\\noracles in order to skew a result. This is why increasing the oracle stake\\nrequirements increases the security of the network because the attacker will\\nneed more up-front capital to fund the attack. Oracle\u2019s get assigned to data\\nfeeds in a round robin fashion with feeds scheduled at varying intervals and\\noracle amounts so even if an attacker controls 10% of the oracles, there is no\\nguarantee their oracles will get assigned to the same feed.\\n\\n### Slashing\\n\\nAfter the on-chain contract has accepted a result, it rewards the oracles who\\nresponded within the acceptable range, which is set when the queue is\\ninitialized. Any oracle who responded outside the acceptable range will be\\nslashed and lose a portion of their staked capital. The slashing amount can be\\nchanged by the DAO to further incentivize honest oracle behavior.\\n\\n## Conclusion\\n\\nSwitchboard was designed to let the community dictate the protocol parameters at\\nthe protocol and oracle queue level to meet any developers use case. Stay tuned\\nfor more information on the initial DAO implementation."},{"id":"/2021/10/12/Switchboard-V2-Architecture-and-Data-Flows","metadata":{"permalink":"/blog/2021/10/12/Switchboard-V2-Architecture-and-Data-Flows","source":"@site/blog/2021/10-12-Switchboard-V2-Architecture-and-Data-Flows.mdx","title":"Switchboard V2 (pt.2)\u200a\u2014\u200aArchitecture and Data Flows","description":"","date":"2021-10-12T00:00:00.000Z","formattedDate":"October 12, 2021","tags":[],"readingTime":5.89,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard V2 (pt.2)\u200a\u2014\u200aArchitecture and Data Flows","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard V2 (pt.3) \u2014 Incentives","permalink":"/blog/2021/11/03/Switchboard-V2-Incentives"},"nextItem":{"title":"Switchboard x GRAPE Network","permalink":"/blog/2021/10/04/Switchboard-x-GRAPE-Network"}},"content":"In a previous article we looked at the different stakeholders and how they\\noperate within Switchboard V2. Today\u2019s article will focus on the technical\\ncomponents and how they interact with each other. So let\u2019s jump right in.\\n\\n## Overview\\n\\n**_What is a Data Feed?_**\\n\\nA data feed is the centerpiece of Switchboard and is what on-chain developers\\nwill use when building smart contracts. A data feed is a collection of jobs that\\nget aggregated to produce some deterministic result. Each job is associated with\\nan endpoint and has a number of tasks that get executed in sequential order in\\norder to produce a single value. Typically the first task in a job will fetch\\nexternal data with subsequent tasks responsible for parsing the response and\\ntransforming the value into a single data type, like an integer or decimal. When\\nan oracle is assigned to process a data feed update, the oracle executes the\\ndefined jobs and publishes the median result on-chain. The data feed then\\ncomputes the final value as the median response among the assigned oracles. In\\nsummary, the data feed is the blueprint for how data gets fetched from off-chain\\nsources.\\n\\n![](./assets/2021-10-12-Switchboard-V2-Architecture-and-Data-Flows_FeedComposition.jpg)\\n\\nAlong with the jobs, a data feed also includes a configuration dictating how\\noften a feed should be updated and the minimum number of jobs or oracles that\\nmust respond before accepting a result. The publisher is ultimately responsible\\nfor building a data feed and making the necessary trade-offs as it\u2019s a careful\\nbalance between cost and update interval. The publisher is usually the on-chain\\nconsumer of the data and will have the most familiarity with how the data may be\\nused to make these considerations.\\n\\n\x3c!--truncate--\x3e\\n\\n**_Types of Data Feeds_**\\n\\nOnce a data feed has been configured, it needs to be assigned an oracle queue to\\nprocess updates. Data feeds can be public, where they are approved by the DAO\\nand have access to its oracle queue, or private, where the publisher has their\\nown oracle infrastructure or agreements with oracle operators to process their\\nupdates. A private feed has the added benefit of embedding API keys within a job\\nfor any endpoints that require authentication, meaning a greater level of trust\\nis needed between publishers and oracles. These keys will need to be created by\\nindividual oracle operators or provided by the private feed creator. The rest of\\nthis article will be focused on public feeds requiring DAO approval.\\n\\n**_Lease Contract_**\\n\\nOracle queues have a finite amount of resources proportional to its number of\\noracles so the DAO may reject new feeds that could cause delays on existing\\nfeeds. The publisher is responsible for creating a lease contract to reserve a\\nset amount of computer power from the oracle queue. Once a publisher\u2019s feed is\\naccepted by the DAO, the feed is added to the network and granted permissions to\\nuse the oracle queue resources.\\n\\nUpon creating a lease contract, the publisher may specify a withdrawal authority\\nand fund the lease contract to reward oracle operators for processing any future\\nupdates. The withdrawal authority allows a publisher to cancel and refund their\\nlease contract at any moment and specifies where any remaining lease balance is\\nsent. The lease fee is derived from the oracle rewards dictated by each oracle\\nqueue. This value can be increased over time to entice additional oracles to\\njoin the queue or decreased to entice additional publishers to submit new feeds.\\nIf a data feed\u2019s lease is low on funds, any update requests will fail and the\\nfeed will be removed from any scheduled updates. As a feed gains popularity,\\nother dApp developers will be incentivized to extend the lease and keep it\\nactive. This creates a natural decay where unused feeds go unfunded to make room\\nfor new use cases.\\n\\n**_Oracle Queue_**\\n\\nThe Switchboard DAO governs how its oracle resources get allocated and rewarded.\\nOracles are arranged in a round-robin fashion, where once requested, the next N\\noracles in the queue are assigned to a feed and cycled to the bottom. Oracle\\npositions are periodically swapped to mitigate oracles being assigned to the\\nsame feeds each cycle. A single Oracle queue was architected to support over\\n100,000 oracles, but given rent costs, the initial implementation will cap queue\\nsizes at 2048 and increase it as the network grows.\\n\\n## Execution\\n\\n**_The Crank_**\\n\\nData feeds can also be configured so they are updated periodically or\\non-command, depending on the feed\u2019s use cases. Solana has no mechanism to\\nschedule periodic updates so a Crank is used to jump start the system. Any feed\\napproved by the DAO is free to join the oracle queue\u2019s crank. The Crank is a\\npriority queue of data feed public keys ordered by the feeds next available\\nupdate time. When cranked, Switchboard will look for any data feeds ready for an\\nupdate and if successful, reward the user who called it. If no data feed is\\nready to be updated, the crankers transaction will fail and they could\\npotentially lose their transaction fee. The crank is the scheduler behind the\\noracles and incentivizes users to help keep the system spinning. Anyone can\\ncompete to turn the crank but there can be only one!\\n\\n![](./assets/2021-10-12-Switchboard-V2-Architecture-and-Data-Flows_Highlander.jpg)\\n\\nWhen a data feed update is detected, the oracle queue moves the next N oracles\\nto the back of the queue and passes the data feed public key to each oracle to\\nbegin processing the update. Each oracle then reads the data feed configuration,\\nexecutes each job, then publishes their results on-chain. Oracles are always on\\nthe queue and can process multiple feed updates when requested.\\n\\n**_Oracle Rewards_**\\n\\nIf enough oracles successfully respond, an on-chain program will aggregate the\\nassigned oracle results and return the median value as the final result. Each\\noracle is then scored based on their response. The variance threshold is\\ndictated by the DAO on a per queue basis and is used when determining the\\nvalidity of an oracle\u2019s response in relation to the accepted, median result.\\nOracles within the acceptable range are awarded whatever fee is set by the DAO.\\nOracles who\u2019s responses fall outside the acceptable range will be slashed and\\nmust forfeit a set amount of their staked capital. The slashing mechanism\\ndisincentivizes oracles from reporting dishonest data and helps protect the\\nsystem from nodes who may have other incentives to return false data. A future\\narticle will detail the various incentives to entice nodes to remain honest.\\n\\nEach feed keeps track of the number of successful and failed responses. If a\\nfeed has persistent failures, then the feed is removed from the oracle queue and\\nthe publisher is refunded the remaining balance on the lease contract to the\\nwithdrawal authority specified when creating the lease contract.\\n\\nThe diagram below depicts the system in action:\\n\\n![](./assets/2021-10-12-Switchboard-V2-Architecture-and-Data-Flows_FeedLifecycle.png)\\n\\nSwitchboard V2 gives more ways for you to join the network, whether that\u2019s\\noperating a node, publishing feeds, or cranking the system. We are excited to\\nroll out the next version of our community curated oracles and can\u2019t wait to see\\nwhat the community builds with it!"},{"id":"/2021/10/04/Switchboard-x-GRAPE-Network","metadata":{"permalink":"/blog/2021/10/04/Switchboard-x-GRAPE-Network","source":"@site/blog/2021/10-04-Switchboard-x-GRAPE-Network.mdx","title":"Switchboard x GRAPE Network","description":"","date":"2021-10-04T00:00:00.000Z","formattedDate":"October 4, 2021","tags":[],"readingTime":0.81,"hasTruncateMarker":false,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard x GRAPE Network","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard V2 (pt.2)\u200a\u2014\u200aArchitecture and Data Flows","permalink":"/blog/2021/10/12/Switchboard-V2-Architecture-and-Data-Flows"},"nextItem":{"title":"Switchboard V2 (pt. 1)\u200a\u2014\u200aRoles and Responsibilities","permalink":"/blog/2021/09/30/Switchboard-V2-Roles-and-Responsibilities"}},"content":"Switchboard is proud to announce a partnership with the Grape Network. The Grape\\nNetwork is creating the building blocks for decentralized social networks paving\\nthe way for permission-less communities. Much like how the internet paved the\\nway for how we think about and form communities, Grape Network is leveraging the\\nSolana blockchain to take that to the next level. Utilizing the Solana\\nblockchain, user interactions are amplified with on-chain data allowing\\ndifferent communities to interweave and form partnerships.\\n\\nSwitchboard is providing the on-chain oracle infrastructure for the Grape\\nNetwork to leverage, allowing each data source to be vetted and aligned to user\\nincentives. The Grape Network is currently using Switchboard to provide on-chain\\ndata for community metrics, like number of wallets and total value locked (TVL),\\nas well as NFT metrics, like number of unique holders and number of NFTs per\\ncommunity.\\n\\nSwitchboard is excited to form this partnership with the Grape Network and can\u2019t\\nwait to see what they build next!"},{"id":"/2021/09/30/Switchboard-V2-Roles-and-Responsibilities","metadata":{"permalink":"/blog/2021/09/30/Switchboard-V2-Roles-and-Responsibilities","source":"@site/blog/2021/09-30-Switchboard-V2-Roles-and-Responsibilities.mdx","title":"Switchboard V2 (pt. 1)\u200a\u2014\u200aRoles and Responsibilities","description":"","date":"2021-09-30T00:00:00.000Z","formattedDate":"September 30, 2021","tags":[],"readingTime":2.445,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard V2 (pt. 1)\u200a\u2014\u200aRoles and Responsibilities","description":"","authors":["gallynaut"],"tags":[],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard x GRAPE Network","permalink":"/blog/2021/10/04/Switchboard-x-GRAPE-Network"},"nextItem":{"title":"Intro to Switchboard","permalink":"/blog/2021/09/22/Intro-to-Switchboard"}},"content":"Switchboard V1 let us show the community how data can be routed on-chain and\\nprovided to smart contracts. Since inception, Switchboard has been adopted by\\nmany projects across the Solana ecosystem including Mango Markets, Saber, LIQ,\\nand Solend, but we\u2019re not done there. Switchboard V2 will build upon these\\nconcepts and give more power to the community to determine the direction of the\\nproject. Over the next few weeks we will be rolling out more information on the\\ndesign of V2 and look to the community for feedback. Without further ado, here\\nis an overview of some of the roles and responsibilities for Switchboard V2.\\n\\n![How Data Feeds Are Added to the Network](./assets/2021-09-30-Switchboard-V2-Roles-and-Responsibilities_Roles.png)\\n\\n\x3c!--truncate--\x3e\\n\\nSwitchboard V2 allows the community to decide which data should live on-chain.\\nBelow are the main roles of the Switchboard ecosystem, and the functions each\\nrole performs:\\n\\n![](./assets/2021-09-30-Switchboard-V2-Roles-and-Responsibilities_AllTheData.png)\\n\\n**Curators** are the visionaries of the network and are responsible for finding\\noff-chain data the community may like to see on-chain and submitting proposals\\nto a registry. Curators are then rewarded with a percentage of revenue generated\\nfrom a data feed to incentivize community curation. The registry acts as a \u201cData\\nStore\u201d where people can view proposed on-chain data.\\n\\n**Publishers** are responsible for browsing the registry and building data feeds\\nfrom a collection of \u201cjobs\u201d (endpoints). Publishers then finalize the data feed\\nconfiguration including its update interval, provide the upfront capital to fund\\nthe data feed over a specified interval, and submit the data feed to the DAO for\\nthe community to vote on.\\n\\nThe **DAO** has a few key responsibilities which include voting on adding\\npotential data feeds to the network. The DAO lets the community decide what data\\nshould be published on chain.\\n\\nIf a submitted data feed has a low refresh rate such that it does not tax the\\nexisting queue, it will be automatically granted permission to the network. Once\\na data feed has been accepted to the network, it will be added to the oracle\\nqueue and updated at its specified interval set by the publisher.\\n\\n![How Oracles Are Added to the Network](./assets/2021-09-30-Switchboard-V2-Roles-and-Responsibilities_Nodes.png)\\n\\n**Oracles** are nodes who are responsible for fulfilling network requests and\\nact as the intermediary between the Solana blockchain and the internet. Oracles\\nwith a set amount of capital staked are automatically granted approval to the\\nnetwork. Oracles can also be added to the network by submitting a DAO proposal\\nand letting the community vote. An oracle is then ready to fulfill job requests\\nafter a specified warm up period. Future articles will go into further details\\nwith the incentives nodes have to remain honest.\\n\\nAs you can see Switchboard V2 puts more power into the hands of the community.\\nThe DAO is responsible for what data is available on-chain and which nodes can\\nfulfill those requests. We are excited to roll out the next iteration of\\nSwitchboard and can\u2019t wait to see what the community builds with Switchboard!"},{"id":"/2021/09/22/Intro-to-Switchboard","metadata":{"permalink":"/blog/2021/09/22/Intro-to-Switchboard","source":"@site/blog/2021/09-22-Intro-to-Switchboard.mdx","title":"Intro to Switchboard","description":"Switchboard is a community-driven, decentralized oracle network built on Solana","date":"2021-09-22T00:00:00.000Z","formattedDate":"September 22, 2021","tags":[{"label":"switchboard","permalink":"/blog/tags/switchboard"},{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":4.85,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Intro to Switchboard","authors":["gallynaut"],"tags":["switchboard","introduction"],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard V2 (pt. 1)\u200a\u2014\u200aRoles and Responsibilities","permalink":"/blog/2021/09/30/Switchboard-V2-Roles-and-Responsibilities"},"nextItem":{"title":"Switchboard partners with Genesis Volatility to provide on-chain volatility data on Solana","permalink":"/blog/2021/06/28/Switchboard-Partners-with-Genesis-Volatility"}},"content":"Switchboard is a community-driven, decentralized oracle network built on Solana\\nthat allows anyone to publish on-chain data for smart contract developers to\\nreliably build upon.\\n\\n![](./assets/2021-09-22-Intro-to-Switchboard_Banner.png)\\n\\n## What is an Oracle?\\n\\nSmart contracts are the building blocks of web3 and can be thought of as the\\nlogic behind programmable money, although their use cases extend well beyond\\njust monetary transactions. A smart contract encapsulates some pre-defined logic\\nallowing anonymous participants to interact without a trusted intermediary. More\\ncomplex smart contracts might rely on external data from the web but blockchains\\ndo not have the capability of directly relaying this information. Enter oracles.\\n\\nOracles are the gateway between a blockchain and the real world, providing the\\nmechanisms to arrive at a reliable consensus for a single data point when given\\nmultiple sources. Oracles can then determine the most reliable value of the data\\npoint after examining the provided answer of each data source. In this way,\\noracles increase information integrity by removing the risk of a single point of\\nfailure or outlier. Oracle services have many applicable uses in blockchain\\nbased applications today, such as:\\n\\n- Determining the current price of an asset for collateralized lending\\n\\n- Determining the state of a tracking number to auto settle funds on arrival\\n\\n- Determining the current standings of the MLB for fantasy sports rankings\\n\\nOracles can be used for a variety of data sets as long as there is a reliable\\nway to source the information.\\n\\n\x3c!--truncate--\x3e\\n\\n## What is Switchboard?\\n\\nSwitchboard is a community-driven, decentralized oracle network built on Solana\\nthat allows anyone to publish on-chain data for smart contract developers to\\nreliably build upon. Switchboard is a community governed protocol \u2014 if\\nadditional on-chain data is needed, head over to our\\n[documentation](https://app.gitbook.com/@switchboard-1/s/switchboard/) to learn\\nhow to spin up your own data feeds. [Or reach](mailto:hello@switchboard.xyz) out\\nto learn more.\\n\\nSolana was chosen for its sub-second transaction speed, allowing faster refresh\\nrates of on-chain data to help support it\u2019s thriving developer ecosystem.\\nDeveloping an oracle solution in this high-availability environment poses its\\nown set of challenges that the Switchboard team is excited to solve!\\n\\nSwitchboard gets its name from the early days of phone networks, when operators\\nwould shuffle telephone lines around a switchboard to complete a circuit and\\nforward a dialer\u2019s call to the next hop in the circuit. Similarly, Switchboard\\nis responsible for how external data gets updated and routed through the Solana\\nblockchain until it reaches its appropriate destination.\\n\\n## How Switchboard V1 Works\\n\\nFor the rest of this article I will use the results of the current MLB season to\\nshow how oracles can be used and some of the security concerns Switchboard\\naddresses. **Note**: You can view the current MLB results on-chain at\\n[switchboard.xyz/explorer](https://switchboard.xyz/explorer).\\n\\nLet\u2019s say you make a bet with your only friend. If the NY Yankees finish the\\nseason with more wins than the Red Sox, then your friend will give you an \u201cI \u2764\\nNY\u201d NFT. However, if the Red Sox finish with more wins, you have to give your\\nfriend a \u201cBoston Strong\u201d NFT. You\u2019re both into cryptocurrency so you have no\\nother friends that could be the intermediary for the bet. Luckily, a smart\\ncontract can hold both NFTs as collateral and only release the NFTs when the\\nseason is complete. After the last game of the season, you invoke your smart\\ncontract to settle the bet, which fetches the number of wins for each team and\\nreturns the correct NFT to each party. Fairly straightforward, but let\u2019s dive\\ndeeper.\\n\\nSwitchboard works by first defining a **Data Feed**. The data feed account holds\\nthe results of the oracle and can be updated on command or at some interval. For\\nthis example we would have two data feeds, one for each team that defines their\\ntotal wins. These are the accounts the smart contract will use when the season\\nis over and we want to settle.\\n\\nEach data feed is then populated with at least one **Data Feed Job** which\\ndefines where and how the data is sourced. A job contains the API endpoint we\\nare fetching data from as well as the JSONPath Syntax which defines how to grab\\nthe needed information from the API result. Switchboard also allows you to\\nconceal an API key within a job if the endpoint requires it for additional\\nsecurity. For this use case it is best to source directly from the MLB\u2019s API but\\nwe would also want a few additional data sources to increase our confidence. So\\nnow we\u2019ve defined how to get the information and where to store it on-chain,\\nlet\u2019s see how the request gets fulfilled.\\n\\nNext we need to assign the data feed to a **Fulfillment Manager**. The\\nfulfillment manager is responsible for orchestrating a cluster of **Switchboard\\nNodes** to perform the next update for a linked data feed. Switchboard is a\\ncommunity driven oracle so anyone can create their own fulfillment manager or\\nrun a node to perform updates which in turn increases the overall integrity of\\nthe network. When invoked by the fulfillment manager, each node is responsible\\nfor reporting the median result of all assigned jobs to the on-chain smart\\ncontract. The smart contract then aggregates the results from each node and\\ncalculates the final result as the median of all node responses.\\n\\nSo now we\u2019ve seen how external data gets routed through Switchboard and provided\\non-chain. But what if there was more at stake? After all blockchains are\\npermission-less networks so trust should be minimized. To mitigate risk of API\u2019s\\nreporting erroneous data we use the median result among the assigned jobs and\\nnode responses to filter outliers. But how do we minimize malicious nodes from\\nsubmitting incorrect data? Stay tuned for more information on Switchboard V2!\\n\\n## Community Resources\\n\\n- [Website](https://switchboard.xyz/)\\n\\n- [Github](https://github.com/switchboard-xyz)\\n\\n- [Discord](https://discord.com/invite/sNeGymrabT)\\n\\n- [Telegram](https://t.me/switchboardxyz)"},{"id":"/2021/06/28/Switchboard-Partners-with-Genesis-Volatility","metadata":{"permalink":"/blog/2021/06/28/Switchboard-Partners-with-Genesis-Volatility","source":"@site/blog/2021/06-28-Switchboard-Partners-with-Genesis-Volatility.mdx","title":"Switchboard partners with Genesis Volatility to provide on-chain volatility data on Solana","description":"We\u2019re excited to announce a partnership with Genesis Volatility, the leading","date":"2021-06-28T00:00:00.000Z","formattedDate":"June 28, 2021","tags":[{"label":"switchboard","permalink":"/blog/tags/switchboard"},{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":1.17,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard partners with Genesis Volatility to provide on-chain volatility data on Solana","authors":["gallynaut"],"tags":["switchboard","introduction"],"hide_table_of_contents":true},"prevItem":{"title":"Intro to Switchboard","permalink":"/blog/2021/09/22/Intro-to-Switchboard"},"nextItem":{"title":"Switchboard raises 3.5MM seed and announces Solana Mainnet Beta","permalink":"/blog/2021/06/17/Switchboard-Raises-3.5MM-Seed"}},"content":"We\u2019re excited to announce a partnership with Genesis Volatility, the leading\\nprovider of crypto options data, to provide volatility data on-chain. Options\\ndata has been one of the most requested feeds from projects building on Solana\\nand we\u2019re proud to work with Genesis Volatility, to bring it to Solana\u2019s mainnet\\n\u2014 starting today with BTC and ETH Implied Volatilities.\\n\\nDevelopers looking to build on top of Switchboard can learn more about building\\non top of Switchboard with our\\n[getting started guide](http://getting-started.switchboard.xyz/) or dive\\nstraight in with our [feeds explorer](https://switchboard.xyz/#/explorer). If\\nyou\u2019re building an application relying on on-chain data feeds or would like to\\nsee a certain type of data on-chain, we\u2019d love to hear from you! Stay connected\\non our [Discord](http://discord.switchboard.xyz) /\\n[Telegram](http://telegram.switchboard.xyz) communities and follow us on\\n[twitter](http://twitter.switchboard.xyz) to stay on top of Switchboard\u2019s latest\\ndevelopments!\\n\\n\x3c!--truncate--\x3e\\n\\n## About Switchboard\\n\\nSwitchboard is building a community curated oracle ecosystem on Solana.\\nSwitchboard\u2019s goal is to enable censorship resistant access to all forms of data\\non-chain and to help power the next generation of decentralized applications on\\ntop of Solana.\\n\\n## About Genesis Volatility\\n\\nGenesis Volatility is a leading institutional-grade crypto options data\\nprovider. Genesis Volatility allows option traders the ability to analyze key\\nmetrics of implied volatility, open interest, volume and realized volatility for\\nseamless option trading. Their tools assist in identifying opportunities,\\nmanaging risks, formulating better trade strategies, and efficiently analyzing\\nhistorical data."},{"id":"/2021/06/17/Switchboard-Raises-3.5MM-Seed","metadata":{"permalink":"/blog/2021/06/17/Switchboard-Raises-3.5MM-Seed","source":"@site/blog/2021/06-17-Switchboard-Raises-3.5MM-Seed.mdx","title":"Switchboard raises 3.5MM seed and announces Solana Mainnet Beta","description":"We\u2019re excited to share that Switchboard has raised a $3.5MM seed round led by","date":"2021-06-17T00:00:00.000Z","formattedDate":"June 17, 2021","tags":[{"label":"switchboard","permalink":"/blog/tags/switchboard"},{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":1.825,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Switchboard raises 3.5MM seed and announces Solana Mainnet Beta","authors":["gallynaut"],"tags":["switchboard","introduction"],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard partners with Genesis Volatility to provide on-chain volatility data on Solana","permalink":"/blog/2021/06/28/Switchboard-Partners-with-Genesis-Volatility"},"nextItem":{"title":"Introducing Switchboard","permalink":"/blog/2021/05/25/Introducing-Switchboard"}},"content":"We\u2019re excited to share that Switchboard has raised a $3.5MM seed round led by\\nLemniscap to build out our community curated oracle network on Solana. This\\nround of funding allows us to continue our mission to bring support for the long\\ntail of data feeds on-chain in a decentralized, high-performance manner.\\n\\nParticipating investors included CMS Holdings, Taureon, Alameda Research, MGNR,\\nCollab + Currency, Divergence Ventures, Zeal Capital, SCC Investments, JST\\nCapital as well as angel investors Chris McCann, former Solana General Counsel\\nRyon Nixon and Recur executive Paul J Martin among others.\\n\\n\x3c!--truncate--\x3e\\n\\n![](./assets/2021-06-17-Switchboard-Raises-3.5MM-Seed_CapTable.png)\\n\\nChris McCann, an early seed investor in Solana, FTX, and backer of Switchboard\\nsaid:\\n\\n> \u201cThe Switchboard team is building on-chain data feeds and oracles which are\\n> some of the most critical infrastructure layers for all DeFi projects on\\n> Solana. \u201cEvery single DeFi project needs price oracles to rely on for their\\n> own products to function properly. On top of this, Switchboard has generalized\\n> their product to include all kinds of data feeds outside of pure price, which\\n> will all be community-driven and adopted. \u201cThis, in combination with Solana\u2019s\\n> low latency and high throughput will create a reliable data layer the whole\\n> ecosystem can rely on.\u201d\\n\\nSwitchboard was incubated by Manna, a proprietary trading and investment firm\\nfounded by Zach Bruch and Chris Hermida. Bruch has worked and held leadership\\npositions at three of the largest and most established institutional trading\\ndesks in the industry \u2014 Kraken, Cumberland/DRW, and JST Capital. Hermida\\nformerly led trading in Europe for Circle, and most recently was Global Co-head\\nof OTC trading at JST Capital.\\n\\n## Mainnet Beta\\n\\nAs part of the raise, we\u2019re also excited to announce our mainnet beta.\\nSwitchboard is the first oracle network to enable feeds on Solana\u2019s mainnet \u2014\\nallowing developers to take advantage of Solana\u2019s low transaction fees and fast\\nconfirmation times.\\n\\nIf you\u2019re building an application relying on on-chain data feeds or are\\ninterested in publishing data on-chain or running a node, reach out to us on our\\n[Discord](http://discord.switchboard.xyz/) /\\n[Telegram](http://telegram.switchboard.xyz/) to\\n[participate in our mainnet beta](https://forms.gle/ese7yF8UfA7naHxMA). Follow\\nus on [Twitter](http://twitter.switchboard.xyz/) to stay on top of the latest\\ndevelopments!\\n\\nTeam Switchboard"},{"id":"/2021/05/25/Introducing-Switchboard","metadata":{"permalink":"/blog/2021/05/25/Introducing-Switchboard","source":"@site/blog/2021/05-25-Introducing-Switchboard.mdx","title":"Introducing Switchboard","description":"Switchboard is building community curated oracle feeds on Solana.","date":"2021-05-25T00:00:00.000Z","formattedDate":"May 25, 2021","tags":[{"label":"switchboard","permalink":"/blog/tags/switchboard"},{"label":"introduction","permalink":"/blog/tags/introduction"}],"readingTime":1.845,"hasTruncateMarker":true,"authors":[{"name":"gallynaut","title":"Developer Relations","url":"https://twitter.com/gallynaut","imageURL":"https://pbs.twimg.com/profile_images/1649642820993679365/buRwDkVY_400x400.jpg","key":"gallynaut"}],"frontMatter":{"title":"Introducing Switchboard","authors":["gallynaut"],"tags":["switchboard","introduction"],"hide_table_of_contents":true},"prevItem":{"title":"Switchboard raises 3.5MM seed and announces Solana Mainnet Beta","permalink":"/blog/2021/06/17/Switchboard-Raises-3.5MM-Seed"}},"content":"Switchboard is building community curated oracle feeds on Solana.\\n\\nWe want to enable anyone in the SOL community to push any form of data, whether\\nfinancial time series or non-financial event-based data, on-chain and to help\\npower the next generation of decentralized applications.\\n\\n## Why Switchboard & Why Solana\\n\\n- Oracles are a critical component of DeFi infrastructure that enable smart\\n  contracts to interact with real world data. Too many solutions have focused on\\n  financial and time series data rather than generalizing to all forms of data.\\n\\n- Data on-chain isn\u2019t free and there needs to be a sustainable curation &\\n  incentive mechanism to determine what data will be maintained on-chain.\\n\\n- Data integrity and incentive mechanisms need to be driven by the market and\\n  community. Scaling these sorts of decisions and supporting a broader set of\\n  data feeds requires a high performance, shared state chain.\\n\\n- By focusing on community and market driven curation, Switchboard enables a\\n  much broader set of data providers and consumers to decide what they would\\n  like to see on-chain. The long tail of data is much more than just price\\n  feeds!\\n\\n\x3c!--truncate--\x3e\\n\\n## Switchboard Devnet Beta\\n\\nIn line with expanding community access, we\u2019ve launched our devnet beta so that\\ncommunity members can begin building.\\n\\n[Switchboard.xyz](https://switchboard.xyz/#/explorer)\\n\\n![](./assets/2021-05-25-Introducing-Switchboard_Explorer.png)\\n\\nOur initial aggregators are cryptocurrency and sports feeds, as requested by the\\ncommunity. Given Solana\u2019s low transaction cost and speed, we\u2019re working on\\nsupporting a much broader set of feeds than traditionally available from\\ndecentralized oracles. It\u2019s our belief that Solana will become one of the\\npremier destinations for developers building high performance, decentralized\\napplications and we can\u2019t wait to see what you\u2019ll build with Switchboard.\\n\\nYou can find more about building using Switchboard and integrating Switchboard\\nfeeds into your Solana application on our\\n[documentation](https://switchboard-xyz.github.io/switchboard-api/).\\n\\nWe\u2019ll also be hosting a technical workshop for the\\n[Solana hackathon](https://airtable.com/shr2P5e3aLRLXdy7E/tblgRI4QqKdkY6Ja2) on\\n[Thursday May 28th at 11:30 AM EDT](https://www.twitch.tv/solanatv)\\n\\nIf you\u2019re building an application relying on on-chain data feeds or would like\\nto see a certain type of data on-chain, feel free to reach out to us on our\\n[Discord](https://discord.gg/sNeGymrabT) /\\n[Telegram](https://t.me/switchboardxyz). We\u2019d love to hear from you! Finally,\\ngive us a follow on [Twitter](https://twitter.com/switchboardxyz) to stay on top\\nof latest developments!"}]}')}}]);