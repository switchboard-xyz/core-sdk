"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2093],{3905:(t,n,l)=>{l.d(n,{Zo:()=>s,kt:()=>b});var e=l(67294);function r(t,n,l){return n in t?Object.defineProperty(t,n,{value:l,enumerable:!0,configurable:!0,writable:!0}):t[n]=l,t}function o(t,n){var l=Object.keys(t);if(Object.getOwnPropertySymbols){var e=Object.getOwnPropertySymbols(t);n&&(e=e.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),l.push.apply(l,e)}return l}function i(t){for(var n=1;n<arguments.length;n++){var l=null!=arguments[n]?arguments[n]:{};n%2?o(Object(l),!0).forEach((function(n){r(t,n,l[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(l,n))}))}return t}function u(t,n){if(null==t)return{};var l,e,r=function(t,n){if(null==t)return{};var l,e,r={},o=Object.keys(t);for(e=0;e<o.length;e++)l=o[e],n.indexOf(l)>=0||(r[l]=t[l]);return r}(t,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(e=0;e<o.length;e++)l=o[e],n.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(t,l)&&(r[l]=t[l])}return r}var a=e.createContext({}),k=function(t){var n=e.useContext(a),l=n;return t&&(l="function"==typeof t?t(n):i(i({},n),t)),l},s=function(t){var n=k(t.components);return e.createElement(a.Provider,{value:n},t.children)},c={inlineCode:"code",wrapper:function(t){var n=t.children;return e.createElement(e.Fragment,{},n)}},p=e.forwardRef((function(t,n){var l=t.components,r=t.mdxType,o=t.originalType,a=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),p=k(l),b=r,d=p["".concat(a,".").concat(b)]||p[b]||c[b]||o;return l?e.createElement(d,i(i({ref:n},s),{},{components:l})):e.createElement(d,i({ref:n},s))}));function b(t,n){var l=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var o=l.length,i=new Array(o);i[0]=p;var u={};for(var a in n)hasOwnProperty.call(n,a)&&(u[a]=n[a]);u.originalType=t,u.mdxType="string"==typeof t?t:r,i[1]=u;for(var k=2;k<o;k++)i[k]=l[k];return e.createElement.apply(null,i)}return e.createElement.apply(null,l)}p.displayName="MDXCreateElement"},61441:(t,n,l)=>{l.d(n,{ZP:()=>i});var e=l(83117),r=(l(67294),l(3905));const o={toc:[]};function i(t){let{components:n,...l}=t;return(0,r.kt)("wrapper",(0,e.Z)({},o,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Env Variable"),(0,r.kt)("th",null,"Definition"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"FS_PAYER_SECRET_PATH"),(0,r.kt)("td",null,(0,r.kt)("b",null,"Type")," - Filesystem Path",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Local filesystem path to keypair file that will pay for on-chain transactions and is the authority for the oracle")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"PAYER_SECRETS or DOCKER_PAYER_SECRET"),(0,r.kt)("td",null,(0,r.kt)("b",null,"Type")," - Docker Secret",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Docker Secret path to keypair file that will pay for on-chain transactions and is the authority for the oracle")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"GOOGLE_PAYER_SECRET_PATH"),(0,r.kt)("td",null,(0,r.kt)("b",null,"Type")," - GCP Resource Path",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Google cloud resource to manage your keypair securely.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"AMAZON_PAYER_SECRET_PATH"),(0,r.kt)("td",null,(0,r.kt)("b",null,"Type")," - AWS ARN path",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Amazon web services ARN path of secret.")))))}i.isMDXComponent=!0},25161:(t,n,l)=>{l.d(n,{ZP:()=>i});var e=l(83117),r=(l(67294),l(3905));const o={toc:[]};function i(t){let{components:n,...l}=t;return(0,r.kt)("wrapper",(0,e.Z)({},o,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Env Variable"),(0,r.kt)("th",null,"Definition"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"METRICS_EXPORTER"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Optional")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - prometheus / gcp / opentelemetry-collector*",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - prometheus",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Dictates which metric suite to aggregate resource metrics, as defined in:",(0,r.kt)("br",null),(0,r.kt)("a",{href:"./monitoring"},"Oracle - Monitoring"),(0,r.kt)("br",null),"*opentelemetry-collector only supports the default endpoint localhost:55681/v1/metric")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"PAGERDUTY_EVENT_KEY"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Optional")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - String",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - Paging disabled",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Token provided by pagerduty for sending pages about various alerts.",(0,r.kt)("br",null),(0,r.kt)("a",{href:"./monitoring#alerts"},"Oracle - Alerts"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"VERBOSE"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Optional")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - Flag (0 or 1)",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - 0, normal logging",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Set to 1 to increase the level of logging")))))}i.isMDXComponent=!0},66997:(t,n,l)=>{l.d(n,{ZP:()=>i});var e=l(83117),r=(l(67294),l(3905));const o={toc:[]};function i(t){let{components:n,...l}=t;return(0,r.kt)("wrapper",(0,e.Z)({},o,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Env Variable"),(0,r.kt)("th",null,"Definition"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"TASK_RUNNER_SOLANA_RPC"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Required")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - URL",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Solana mainnet RPC URL to support fulfilling update requests for Switchboard tasks that are reliant on Solana on-chain data.",(0,r.kt)("br",null),(0,r.kt)("br",null),(0,r.kt)("b",null,"NOTE:")," This is not required if CHAIN is set to solana and CLUSTER is mainnet-beta.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"GCP_CONFIG_BUCKET"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Optional")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - GCP Resource Path",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - Looks for configs.json in the current working directory. If not found, no config is loaded.",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Contains API keys for private API endpoints")))))}i.isMDXComponent=!0},68836:(t,n,l)=>{l.r(n),l.d(n,{assets:()=>c,contentTitle:()=>k,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var e=l(83117),r=(l(67294),l(3905)),o=l(66997),i=l(61441),u=l(25161);const a={sidebar_position:10,slug:"/oracles/aptos",title:"Aptos"},k=void 0,s={unversionedId:"oracles/chains/aptos",id:"oracles/chains/aptos",title:"Aptos",description:"Aptos Config",source:"@site/docs/oracles/chains/aptos.mdx",sourceDirName:"oracles/chains",slug:"/oracles/aptos",permalink:"/oracles/aptos",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,slug:"/oracles/aptos",title:"Aptos"},sidebar:"operator",previous:{title:"Background",permalink:"/oracles/"},next:{title:"Near",permalink:"/oracles/near"}},c={},p=[{value:"Aptos Config",id:"aptos-config",level:2},{value:"Oracle Config",id:"oracle-config",level:2},{value:"Task Runner Config",id:"task-runner-config",level:2},{value:"Keypair Config",id:"keypair-config",level:2},{value:"Monitoring Config",id:"monitoring-config",level:2}],b={toc:p};function d(t){let{components:n,...l}=t;return(0,r.kt)("wrapper",(0,e.Z)({},b,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'env title="aptos.env"',env:!0,title:'"aptos.env"'},'CHAIN="aptos"\n# Aptos Config\nAPTOS_RPC_URL=""\nAPTOS_PID=""\n# Oracle Config\nAPTOS_ORACLE_KEY=""\nHEARTBEAT_INTERVAL=15\n# Task Runner Config\nTASK_RUNNER_SOLANA_RPC=""\nGCP_CONFIG_BUCKET="" # Optional, for private queues\n# Keypair Config, one-of required\nFS_PAYER_SECRET_PATH=""\nDOCKER_PAYER_SECRET=""\nGOOGLE_PAYER_SECRET_PATH=""\nAMAZON_PAYER_SECRET_PATH=""\n# Monitoring Config\nMETRICS_EXPORTER="" # Optional\nPAGERDUTY_EVENT_KEY="" # Optional\nVERBOSE=1 # Optional\n')),(0,r.kt)("h2",{id:"aptos-config"},"Aptos Config"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Env Variable"),(0,r.kt)("th",null,"Definition"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"CHAIN"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Required to be set to 'aptos'")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - aptos / near / solana*",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - solana",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Dictates which chain to listen for on-chain events",(0,r.kt)("br",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"APTOS_RPC_URL"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Required")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - URL",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Aptos RPC URL. Must not be rate limited")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"APTOS_PID"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Required")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - HexString",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - On-chain address of the deployed Switchboard V2 program")))),(0,r.kt)("h2",{id:"oracle-config"},"Oracle Config"),(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Env Variable"),(0,r.kt)("th",null,"Definition"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,"APTOS_ORACLE_KEY"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Required")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - Public Key",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Public key of the oracle account that has been granted permissions to use an oracle queue ",(0,r.kt)("br",null))),(0,r.kt)("tr",null,(0,r.kt)("td",null,"HEARTBEAT_INTERVAL"),(0,r.kt)("td",null,(0,r.kt)("b",null,(0,r.kt)("u",null,"Optional")),(0,r.kt)("br",null),(0,r.kt)("b",null,"Type")," - Number (seconds)",(0,r.kt)("br",null),(0,r.kt)("b",null,"Default")," - 30",(0,r.kt)("br",null),(0,r.kt)("b",null,"Description")," - Seconds between oracle heartbeats. Queues have different oracle heartbeat requirements. Recommended value is 15")))),(0,r.kt)("h2",{id:"task-runner-config"},"Task Runner Config"),(0,r.kt)(o.ZP,{mdxType:"TaskRunnerEnv"}),(0,r.kt)("h2",{id:"keypair-config"},"Keypair Config"),(0,r.kt)("p",null,"You must provide one of the following environment variables, which is the same\nkeypair that is the authority for the given ",(0,r.kt)("inlineCode",{parentName:"p"},"$ORACLE_KEY")," and will pay for any\non-chain transactions."),(0,r.kt)(i.ZP,{mdxType:"KeypairEnv"}),(0,r.kt)("h2",{id:"monitoring-config"},"Monitoring Config"),(0,r.kt)(u.ZP,{mdxType:"MonitoringEnv"}))}d.isMDXComponent=!0}}]);