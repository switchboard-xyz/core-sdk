"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[99169],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(g,s(s({ref:t},d),{},{components:n})):a.createElement(g,s({ref:t},d))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(67294),r=n(86010);const o="tabItem_Ymn6";function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,s),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(83117),r=n(67294),o=n(86010),s=n(72389),i=n(67392),l=n(7094),c=n(12466);const d="tabList__CuJ",p="tabItem_LNqP";function u(e){var t,n;const{lazy:s,block:u,defaultValue:m,values:g,groupId:b,className:v}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=g?g:f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const k=null===m?m:null!=(t=null!=m?m:null==(n=f.find((e=>e.props.default)))?void 0:n.props.value)?t:f[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:x}=(0,l.U)(),[T,E]=(0,r.useState)(k),D=[],{blockElementScrollPositionUntilNextRender:A}=(0,c.o5)();if(null!=b){const e=w[b];null!=e&&e!==T&&h.some((t=>t.value===e))&&E(e)}const S=e=>{const t=e.currentTarget,n=D.indexOf(t),a=h[n].value;a!==T&&(A(t),E(a),null!=b&&x(b,String(a)))},Z=e=>{var t;let n=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":{var a;const t=D.indexOf(e.currentTarget)+1;n=null!=(a=D[t])?a:D[0];break}case"ArrowLeft":{var r;const t=D.indexOf(e.currentTarget)-1;n=null!=(r=D[t])?r:D[D.length-1];break}}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",d)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},v)},h.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:e=>D.push(e),onKeyDown:Z,onClick:S},s,{className:(0,o.Z)("tabs__item",p,null==s?void 0:s.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),s?(0,r.cloneElement)(f.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})))))}function m(e){const t=(0,s.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},27433:(e,t,n)=>{n.d(t,{Z:()=>C});var a=n(44267),r=n(15861),o=n(21519),s=n(80102),i=n(83117),l=n(67294),c=n(86010),d=n(94780),p=n(33616),u=n(90948),m=n(34867);function g(e){return(0,m.Z)("MuiCardHeader",e)}const b=(0,n(1588).Z)("MuiCardHeader",["root","avatar","action","content","title","subheader"]);var v=n(85893);const f=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],h=(0,u.ZP)("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(e,t)=>(0,i.Z)({[`& .${b.title}`]:t.title,[`& .${b.subheader}`]:t.subheader},t.root)})({display:"flex",alignItems:"center",padding:16}),y=(0,u.ZP)("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(e,t)=>t.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),k=(0,u.ZP)("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(e,t)=>t.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),w=(0,u.ZP)("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(e,t)=>t.content})({flex:"1 1 auto"}),x=l.forwardRef((function(e,t){const n=(0,p.Z)({props:e,name:"MuiCardHeader"}),{action:a,avatar:o,className:l,component:u="div",disableTypography:m=!1,subheader:b,subheaderTypographyProps:x,title:T,titleTypographyProps:E}=n,D=(0,s.Z)(n,f),A=(0,i.Z)({},n,{component:u,disableTypography:m}),S=(e=>{const{classes:t}=e;return(0,d.Z)({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},g,t)})(A);let Z=T;null==Z||Z.type===r.Z||m||(Z=(0,v.jsx)(r.Z,(0,i.Z)({variant:o?"body2":"h5",className:S.title,component:"span",display:"block"},E,{children:Z})));let C=b;return null==C||C.type===r.Z||m||(C=(0,v.jsx)(r.Z,(0,i.Z)({variant:o?"body2":"body1",className:S.subheader,color:"text.secondary",component:"span",display:"block"},x,{children:C}))),(0,v.jsxs)(h,(0,i.Z)({className:(0,c.Z)(S.root,l),as:u,ref:t,ownerState:A},D,{children:[o&&(0,v.jsx)(y,{className:S.avatar,ownerState:A,children:o}),(0,v.jsxs)(w,{className:S.content,ownerState:A,children:[Z,C]}),a&&(0,v.jsx)(k,{className:S.action,ownerState:A,children:a})]}))}));var T=n(44073),E=n(39960),D=n(13264),A=n(92949);const S=(0,D.Z)(T.Z)((e=>{let{theme:t,dark:n}=e;return{display:"flex",flexDirection:"row",justifyItems:"baseline",background:n?"rgba(42, 56, 68, 1)":"rgba(255, 255, 255, 0.6)",border:(n?.15:.1)+"rem solid var(--ifm-navbar-link-color)",borderRadius:"13.2px",boxShadow:"0 6px 7px 5px rgba(107 107 107, 0.03)",boxSizing:"border-box",width:"100%",height:"100%",verticalAlign:"middle",textDecoration:"none",[t.breakpoints.down(300)]:{paddingLeft:""},transition:"transform 0.15s ease-in-out","&&&:hover":{background:n?"rgba(42, 56, 68, 1)":"white",transform:"scale3d(1.05, 1.05, 1)"}}})),Z=(0,D.Z)(x)((e=>{let{theme:t}=e;return{display:"flex",maxHeight:"96px"}}));function C(e){let{title:t,image:n,imageDark:s,description:i,to:c,sx:d}=e;const{colorMode:p}=(0,A.I)();return l.createElement(E.Z,{href:c,style:{textDecoration:"none"}},l.createElement(S,{dark:"dark"===p?1:0,sx:d},l.createElement(a.Z,{sx:{height:"100%",width:"100%"}},l.createElement(Z,{avatar:l.createElement("div",{style:{height:48,width:48,display:"flex",alignItems:"center",justifyContent:"center"}},"dark"===p&&s?s:n),title:t,titleTypographyProps:{fontSize:"1.25rem",color:"var(--ifm-navbar-link-color)",fontWeight:"var(--ifm-font-weight-bold)"}}),i?l.createElement(l.Fragment,null,l.createElement(o.Z,{sx:{marginBottom:"1rem"}}),l.createElement(r.Z,{variant:"body2",color:"textSecondary",component:"p",sx:{color:"var(--ifm-navbar-link-color)",fontSize:"1.1rem"}},i)):l.createElement(l.Fragment,null))))}},17547:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(86886),r=n(67294),o=n(27433);function s(e){let{items:t,cols:n,sx:s}=e;return r.createElement(a.ZP,{container:!0,spacing:3},t.map((e=>{var t;return r.createElement(a.ZP,{item:!0,style:{flexGrow:1},xs:12,md:6,lg:Math.floor(null!=(t=12/n)?t:2)},r.createElement(o.Z,{title:e.title,image:e.image,imageDark:e.imageDark,to:e.to,description:e.description,sx:s}))})))}},29195:(e,t,n)=>{n.d(t,{ZP:()=>l});var a=n(83117),r=(n(67294),n(3905)),o=n(17547),s=n(44996);const i={toc:[]};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},i,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(o.Z,{cols:3,items:[{to:"/aptos/program/mainnet",title:"Mainnet",description:"View the Mainnet deployment accounts",image:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/light.svg")}),imageDark:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/dark.svg")})},{to:"/aptos/program/testnet",title:"Testnet",description:"View the Testnet deployment accounts",image:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/light.svg")}),imageDark:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/dark.svg")})},{to:"/aptos/program/devnet",title:"Devnet",description:"View the Devnet deployment accounts",image:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/light.svg")}),imageDark:(0,r.kt)("img",{src:(0,s.Z)("/img/icons/aptos/dark.svg")})}],mdxType:"RoundedCardGroup"}))}l.isMDXComponent=!0},18600:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>v,frontMatter:()=>d,metadata:()=>u,toc:()=>g});var a=n(83117),r=(n(67294),n(3905)),o=n(65488),s=n(85162),i=n(17547),l=n(44996),c=n(29195);const d={sidebar_position:10,slug:".",title:"@switchboard-xyz/aptos.js"},p=void 0,u={unversionedId:"aptos/dev/javascript/client",id:"aptos/dev/javascript/client",title:"@switchboard-xyz/aptos.js",description:"GitHub&nbsp;",source:"@site/docs/aptos/dev/javascript/client.mdx",sourceDirName:"aptos/dev/javascript",slug:"/aptos/dev/javascript/",permalink:"/aptos/dev/javascript/",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10,slug:".",title:"@switchboard-xyz/aptos.js"},sidebar:"aptos",previous:{title:"Sbv2 CLI",permalink:"/aptos/dev/cli"},next:{title:"sbv2-aptos",permalink:"/aptos/dev/move/"}},m={},g=[{value:"Quick Links",id:"quick-links",level:2},{value:"Live Deployment:",id:"live-deployment",level:2},{value:"Install",id:"install",level:2},{value:"Creating Feeds",id:"creating-feeds",level:2},{value:"Reading Feeds",id:"reading-feeds",level:2},{value:"Listening to Updates",id:"listening-to-updates",level:2}],b={toc:g};function v(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/switchboard-xyz/sbv2-aptos"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/--181717?logo=github&logoColor=ffffff",alt:"GitHub"})),"\xa0","\n",(0,r.kt)("a",{parentName:"p",href:"https://twitter.com/switchboardxyz"},(0,r.kt)("img",{parentName:"a",src:"https://badgen.net/twitter/follow/switchboardxyz",alt:"twitter"})),"\xa0","\xa0","\n",(0,r.kt)("a",{parentName:"p",href:"https://badge.fury.io/js/@switchboard-xyz%2Faptos.js"},(0,r.kt)("img",{parentName:"a",src:"https://badge.fury.io/js/@switchboard-xyz%2Faptos.js.svg",alt:"npm version"}))),(0,r.kt)("p",null,"A library of utility functions to interact with Switchboard Modules on Aptos"),(0,r.kt)("h2",{id:"quick-links"},"Quick Links"),(0,r.kt)(i.Z,{cols:2,items:[{to:"https://github.com/switchboard-xyz/sbv2-aptos/tree/main/javascript/aptos.js",title:"Github",description:"View the Github repo",image:(0,r.kt)("img",{src:(0,l.Z)("/img/icons/github/light.svg")}),imageDark:(0,r.kt)("img",{src:(0,l.Z)("/img/icons/github/dark.svg")})},{to:"https://docs.switchboard.xyz/api/@switchboard-xyz/aptos.js/",title:"Typedocs",description:"View the Typedocs",image:(0,r.kt)("img",{src:(0,l.Z)("/img/icons/typedoc/logo.svg")}),imageDark:(0,r.kt)("img",{src:(0,l.Z)("/img/icons/typedoc/logo.svg")})}],mdxType:"RoundedCardGroup"}),(0,r.kt)("h2",{id:"live-deployment"},"Live Deployment:"),(0,r.kt)("p",null,"We're currently deployed on Aptos Testnet and Aptos Devnet."),(0,r.kt)(c.ZP,{mdxType:"AptosNetworks"}),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)(o.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"npm",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install --save @switchboard-xyz/aptos.js\n"))),(0,r.kt)(s.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @switchboard-xyz/aptos.js\n")))),(0,r.kt)("h2",{id:"creating-feeds"},"Creating Feeds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { Buffer } from "buffer";\nimport { AptosClient, AptosAccount, FaucetClient, HexString } from "aptos";\nimport {\n  AptosEvent,\n  EventCallback,\n  OracleJob,\n  createFeed,\n} from "@switchboard-xyz/aptos.js";\nimport Big from "big.js";\n\nconst NODE_URL = "https://fullnode.testnet.aptoslabs.com/v1";\nconst FAUCET_URL = "https://faucet.testnet.aptoslabs.com";\n\nconst SWITCHBOARD_TESTNET_ADDRESS =\n  "0xb27f7bbf7caf2368b08032d005e8beab151a885054cdca55c4cc644f0a308d2b";\n\nconst SWITCHBOARD_QUEUE_ADDRESS =\n  "0xb27f7bbf7caf2368b08032d005e8beab151a885054cdca55c4cc644f0a308d2b";\n\nconst SWITCHBOARD_CRANK_ADDRESS =\n  "0xb27f7bbf7caf2368b08032d005e8beab151a885054cdca55c4cc644f0a308d2b";\n\nconst client = new AptosClient(NODE_URL);\nconst faucetClient = new FaucetClient(NODE_URL, FAUCET_URL);\n\n// create new user\nlet user = new AptosAccount();\n\nawait faucetClient.fundAccount(user.address(), 50000);\nconsole.log(`User account ${user.address().hex()} created + funded.`);\n\n// Make Job data for btc price\nconst serializedJob = Buffer.from(\n  OracleJob.encodeDelimited(\n    OracleJob.create({\n      tasks: [\n        {\n          httpTask: {\n            url: "https://www.binance.us/api/v3/ticker/price?symbol=BTCUSD",\n          },\n        },\n        {\n          jsonParseTask: {\n            path: "$.price",\n          },\n        },\n      ],\n    })\n  ).finish()\n);\n\nconst [aggregator, createFeedTx] = await createFeed(\n  client,\n  user,\n  {\n    authority: user.address(),\n    queueAddress: SWITCHBOARD_QUEUE_ADDRESS, // account with OracleQueue resource\n    crankAddress: SWITCHBOARD_CRANK_ADDRESS, // account with Crank resource\n    batchSize: 1, // number of oracles to respond to each round\n    minJobResults: 1, // minimum # of jobs that need to return a result\n    minOracleResults: 1, // minumum # of oracles that need to respond for a result\n    minUpdateDelaySeconds: 5, // minimum delay between rounds\n    coinType: "0x1::aptos_coin::AptosCoin", // CoinType of the queue (now only AptosCoin)\n    initialLoadAmount: 1000, // load of the lease\n    jobs: [\n      {\n        name: "BTC/USD",\n        metadata: "binance",\n        authority: user.address().hex(),\n        data: serializedJob.toString("base64"), // jobs need to be base64 encoded strings\n        weight: 1,\n      },\n    ],\n  },\n  SWITCHBOARD_TESTNET_ADDRESS\n);\n\nconsole.log(\n  `Created Aggregator and Lease resources at account address ${aggregator.address}. Tx hash ${createFeedTx}`\n);\n\n// Manually trigger an update\nawait aggregator.openRound(user);\n')),(0,r.kt)("h2",{id:"reading-feeds"},"Reading Feeds"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'import { AggregatorAccount } from "@switchboard-xyz/aptos.js";\n\nconst aggregatorAccount: AggregatorAccount = new AggregatorAccount(\n  client,\n  aggregator_address,\n  SWITCHBOARD_TESTNET_ADDRESS\n);\n\nconsole.log(await aggregatorAccount.loadData());\n')),(0,r.kt)("h2",{id:"listening-to-updates"},"Listening to Updates"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'/**\n * Listen to Aggregator Updates Off-Chain\n */\n\n// create event listener\nconst onAggregatorUpdate = (\n  client: AptosClient,\n  cb: EventCallback,\n  pollIntervalMs: number = 1000\n) => {\n  const event = new AptosEvent(\n    client,\n    HexString.ensure(SWITCHBOARD_TESTNET_ADDRESS),\n    `${SWITCHBOARD_TESTNET_ADDRESS}::switchboard::State`,\n    "aggregator_update_events",\n    pollIntervalMs\n  );\n  event.onTrigger(cb);\n  return event;\n};\n\n// initialize event listener\nconst updatePoller = onAggregatorUpdate(client, async (e) => {\n  if (aggregator.address == e.data.aggregator_address) {\n    console.log(`NEW RESULT:`, e.data);\n  }\n});\n')))}v.isMDXComponent=!0}}]);